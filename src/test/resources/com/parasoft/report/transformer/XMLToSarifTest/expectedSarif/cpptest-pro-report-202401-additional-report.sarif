{ "$schema": "https://docs.oasis-open.org/sarif/sarif/v2.1.0/errata01/os/schemas/sarif-schema-2.1.0.json", "version": "2.1.0", "runs": [ {"tool": { "driver": {"name": "C/C++test", "semanticVersion": "2024.1.0","rules": [{ "id": "APSC_DV-002560-f", "name": "Avoid potential integer overflow\/underflow on tainted data", "shortDescription": { "text": "Avoid potential integer overflow\/underflow on tainted data" }, "fullDescription": { "text": "Avoid potential integer overflow\/underflow on tainted data [APSC_DV-002560-f]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid potential integer overflow\/underflow on tainted data [APSC_DV-002560-f]" }, "properties": { "tags": [ "DISA ASD STIG", "APSC_DV-002560 The application must not be subject to input handling vulnerabilities." ] } }, { "id": "APSC_DV-002560-k", "name": "Untrusted data is used as a loop boundary", "shortDescription": { "text": "Untrusted data is used as a loop boundary" }, "fullDescription": { "text": "Untrusted data is used as a loop boundary [APSC_DV-002560-k]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Untrusted data is used as a loop boundary [APSC_DV-002560-k]" }, "properties": { "tags": [ "DISA ASD STIG", "APSC_DV-002560 The application must not be subject to input handling vulnerabilities." ] } }, { "id": "APSC_DV-003110-a", "name": "Do not hard code string literals", "shortDescription": { "text": "Do not hard code string literals" }, "fullDescription": { "text": "Do not hard code string literals [APSC_DV-003110-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Do not hard code string literals [APSC_DV-003110-a]" }, "properties": { "tags": [ "DISA ASD STIG", "APSC_DV-003110 The application must not contain embedded authentication data." ] } }, { "id": "APSC_DV-002000-a", "name": "Ensure resources are freed", "shortDescription": { "text": "Ensure resources are freed" }, "fullDescription": { "text": "Ensure resources are freed [APSC_DV-002000-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Ensure resources are freed [APSC_DV-002000-a]" }, "properties": { "tags": [ "DISA ASD STIG", "APSC_DV-002000 The application must terminate all network connections associated with a communications session at the end of the session." ] } }, { "id": "APSC_DV-002520-f", "name": "Avoid potential integer overflow\/underflow on tainted data", "shortDescription": { "text": "Avoid potential integer overflow\/underflow on tainted data" }, "fullDescription": { "text": "Avoid potential integer overflow\/underflow on tainted data [APSC_DV-002520-f]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid potential integer overflow\/underflow on tainted data [APSC_DV-002520-f]" }, "properties": { "tags": [ "DISA ASD STIG", "APSC_DV-002520 The application must protect from canonical representation vulnerabilities." ] } }, { "id": "APSC_DV-002520-k", "name": "Untrusted data is used as a loop boundary", "shortDescription": { "text": "Untrusted data is used as a loop boundary" }, "fullDescription": { "text": "Untrusted data is used as a loop boundary [APSC_DV-002520-k]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Untrusted data is used as a loop boundary [APSC_DV-002520-k]" }, "properties": { "tags": [ "DISA ASD STIG", "APSC_DV-002520 The application must protect from canonical representation vulnerabilities." ] } }, { "id": "APSC_DV-003235-a", "name": "The value returned by a POSIX library function that may return an error should be used", "shortDescription": { "text": "The value returned by a POSIX library function that may return an error should be used" }, "fullDescription": { "text": "The value returned by a POSIX library function that may return an error should be used [APSC_DV-003235-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The value returned by a POSIX library function that may return an error should be used [APSC_DV-003235-a]" }, "properties": { "tags": [ "DISA ASD STIG", "APSC_DV-003235 The application must not be subject to error handling vulnerabilities." ] } }, { "id": "APSC_DV-002390-c", "name": "Do not use scanf and fscanf functions without specifying variable size in format string", "shortDescription": { "text": "Do not use scanf and fscanf functions without specifying variable size in format string" }, "fullDescription": { "text": "Do not use scanf and fscanf functions without specifying variable size in format string [APSC_DV-002390-c]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Do not use scanf and fscanf functions without specifying variable size in format string [APSC_DV-002390-c]" }, "properties": { "tags": [ "DISA ASD STIG", "APSC_DV-002390 XML-based applications must mitigate DoS attacks by using XML filters, parser options, or gateways." ] } }, { "id": "APSC_DV-002590-g", "name": "Avoid potential integer overflow\/underflow on tainted data", "shortDescription": { "text": "Avoid potential integer overflow\/underflow on tainted data" }, "fullDescription": { "text": "Avoid potential integer overflow\/underflow on tainted data [APSC_DV-002590-g]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid potential integer overflow\/underflow on tainted data [APSC_DV-002590-g]" }, "properties": { "tags": [ "DISA ASD STIG", "APSC_DV-002590 The application must not be vulnerable to overflow attacks." ] } }, { "id": "APSC_DV-002550-f", "name": "Avoid potential integer overflow\/underflow on tainted data", "shortDescription": { "text": "Avoid potential integer overflow\/underflow on tainted data" }, "fullDescription": { "text": "Avoid potential integer overflow\/underflow on tainted data [APSC_DV-002550-f]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid potential integer overflow\/underflow on tainted data [APSC_DV-002550-f]" }, "properties": { "tags": [ "DISA ASD STIG", "APSC_DV-002550 The application must not be vulnerable to XML-oriented attacks." ] } }, { "id": "APSC_DV-002550-k", "name": "Untrusted data is used as a loop boundary", "shortDescription": { "text": "Untrusted data is used as a loop boundary" }, "fullDescription": { "text": "Untrusted data is used as a loop boundary [APSC_DV-002550-k]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Untrusted data is used as a loop boundary [APSC_DV-002550-k]" }, "properties": { "tags": [ "DISA ASD STIG", "APSC_DV-002550 The application must not be vulnerable to XML-oriented attacks." ] } }, { "id": "APSC_DV-002530-f", "name": "Avoid potential integer overflow\/underflow on tainted data", "shortDescription": { "text": "Avoid potential integer overflow\/underflow on tainted data" }, "fullDescription": { "text": "Avoid potential integer overflow\/underflow on tainted data [APSC_DV-002530-f]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid potential integer overflow\/underflow on tainted data [APSC_DV-002530-f]" }, "properties": { "tags": [ "DISA ASD STIG", "APSC_DV-002530 The application must validate all input." ] } }, { "id": "APSC_DV-002530-k", "name": "Untrusted data is used as a loop boundary", "shortDescription": { "text": "Untrusted data is used as a loop boundary" }, "fullDescription": { "text": "Untrusted data is used as a loop boundary [APSC_DV-002530-k]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Untrusted data is used as a loop boundary [APSC_DV-002530-k]" }, "properties": { "tags": [ "DISA ASD STIG", "APSC_DV-002530 The application must validate all input." ] } }, { "id": "APSC_DV-001290-b", "name": "Untrusted data is used as a loop boundary", "shortDescription": { "text": "Untrusted data is used as a loop boundary" }, "fullDescription": { "text": "Untrusted data is used as a loop boundary [APSC_DV-001290-b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Untrusted data is used as a loop boundary [APSC_DV-001290-b]" }, "properties": { "tags": [ "DISA ASD STIG", "APSC_DV-001290 The application must protect audit information from unauthorized modification." ] } }, { "id": "AUTOSAR-M5_3_1-a", "name": "Each operand of the ! operator, the logical && or the logical || operators shall have type bool", "shortDescription": { "text": "Each operand of the ! operator, the logical && or the logical || operators shall have type bool" }, "fullDescription": { "text": "Each operand of the ! operator, the logical && or the logical || operators shall have type bool [AUTOSAR-M5_3_1-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Each operand of the ! operator, the logical && or the logical || operators shall have type bool [AUTOSAR-M5_3_1-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M5-3-1 Each operand of the ! operator, the logical && or the logical || operators shall have type bool" ] } }, { "id": "AUTOSAR-M27_0_1-a", "name": "The input\/output library stdio.h shall not be used", "shortDescription": { "text": "The input\/output library stdio.h shall not be used" }, "fullDescription": { "text": "The input\/output library stdio.h shall not be used [AUTOSAR-M27_0_1-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The input\/output library stdio.h shall not be used [AUTOSAR-M27_0_1-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M27-0-1 The stream input\/output library <cstdio> shall not be used" ] } }, { "id": "AUTOSAR-A15_1_4-a", "name": "Ensure resources are freed", "shortDescription": { "text": "Ensure resources are freed" }, "fullDescription": { "text": "Ensure resources are freed [AUTOSAR-A15_1_4-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Ensure resources are freed [AUTOSAR-A15_1_4-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A15-1-4 If a function exits with an exception, then before a throw, the function shall place all objects\/resources that the function constructed in valid states or it shall delete them" ] } }, { "id": "AUTOSAR-A15_1_2-a", "name": "An exception object should not have pointer type", "shortDescription": { "text": "An exception object should not have pointer type" }, "fullDescription": { "text": "An exception object should not have pointer type [AUTOSAR-A15_1_2-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "An exception object should not have pointer type [AUTOSAR-A15_1_2-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A15-1-2 An exception object shall not be a pointer" ] } }, { "id": "AUTOSAR-M0_1_10-a", "name": "Every defined function with external linkage shall be used at least once", "shortDescription": { "text": "Every defined function with external linkage shall be used at least once" }, "fullDescription": { "text": "Every defined function with external linkage shall be used at least once [AUTOSAR-M0_1_10-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Every defined function with external linkage shall be used at least once [AUTOSAR-M0_1_10-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M0-1-10 Every defined function should be called at least once" ] } }, { "id": "AUTOSAR-A15_1_1-a", "name": "Only use instances of std::exception for exceptions", "shortDescription": { "text": "Only use instances of std::exception for exceptions" }, "fullDescription": { "text": "Only use instances of std::exception for exceptions [AUTOSAR-A15_1_1-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Only use instances of std::exception for exceptions [AUTOSAR-A15_1_1-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A15-1-1 Only instances of types derived from std::exception shall be thrown" ] } }, { "id": "AUTOSAR-M8_4_4-a", "name": "A function identifier shall only be used with either a preceding '&', or with a parenthesised parameter list, which may be empty", "shortDescription": { "text": "A function identifier shall only be used with either a preceding '&', or with a parenthesised parameter list, which may be empty" }, "fullDescription": { "text": "A function identifier shall only be used with either a preceding '&', or with a parenthesised parameter list, which may be empty [AUTOSAR-M8_4_4-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "A function identifier shall only be used with either a preceding '&', or with a parenthesised parameter list, which may be empty [AUTOSAR-M8_4_4-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M8-4-4 A function identifier shall either be used to call the function or it shall be preceded by &" ] } }, { "id": "AUTOSAR-A2_7_3-a", "name": "All declarations of types, data members, and functions should be preceded by a comment annotated with the '@brief' tag", "shortDescription": { "text": "All declarations of types, data members, and functions should be preceded by a comment annotated with the '@brief' tag" }, "fullDescription": { "text": "All declarations of types, data members, and functions should be preceded by a comment annotated with the '@brief' tag [AUTOSAR-A2_7_3-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "All declarations of types, data members, and functions should be preceded by a comment annotated with the '@brief' tag [AUTOSAR-A2_7_3-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A2-7-3 All declarations of \"user-defined\" types, static and non-static data members, functions and methods shall be preceded by documentation using \"\/\/\/\" comments and \"@tag\" tags" ] } }, { "id": "AUTOSAR-A2_7_3-b", "name": "Function parameters and return type should be documented in a comment that precedes the function declaration", "shortDescription": { "text": "Function parameters and return type should be documented in a comment that precedes the function declaration" }, "fullDescription": { "text": "Function parameters and return type should be documented in a comment that precedes the function declaration [AUTOSAR-A2_7_3-b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Function parameters and return type should be documented in a comment that precedes the function declaration [AUTOSAR-A2_7_3-b]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A2-7-3 All declarations of \"user-defined\" types, static and non-static data members, functions and methods shall be preceded by documentation using \"\/\/\/\" comments and \"@tag\" tags" ] } }, { "id": "AUTOSAR-A1_1_1-d", "name": "The C library shall not be used", "shortDescription": { "text": "The C library shall not be used" }, "fullDescription": { "text": "The C library shall not be used [AUTOSAR-A1_1_1-d]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The C library shall not be used [AUTOSAR-A1_1_1-d]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A1-1-1 All code shall conform to ISO\/IEC 14882:2014 - Programming Language C++ and shall not use deprecated features" ] } }, { "id": "AUTOSAR-A5_6_1-a", "name": "Avoid division by zero", "shortDescription": { "text": "Avoid division by zero" }, "fullDescription": { "text": "Avoid division by zero [AUTOSAR-A5_6_1-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid division by zero [AUTOSAR-A5_6_1-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A5-6-1 The right hand operand of the integer division or remainder operators shall not be equal to zero" ] } }, { "id": "AUTOSAR-M5_0_15-a", "name": "Array indexing shall be the only allowed form of pointer arithmetic", "shortDescription": { "text": "Array indexing shall be the only allowed form of pointer arithmetic" }, "fullDescription": { "text": "Array indexing shall be the only allowed form of pointer arithmetic [AUTOSAR-M5_0_15-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Array indexing shall be the only allowed form of pointer arithmetic [AUTOSAR-M5_0_15-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M5-0-15 Array indexing shall be the only form of pointer arithmetic" ] } }, { "id": "AUTOSAR-A15_0_2-a", "name": "Ensure resources are freed", "shortDescription": { "text": "Ensure resources are freed" }, "fullDescription": { "text": "Ensure resources are freed [AUTOSAR-A15_0_2-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Ensure resources are freed [AUTOSAR-A15_0_2-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A15-0-2 At least the basic guarantee for exception safety shall be provided for all operations. In addition, each function may offer either the strong guarantee or the nothrow guarantee" ] } }, { "id": "AUTOSAR-M9_3_3-a", "name": "If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const", "shortDescription": { "text": "If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const" }, "fullDescription": { "text": "If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const [AUTOSAR-M9_3_3-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const [AUTOSAR-M9_3_3-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M9-3-3 If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const" ] } }, { "id": "AUTOSAR-M7_1_2-b", "name": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object", "shortDescription": { "text": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object" }, "fullDescription": { "text": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object [AUTOSAR-M7_1_2-b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object [AUTOSAR-M7_1_2-b]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M7-1-2 A pointer or reference parameter in a function shall be declared as pointer to const or reference to const if the corresponding object is not modified" ] } }, { "id": "AUTOSAR-A7_1_2-b", "name": "Use constexpr to declare functions whenever possible", "shortDescription": { "text": "Use constexpr to declare functions whenever possible" }, "fullDescription": { "text": "Use constexpr to declare functions whenever possible [AUTOSAR-A7_1_2-b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Use constexpr to declare functions whenever possible [AUTOSAR-A7_1_2-b]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A7-1-2 The constexpr specifier shall be used for values that can be determined at compile time" ] } }, { "id": "AUTOSAR-A7_1_1-a", "name": "Declare local variable as const whenever possible", "shortDescription": { "text": "Declare local variable as const whenever possible" }, "fullDescription": { "text": "Declare local variable as const whenever possible [AUTOSAR-A7_1_1-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Declare local variable as const whenever possible [AUTOSAR-A7_1_1-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A7-1-1 Constexpr or const specifiers shall be used for immutable data declaration" ] } }, { "id": "AUTOSAR-A18_0_1-a", "name": "The C library shall not be used", "shortDescription": { "text": "The C library shall not be used" }, "fullDescription": { "text": "The C library shall not be used [AUTOSAR-A18_0_1-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The C library shall not be used [AUTOSAR-A18_0_1-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A18-0-1 The C library facilities shall only be accessed through C++ library headers" ] } }, { "id": "AUTOSAR-M0_4_2-a", "name": "Use of floating-point arithmetic shall be documented", "shortDescription": { "text": "Use of floating-point arithmetic shall be documented" }, "fullDescription": { "text": "Use of floating-point arithmetic shall be documented [AUTOSAR-M0_4_2-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Use of floating-point arithmetic shall be documented [AUTOSAR-M0_4_2-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M0-4-2 Use of floating-point arithmetic shall be documented" ] } }, { "id": "AUTOSAR-A18_0_2-a", "name": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used", "shortDescription": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used" }, "fullDescription": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used [AUTOSAR-A18_0_2-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used [AUTOSAR-A18_0_2-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A18-0-2 The error state of a conversion from string to a numeric value shall be checked" ] } }, { "id": "AUTOSAR-A12_4_2-a", "name": "If a public destructor of a class is non-virtual, then the class should be declared final", "shortDescription": { "text": "If a public destructor of a class is non-virtual, then the class should be declared final" }, "fullDescription": { "text": "If a public destructor of a class is non-virtual, then the class should be declared final [AUTOSAR-A12_4_2-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "If a public destructor of a class is non-virtual, then the class should be declared final [AUTOSAR-A12_4_2-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A12-4-2 If a public destructor of a class is non-virtual, then the class should be declared final" ] } }, { "id": "AUTOSAR-A8_4_10-a", "name": "A parameter shall be passed by reference if it can't be NULL", "shortDescription": { "text": "A parameter shall be passed by reference if it can't be NULL" }, "fullDescription": { "text": "A parameter shall be passed by reference if it can't be NULL [AUTOSAR-A8_4_10-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "A parameter shall be passed by reference if it can't be NULL [AUTOSAR-A8_4_10-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A8-4-10 A parameter shall be passed by reference if it can't be NULL" ] } }, { "id": "AUTOSAR-A18_1_1-a", "name": "C-style arrays shall not be used", "shortDescription": { "text": "C-style arrays shall not be used" }, "fullDescription": { "text": "C-style arrays shall not be used [AUTOSAR-A18_1_1-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "C-style arrays shall not be used [AUTOSAR-A18_1_1-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A18-1-1 C-style arrays shall not be used" ] } }, { "id": "AUTOSAR-M2_10_1-a", "name": "Different identifiers shall be typographically unambiguous", "shortDescription": { "text": "Different identifiers shall be typographically unambiguous" }, "fullDescription": { "text": "Different identifiers shall be typographically unambiguous [AUTOSAR-M2_10_1-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Different identifiers shall be typographically unambiguous [AUTOSAR-M2_10_1-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M2-10-1 Different identifiers shall be typographically unambiguous" ] } }, { "id": "AUTOSAR-A7_1_7-b", "name": "Multiple variable declarations shall not be allowed on the same line", "shortDescription": { "text": "Multiple variable declarations shall not be allowed on the same line" }, "fullDescription": { "text": "Multiple variable declarations shall not be allowed on the same line [AUTOSAR-A7_1_7-b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Multiple variable declarations shall not be allowed on the same line [AUTOSAR-A7_1_7-b]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A7-1-7 Each expression statement and identifier declaration shall be placed on a separate line" ] } }, { "id": "AUTOSAR-A7_1_7-c", "name": "Each variable should be declared in a separate declaration statement", "shortDescription": { "text": "Each variable should be declared in a separate declaration statement" }, "fullDescription": { "text": "Each variable should be declared in a separate declaration statement [AUTOSAR-A7_1_7-c]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Each variable should be declared in a separate declaration statement [AUTOSAR-A7_1_7-c]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A7-1-7 Each expression statement and identifier declaration shall be placed on a separate line" ] } }, { "id": "AUTOSAR-M7_3_1-a", "name": "The global namespace shall only contain main() and namespace declarations", "shortDescription": { "text": "The global namespace shall only contain main() and namespace declarations" }, "fullDescription": { "text": "The global namespace shall only contain main() and namespace declarations [AUTOSAR-M7_3_1-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The global namespace shall only contain main() and namespace declarations [AUTOSAR-M7_3_1-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M7-3-1 The global namespace shall only contain main, namespace declarations and extern \"C\" declarations" ] } }, { "id": "AUTOSAR-A8_5_2-a", "name": "Braced-initialization {}, without equals sign, shall be used for variable initialization", "shortDescription": { "text": "Braced-initialization {}, without equals sign, shall be used for variable initialization" }, "fullDescription": { "text": "Braced-initialization {}, without equals sign, shall be used for variable initialization [AUTOSAR-A8_5_2-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Braced-initialization {}, without equals sign, shall be used for variable initialization [AUTOSAR-A8_5_2-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A8-5-2 Braced-initialization {}, without equals sign, shall be used for variable initialization" ] } }, { "id": "AUTOSAR-A9_3_1-a", "name": "Public member functions shall not return non-const handles to private\/protected class-data", "shortDescription": { "text": "Public member functions shall not return non-const handles to private\/protected class-data" }, "fullDescription": { "text": "Public member functions shall not return non-const handles to private\/protected class-data [AUTOSAR-A9_3_1-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Public member functions shall not return non-const handles to private\/protected class-data [AUTOSAR-A9_3_1-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A9-3-1 Member functions shall not return non-const \"raw\" pointers or references to private or protected data owned by the class" ] } }, { "id": "AUTOSAR-A5_3_2-a", "name": "Avoid null pointer dereferencing", "shortDescription": { "text": "Avoid null pointer dereferencing" }, "fullDescription": { "text": "Avoid null pointer dereferencing [AUTOSAR-A5_3_2-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid null pointer dereferencing [AUTOSAR-A5_3_2-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A5-3-2 Null pointers shall not be dereferenced" ] } }, { "id": "AUTOSAR-M4_10_2-a", "name": "Literal zero (0) shall not be used as the null-pointer-constant", "shortDescription": { "text": "Literal zero (0) shall not be used as the null-pointer-constant" }, "fullDescription": { "text": "Literal zero (0) shall not be used as the null-pointer-constant [AUTOSAR-M4_10_2-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Literal zero (0) shall not be used as the null-pointer-constant [AUTOSAR-M4_10_2-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M4-10-2 Literal zero (0) shall not be used as the null-pointer-constant" ] } }, { "id": "AUTOSAR-A15_5_3-d", "name": "There should be at least one exception handler to catch all otherwise unhandled exceptions", "shortDescription": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions" }, "fullDescription": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions [AUTOSAR-A15_5_3-d]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions [AUTOSAR-A15_5_3-d]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A15-5-3 The std::terminate() function shall not be called implicitly" ] } }, { "id": "AUTOSAR-A15_5_3-f", "name": "Exceptions shall be raised only after start-up and before termination of the program", "shortDescription": { "text": "Exceptions shall be raised only after start-up and before termination of the program" }, "fullDescription": { "text": "Exceptions shall be raised only after start-up and before termination of the program [AUTOSAR-A15_5_3-f]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Exceptions shall be raised only after start-up and before termination of the program [AUTOSAR-A15_5_3-f]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A15-5-3 The std::terminate() function shall not be called implicitly" ] } }, { "id": "AUTOSAR-A3_9_1-b", "name": "Fixed width integer types from <cstdint>, indicating the size and signedness, shall be used in place of the basic numerical types", "shortDescription": { "text": "Fixed width integer types from <cstdint>, indicating the size and signedness, shall be used in place of the basic numerical types" }, "fullDescription": { "text": "Fixed width integer types from <cstdint>, indicating the size and signedness, shall be used in place of the basic numerical types [AUTOSAR-A3_9_1-b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Fixed width integer types from <cstdint>, indicating the size and signedness, shall be used in place of the basic numerical types [AUTOSAR-A3_9_1-b]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A3-9-1 Fixed width integer types from <cstdint>, indicating the size and signedness, shall be used in place of the basic numerical types" ] } }, { "id": "AUTOSAR-M8_0_1-a", "name": "Each variable should be declared in a separate declaration statement", "shortDescription": { "text": "Each variable should be declared in a separate declaration statement" }, "fullDescription": { "text": "Each variable should be declared in a separate declaration statement [AUTOSAR-M8_0_1-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Each variable should be declared in a separate declaration statement [AUTOSAR-M8_0_1-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M8-0-1 An init-declarator-list or a member-declarator-list shall consist of a single init-declarator or member-declarator respectively" ] } }, { "id": "AUTOSAR-M0_3_2-a", "name": "If a function returns error information, then that error information shall be tested", "shortDescription": { "text": "If a function returns error information, then that error information shall be tested" }, "fullDescription": { "text": "If a function returns error information, then that error information shall be tested [AUTOSAR-M0_3_2-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "If a function returns error information, then that error information shall be tested [AUTOSAR-M0_3_2-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M0-3-2 If a function generates error information, then that error information shall be tested" ] } }, { "id": "AUTOSAR-M0_3_1-e", "name": "Avoid division by zero", "shortDescription": { "text": "Avoid division by zero" }, "fullDescription": { "text": "Avoid division by zero [AUTOSAR-M0_3_1-e]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid division by zero [AUTOSAR-M0_3_1-e]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M0-3-1 Minimization of run-time failures shall be ensured by the use of at least one of: (a) static analysis tools\/techniques; (b) dynamic analysis tools\/techniques; (c) explicit coding of checks to handle run-time faults" ] } }, { "id": "AUTOSAR-M0_3_1-f", "name": "Avoid null pointer dereferencing", "shortDescription": { "text": "Avoid null pointer dereferencing" }, "fullDescription": { "text": "Avoid null pointer dereferencing [AUTOSAR-M0_3_1-f]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid null pointer dereferencing [AUTOSAR-M0_3_1-f]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M0-3-1 Minimization of run-time failures shall be ensured by the use of at least one of: (a) static analysis tools\/techniques; (b) dynamic analysis tools\/techniques; (c) explicit coding of checks to handle run-time faults" ] } }, { "id": "AUTOSAR-A5_2_2-a", "name": "C-style casts should not be used", "shortDescription": { "text": "C-style casts should not be used" }, "fullDescription": { "text": "C-style casts should not be used [AUTOSAR-A5_2_2-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "C-style casts should not be used [AUTOSAR-A5_2_2-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A5-2-2 Traditional C-style casts shall not be used" ] } }, { "id": "AUTOSAR-A15_4_4-a", "name": "Declare functions 'noexcept' if they will not emit exceptions", "shortDescription": { "text": "Declare functions 'noexcept' if they will not emit exceptions" }, "fullDescription": { "text": "Declare functions 'noexcept' if they will not emit exceptions [AUTOSAR-A15_4_4-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Declare functions 'noexcept' if they will not emit exceptions [AUTOSAR-A15_4_4-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A15-4-4 A declaration of non-throwing function shall contain noexcept specification" ] } }, { "id": "AUTOSAR-A16_0_1-a", "name": "The #ifndef, #ifdef, #if, #elif, #else, and #endif pre-processor directives shall only be used for conditional file inclusion and include guards", "shortDescription": { "text": "The #ifndef, #ifdef, #if, #elif, #else, and #endif pre-processor directives shall only be used for conditional file inclusion and include guards" }, "fullDescription": { "text": "The #ifndef, #ifdef, #if, #elif, #else, and #endif pre-processor directives shall only be used for conditional file inclusion and include guards [AUTOSAR-A16_0_1-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The #ifndef, #ifdef, #if, #elif, #else, and #endif pre-processor directives shall only be used for conditional file inclusion and include guards [AUTOSAR-A16_0_1-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A16-0-1 The pre-processor shall only be used for unconditional and conditional file inclusion and include guards, and using the following directives: (1) #ifndef, (2) #ifdef, (3) #if, (4) #if defined, (5) #elif, (6) #else, (7) #define, (8) #endif, (9) #include" ] } }, { "id": "AUTOSAR-A16_0_1-d", "name": "Avoid using macro definitions", "shortDescription": { "text": "Avoid using macro definitions" }, "fullDescription": { "text": "Avoid using macro definitions [AUTOSAR-A16_0_1-d]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid using macro definitions [AUTOSAR-A16_0_1-d]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A16-0-1 The pre-processor shall only be used for unconditional and conditional file inclusion and include guards, and using the following directives: (1) #ifndef, (2) #ifdef, (3) #if, (4) #if defined, (5) #elif, (6) #else, (7) #define, (8) #endif, (9) #include" ] } }, { "id": "AUTOSAR-M15_3_1-a", "name": "Exceptions shall be raised only after start-up and before termination of the program", "shortDescription": { "text": "Exceptions shall be raised only after start-up and before termination of the program" }, "fullDescription": { "text": "Exceptions shall be raised only after start-up and before termination of the program [AUTOSAR-M15_3_1-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Exceptions shall be raised only after start-up and before termination of the program [AUTOSAR-M15_3_1-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M15-3-1 Exceptions shall be raised only after start-up and before termination" ] } }, { "id": "AUTOSAR-A5_1_1-a", "name": "Avoid magic numbers", "shortDescription": { "text": "Avoid magic numbers" }, "fullDescription": { "text": "Avoid magic numbers [AUTOSAR-A5_1_1-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid magic numbers [AUTOSAR-A5_1_1-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A5-1-1 Literal values shall not be used apart from type initialization, otherwise symbolic names shall be used instead" ] } }, { "id": "AUTOSAR-A4_10_1-b", "name": "Prefer 'nullptr' over 'NULL' or '0'(zero)", "shortDescription": { "text": "Prefer 'nullptr' over 'NULL' or '0'(zero)" }, "fullDescription": { "text": "Prefer 'nullptr' over 'NULL' or '0'(zero) [AUTOSAR-A4_10_1-b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Prefer 'nullptr' over 'NULL' or '0'(zero) [AUTOSAR-A4_10_1-b]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A4-10-1 Only nullptr literal shall be used as the null-pointer-constant" ] } }, { "id": "AUTOSAR-A15_3_3-a", "name": "There should be at least one exception handler to catch all otherwise unhandled exceptions", "shortDescription": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions" }, "fullDescription": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions [AUTOSAR-A15_3_3-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions [AUTOSAR-A15_3_3-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A15-3-3 Main function and a task main function shall catch at least: base class exceptions from all third-party libraries used, std::exception and all otherwise unhandled exceptions" ] } }, { "id": "AUTOSAR-M2_13_3-a", "name": "A \"U\" suffix shall be applied to all octal or hexadecimal integer literals of unsigned type", "shortDescription": { "text": "A \"U\" suffix shall be applied to all octal or hexadecimal integer literals of unsigned type" }, "fullDescription": { "text": "A \"U\" suffix shall be applied to all octal or hexadecimal integer literals of unsigned type [AUTOSAR-M2_13_3-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "A \"U\" suffix shall be applied to all octal or hexadecimal integer literals of unsigned type [AUTOSAR-M2_13_3-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M2-13-3 A \"U\" suffix shall be applied to all octal or hexadecimal integer literals of unsigned type" ] } }, { "id": "AUTOSAR-A8_4_7-a", "name": "A parameter of const reference to a 'cheap to copy' type should be passed by value", "shortDescription": { "text": "A parameter of const reference to a 'cheap to copy' type should be passed by value" }, "fullDescription": { "text": "A parameter of const reference to a 'cheap to copy' type should be passed by value [AUTOSAR-A8_4_7-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "A parameter of const reference to a 'cheap to copy' type should be passed by value [AUTOSAR-A8_4_7-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A8-4-7 \"in\" parameters for \"cheap to copy\" types shall be passed by value" ] } }, { "id": "AUTOSAR-A3_3_2-a", "name": "Static and thread-local objects shall be constant-initialized", "shortDescription": { "text": "Static and thread-local objects shall be constant-initialized" }, "fullDescription": { "text": "Static and thread-local objects shall be constant-initialized [AUTOSAR-A3_3_2-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Static and thread-local objects shall be constant-initialized [AUTOSAR-A3_3_2-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A3-3-2 Static and thread-local objects shall be constant-initialized" ] } }, { "id": "AUTOSAR-A3_3_1-a", "name": "Objects or functions with external linkage shall be declared in a header file", "shortDescription": { "text": "Objects or functions with external linkage shall be declared in a header file" }, "fullDescription": { "text": "Objects or functions with external linkage shall be declared in a header file [AUTOSAR-A3_3_1-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Objects or functions with external linkage shall be declared in a header file [AUTOSAR-A3_3_1-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A3-3-1 Objects or functions with external linkage (including members of named namespaces) shall be declared in a header file" ] } }, { "id": "AUTOSAR-M16_0_6-a", "name": "In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##", "shortDescription": { "text": "In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##" }, "fullDescription": { "text": "In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ## [AUTOSAR-M16_0_6-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ## [AUTOSAR-M16_0_6-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M16-0-6 In the definition of a function-like macro, each instance of a parameter shall be enclosed in parentheses, unless it is used as the operand of # or ##" ] } }, { "id": "AUTOSAR-A0_1_1-a", "name": "Avoid unused values", "shortDescription": { "text": "Avoid unused values" }, "fullDescription": { "text": "Avoid unused values [AUTOSAR-A0_1_1-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid unused values [AUTOSAR-A0_1_1-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A0-1-1 A project shall not contain instances of non-volatile variables being given values that are not subsequently used" ] } }, { "id": "AUTOSAR-A0_1_2-a", "name": "The value returned by a function having a non-void return type that is not an overloaded operator shall always be used", "shortDescription": { "text": "The value returned by a function having a non-void return type that is not an overloaded operator shall always be used" }, "fullDescription": { "text": "The value returned by a function having a non-void return type that is not an overloaded operator shall always be used [AUTOSAR-A0_1_2-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The value returned by a function having a non-void return type that is not an overloaded operator shall always be used [AUTOSAR-A0_1_2-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A0-1-2 The value returned by a function having a non-void return type that is not an overloaded operator shall be used" ] } }, { "id": "AUTOSAR-M0_1_4-a", "name": "A project shall not contain non-volatile POD variables having only one use", "shortDescription": { "text": "A project shall not contain non-volatile POD variables having only one use" }, "fullDescription": { "text": "A project shall not contain non-volatile POD variables having only one use [AUTOSAR-M0_1_4-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "A project shall not contain non-volatile POD variables having only one use [AUTOSAR-M0_1_4-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M0-1-4 A project shall not contain non-volatile POD variables having only one use" ] } }, { "id": "AUTOSAR-M5_0_5-a", "name": "There shall be no implicit conversions from integral to floating type", "shortDescription": { "text": "There shall be no implicit conversions from integral to floating type" }, "fullDescription": { "text": "There shall be no implicit conversions from integral to floating type [AUTOSAR-M5_0_5-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "There shall be no implicit conversions from integral to floating type [AUTOSAR-M5_0_5-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M5-0-5 There shall be no implicit floating-integral conversions" ] } }, { "id": "AUTOSAR-A27_0_4-b", "name": "Avoid using unsafe string functions that do not check bounds", "shortDescription": { "text": "Avoid using unsafe string functions that do not check bounds" }, "fullDescription": { "text": "Avoid using unsafe string functions that do not check bounds [AUTOSAR-A27_0_4-b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid using unsafe string functions that do not check bounds [AUTOSAR-A27_0_4-b]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A27-0-4 C-style strings shall not be used" ] } }, { "id": "AUTOSAR-A27_0_4-d", "name": "C-style strings shall not be used", "shortDescription": { "text": "C-style strings shall not be used" }, "fullDescription": { "text": "C-style strings shall not be used [AUTOSAR-A27_0_4-d]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "C-style strings shall not be used [AUTOSAR-A27_0_4-d]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A27-0-4 C-style strings shall not be used" ] } }, { "id": "AUTOSAR-M0_1_3-c", "name": "Avoid unused private member variables", "shortDescription": { "text": "Avoid unused private member variables" }, "fullDescription": { "text": "Avoid unused private member variables [AUTOSAR-M0_1_3-c]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid unused private member variables [AUTOSAR-M0_1_3-c]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M0-1-3 A project shall not contain unused variables" ] } }, { "id": "AUTOSAR-M5_0_4-a", "name": "Avoid implicit conversions between signed and unsigned integer types", "shortDescription": { "text": "Avoid implicit conversions between signed and unsigned integer types" }, "fullDescription": { "text": "Avoid implicit conversions between signed and unsigned integer types [AUTOSAR-M5_0_4-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid implicit conversions between signed and unsigned integer types [AUTOSAR-M5_0_4-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M5-0-4 An implicit integral conversion shall not change the signedness of the underlying type" ] } }, { "id": "AUTOSAR-A18_5_2-a", "name": "Dynamic heap memory allocation shall not be used", "shortDescription": { "text": "Dynamic heap memory allocation shall not be used" }, "fullDescription": { "text": "Dynamic heap memory allocation shall not be used [AUTOSAR-A18_5_2-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Dynamic heap memory allocation shall not be used [AUTOSAR-A18_5_2-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A18-5-2 Non-placement new or delete expressions shall not be used" ] } }, { "id": "AUTOSAR-A0_1_4-a", "name": "Eliminate unused parameters", "shortDescription": { "text": "Eliminate unused parameters" }, "fullDescription": { "text": "Eliminate unused parameters [AUTOSAR-A0_1_4-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Eliminate unused parameters [AUTOSAR-A0_1_4-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A0-1-4 There shall be no unused named parameters in non-virtual functions" ] } }, { "id": "AUTOSAR-A0_1_6-a", "name": "A project shall not contain unused type declarations", "shortDescription": { "text": "A project shall not contain unused type declarations" }, "fullDescription": { "text": "A project shall not contain unused type declarations [AUTOSAR-A0_1_6-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "A project shall not contain unused type declarations [AUTOSAR-A0_1_6-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A0-1-6 There should be no unused type declarations" ] } }, { "id": "AUTOSAR-A10_3_1-a", "name": "Only one of virtual, override or final should be specified in a member function declaration", "shortDescription": { "text": "Only one of virtual, override or final should be specified in a member function declaration" }, "fullDescription": { "text": "Only one of virtual, override or final should be specified in a member function declaration [AUTOSAR-A10_3_1-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Only one of virtual, override or final should be specified in a member function declaration [AUTOSAR-A10_3_1-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A10-3-1 Virtual function declaration shall contain exactly one of the three specifiers:" ] } }, { "id": "AUTOSAR-A10_3_2-a", "name": "Each overriding virtual function shall be declared with the override or final specifier", "shortDescription": { "text": "Each overriding virtual function shall be declared with the override or final specifier" }, "fullDescription": { "text": "Each overriding virtual function shall be declared with the override or final specifier [AUTOSAR-A10_3_2-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Each overriding virtual function shall be declared with the override or final specifier [AUTOSAR-A10_3_2-a]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR A10-3-2 Each overriding virtual function shall be declared with the override or final specifier" ] } }, { "id": "AUTOSAR-M0_1_8-b", "name": "Functions with void return type shall not be empty", "shortDescription": { "text": "Functions with void return type shall not be empty" }, "fullDescription": { "text": "Functions with void return type shall not be empty [AUTOSAR-M0_1_8-b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Functions with void return type shall not be empty [AUTOSAR-M0_1_8-b]" }, "properties": { "tags": [ "AUTOSAR C++14 Coding Guidelines", "AUTOSAR M0-1-8 All functions with void return type shall have external side effect(s)" ] } }, { "id": "BD-PB-NP", "name": "Avoid null pointer dereferencing", "shortDescription": { "text": "Avoid null pointer dereferencing" }, "fullDescription": { "text": "Avoid null pointer dereferencing [BD-PB-NP]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid null pointer dereferencing [BD-PB-NP]" }, "properties": { "tags": [ "Flow Analysis", "Possible Bugs" ] } }, { "id": "BD-PB-ZERO", "name": "Avoid division by zero", "shortDescription": { "text": "Avoid division by zero" }, "fullDescription": { "text": "Avoid division by zero [BD-PB-ZERO]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid division by zero [BD-PB-ZERO]" }, "properties": { "tags": [ "Flow Analysis", "Possible Bugs" ] } }, { "id": "BD-PB-REFPARAM", "name": "A parameter shall be passed by reference if it can't be NULL", "shortDescription": { "text": "A parameter shall be passed by reference if it can't be NULL" }, "fullDescription": { "text": "A parameter shall be passed by reference if it can't be NULL [BD-PB-REFPARAM]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "A parameter shall be passed by reference if it can't be NULL [BD-PB-REFPARAM]" }, "properties": { "tags": [ "Flow Analysis", "Possible Bugs" ] } }, { "id": "BD-PB-VOVR", "name": "Avoid unused values", "shortDescription": { "text": "Avoid unused values" }, "fullDescription": { "text": "Avoid unused values [BD-PB-VOVR]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid unused values [BD-PB-VOVR]" }, "properties": { "tags": [ "Flow Analysis", "Possible Bugs" ] } }, { "id": "BD-RES-LEAKS", "name": "Ensure resources are freed", "shortDescription": { "text": "Ensure resources are freed" }, "fullDescription": { "text": "Ensure resources are freed [BD-RES-LEAKS]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Ensure resources are freed [BD-RES-LEAKS]" }, "properties": { "tags": [ "Flow Analysis", "Resources" ] } }, { "id": "BD-SECURITY-TDLOOP", "name": "Validate potentially tainted data before it is used in the controlling expression of a loop", "shortDescription": { "text": "Validate potentially tainted data before it is used in the controlling expression of a loop" }, "fullDescription": { "text": "Validate potentially tainted data before it is used in the controlling expression of a loop [BD-SECURITY-TDLOOP]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Validate potentially tainted data before it is used in the controlling expression of a loop [BD-SECURITY-TDLOOP]" }, "properties": { "tags": [ "Flow Analysis", "Security" ] } }, { "id": "BD-SECURITY-TDALLOC", "name": "Validate potentially tainted data before it is used to determine the size of memory allocation", "shortDescription": { "text": "Validate potentially tainted data before it is used to determine the size of memory allocation" }, "fullDescription": { "text": "Validate potentially tainted data before it is used to determine the size of memory allocation [BD-SECURITY-TDALLOC]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Validate potentially tainted data before it is used to determine the size of memory allocation [BD-SECURITY-TDALLOC]" }, "properties": { "tags": [ "Flow Analysis", "Security" ] } }, { "id": "BD-TRS-LOCK", "name": "Do not abandon unreleased locks", "shortDescription": { "text": "Do not abandon unreleased locks" }, "fullDescription": { "text": "Do not abandon unreleased locks [BD-TRS-LOCK]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Do not abandon unreleased locks [BD-TRS-LOCK]" }, "properties": { "tags": [ "Flow Analysis", "Threads & Synchronization" ] } }, { "id": "BD-TRS-DIFCS", "name": "Variable should be used in context of single critical section", "shortDescription": { "text": "Variable should be used in context of single critical section" }, "fullDescription": { "text": "Variable should be used in context of single critical section [BD-TRS-DIFCS]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Variable should be used in context of single critical section [BD-TRS-DIFCS]" }, "properties": { "tags": [ "Flow Analysis", "Threads & Synchronization" ] } }, { "id": "CDD-DUPM", "name": "Avoid function duplication", "shortDescription": { "text": "Avoid function duplication" }, "fullDescription": { "text": "Avoid function duplication [CDD-DUPM]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid function duplication [CDD-DUPM]" }, "properties": { "tags": [ "Code Duplication Detection" ] } }, { "id": "CDD-DUPC", "name": "Avoid code duplication", "shortDescription": { "text": "Avoid code duplication" }, "fullDescription": { "text": "Avoid code duplication [CDD-DUPC]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid code duplication [CDD-DUPC]" }, "properties": { "tags": [ "Code Duplication Detection" ] } }, { "id": "CDD-DUPS", "name": "Avoid string literal duplication", "shortDescription": { "text": "Avoid string literal duplication" }, "fullDescription": { "text": "Avoid string literal duplication [CDD-DUPS]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid string literal duplication [CDD-DUPS]" }, "properties": { "tags": [ "Code Duplication Detection" ] } }, { "id": "CERT_C-MSC13-a", "name": "Avoid unnecessary local variables", "shortDescription": { "text": "Avoid unnecessary local variables" }, "fullDescription": { "text": "Avoid unnecessary local variables [CERT_C-MSC13-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid unnecessary local variables [CERT_C-MSC13-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-MSC13_C (REC) Detect and remove unused values" ] } }, { "id": "CERT_C-FLP03-a", "name": "Avoid division by zero", "shortDescription": { "text": "Avoid division by zero" }, "fullDescription": { "text": "Avoid division by zero [CERT_C-FLP03-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid division by zero [CERT_C-FLP03-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-FLP03_C (REC) Detect and handle floating-point errors" ] } }, { "id": "CERT_C-MSC19-b", "name": "Avoid null pointer dereferencing", "shortDescription": { "text": "Avoid null pointer dereferencing" }, "fullDescription": { "text": "Avoid null pointer dereferencing [CERT_C-MSC19-b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid null pointer dereferencing [CERT_C-MSC19-b]" }, "properties": { "tags": [ "SEI CERT C", "CERT-MSC19_C (REC) For functions that return an array, prefer returning an empty array over a null value" ] } }, { "id": "CERT_C-INT04-a", "name": "Avoid potential integer overflow\/underflow on tainted data", "shortDescription": { "text": "Avoid potential integer overflow\/underflow on tainted data" }, "fullDescription": { "text": "Avoid potential integer overflow\/underflow on tainted data [CERT_C-INT04-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid potential integer overflow\/underflow on tainted data [CERT_C-INT04-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-INT04_C (REC) Enforce limits on integer values originating from tainted sources" ] } }, { "id": "CERT_C-INT05-a", "name": "Avoid using unsafe string functions that do not check bounds", "shortDescription": { "text": "Avoid using unsafe string functions that do not check bounds" }, "fullDescription": { "text": "Avoid using unsafe string functions that do not check bounds [CERT_C-INT05-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid using unsafe string functions that do not check bounds [CERT_C-INT05-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-INT05_C (REC) Do not use input functions to convert character data if they cannot handle all possible inputs" ] } }, { "id": "CERT_C-MSC24-a", "name": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used", "shortDescription": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used" }, "fullDescription": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used [CERT_C-MSC24-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used [CERT_C-MSC24-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-MSC24_C (REC) Do not use deprecated or obsolescent functions" ] } }, { "id": "CERT_C-MEM00-a", "name": "Do not allocate memory and expect that someone else will deallocate it later", "shortDescription": { "text": "Do not allocate memory and expect that someone else will deallocate it later" }, "fullDescription": { "text": "Do not allocate memory and expect that someone else will deallocate it later [CERT_C-MEM00-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Do not allocate memory and expect that someone else will deallocate it later [CERT_C-MEM00-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-MEM00_C (REC) Allocate and free memory in the same module, at the same level of abstraction" ] } }, { "id": "CERT_C-MEM00-e", "name": "Ensure resources are freed", "shortDescription": { "text": "Ensure resources are freed" }, "fullDescription": { "text": "Ensure resources are freed [CERT_C-MEM00-e]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Ensure resources are freed [CERT_C-MEM00-e]" }, "properties": { "tags": [ "SEI CERT C", "CERT-MEM00_C (REC) Allocate and free memory in the same module, at the same level of abstraction" ] } }, { "id": "CERT_C-INT33-a", "name": "Avoid division by zero", "shortDescription": { "text": "Avoid division by zero" }, "fullDescription": { "text": "Avoid division by zero [CERT_C-INT33-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid division by zero [CERT_C-INT33-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-INT33_C (RULE) Ensure that division and remainder operations do not result in divide-by-zero errors" ] } }, { "id": "CERT_C-MEM12-a", "name": "Ensure resources are freed", "shortDescription": { "text": "Ensure resources are freed" }, "fullDescription": { "text": "Ensure resources are freed [CERT_C-MEM12-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Ensure resources are freed [CERT_C-MEM12-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-MEM12_C (REC) Consider using a goto chain when leaving a function on error when using and releasing resources" ] } }, { "id": "CERT_C-FIO42-a", "name": "Ensure resources are freed", "shortDescription": { "text": "Ensure resources are freed" }, "fullDescription": { "text": "Ensure resources are freed [CERT_C-FIO42-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Ensure resources are freed [CERT_C-FIO42-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-FIO42_C (RULE) Close files when they are no longer needed" ] } }, { "id": "CERT_C-MSC41-a", "name": "Do not hard code string literals", "shortDescription": { "text": "Do not hard code string literals" }, "fullDescription": { "text": "Do not hard code string literals [CERT_C-MSC41-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Do not hard code string literals [CERT_C-MSC41-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-MSC41_C (RULE) Never hard code sensitive information" ] } }, { "id": "CERT_C-MEM31-a", "name": "Ensure resources are freed", "shortDescription": { "text": "Ensure resources are freed" }, "fullDescription": { "text": "Ensure resources are freed [CERT_C-MEM31-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Ensure resources are freed [CERT_C-MEM31-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-MEM31_C (RULE) Free dynamically allocated memory when no longer needed" ] } }, { "id": "CERT_C-API00-a", "name": "The validity of parameters must be checked inside each function", "shortDescription": { "text": "The validity of parameters must be checked inside each function" }, "fullDescription": { "text": "The validity of parameters must be checked inside each function [CERT_C-API00-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The validity of parameters must be checked inside each function [CERT_C-API00-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-API00_C (REC) Functions should validate their parameters" ] } }, { "id": "CERT_C-FIO22-a", "name": "Ensure resources are freed", "shortDescription": { "text": "Ensure resources are freed" }, "fullDescription": { "text": "Ensure resources are freed [CERT_C-FIO22-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Ensure resources are freed [CERT_C-FIO22-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-FIO22_C (REC) Close files before spawning processes" ] } }, { "id": "CERT_C-EXP34-a", "name": "Avoid null pointer dereferencing", "shortDescription": { "text": "Avoid null pointer dereferencing" }, "fullDescription": { "text": "Avoid null pointer dereferencing [CERT_C-EXP34-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid null pointer dereferencing [CERT_C-EXP34-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-EXP34_C (RULE) Do not dereference null pointers" ] } }, { "id": "CERT_C-CON30-a", "name": "Ensure resources are freed", "shortDescription": { "text": "Ensure resources are freed" }, "fullDescription": { "text": "Ensure resources are freed [CERT_C-CON30-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Ensure resources are freed [CERT_C-CON30-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-CON30_C (RULE) Clean up thread-specific storage" ] } }, { "id": "CERT_C-EXP39-a", "name": "There shall be no implicit conversions from integral to floating type", "shortDescription": { "text": "There shall be no implicit conversions from integral to floating type" }, "fullDescription": { "text": "There shall be no implicit conversions from integral to floating type [CERT_C-EXP39-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "There shall be no implicit conversions from integral to floating type [CERT_C-EXP39-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-EXP39_C (RULE) Do not access a variable through a pointer of an incompatible type" ] } }, { "id": "CERT_C-DCL22-a", "name": "Avoid unused values", "shortDescription": { "text": "Avoid unused values" }, "fullDescription": { "text": "Avoid unused values [CERT_C-DCL22-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid unused values [CERT_C-DCL22-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-DCL22_C (REC) Use volatile for data that cannot be cached" ] } }, { "id": "CERT_C-DCL15-a", "name": "Objects or functions with external linkage shall be declared in a header file", "shortDescription": { "text": "Objects or functions with external linkage shall be declared in a header file" }, "fullDescription": { "text": "Objects or functions with external linkage shall be declared in a header file [CERT_C-DCL15-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Objects or functions with external linkage shall be declared in a header file [CERT_C-DCL15-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-DCL15_C (REC) Declare file-scope objects or functions that do not need external linkage as static" ] } }, { "id": "CERT_C-DCL13-a", "name": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object", "shortDescription": { "text": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object" }, "fullDescription": { "text": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object [CERT_C-DCL13-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object [CERT_C-DCL13-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-DCL13_C (REC) Declare function parameters that are pointers to values not changed by the function as const" ] } }, { "id": "CERT_C-EXP12-a", "name": "The value returned by a function having non-void return type shall be used", "shortDescription": { "text": "The value returned by a function having non-void return type shall be used" }, "fullDescription": { "text": "The value returned by a function having non-void return type shall be used [CERT_C-EXP12-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The value returned by a function having non-void return type shall be used [CERT_C-EXP12-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-EXP12_C (REC) Do not ignore values returned by functions" ] } }, { "id": "CERT_C-STR07-a", "name": "Avoid using unsafe string functions that do not check bounds", "shortDescription": { "text": "Avoid using unsafe string functions that do not check bounds" }, "fullDescription": { "text": "Avoid using unsafe string functions that do not check bounds [CERT_C-STR07-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid using unsafe string functions that do not check bounds [CERT_C-STR07-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-STR07_C (REC) Use the bounds-checking interfaces for string manipulation" ] } }, { "id": "CERT_C-CON01-a", "name": "Do not abandon unreleased locks", "shortDescription": { "text": "Do not abandon unreleased locks" }, "fullDescription": { "text": "Do not abandon unreleased locks [CERT_C-CON01-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Do not abandon unreleased locks [CERT_C-CON01-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-CON01_C (REC) Acquire and release synchronization primitives in the same module, at the same level of abstraction" ] } }, { "id": "CERT_C-PRE02-a", "name": "Enclose in parentheses whole definition of a function-like macro", "shortDescription": { "text": "Enclose in parentheses whole definition of a function-like macro" }, "fullDescription": { "text": "Enclose in parentheses whole definition of a function-like macro [CERT_C-PRE02-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Enclose in parentheses whole definition of a function-like macro [CERT_C-PRE02-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-PRE02_C (REC) Macro replacement lists should be parenthesized" ] } }, { "id": "CERT_C-PRE00-a", "name": "A function should be used in preference to a function-like macro", "shortDescription": { "text": "A function should be used in preference to a function-like macro" }, "fullDescription": { "text": "A function should be used in preference to a function-like macro [CERT_C-PRE00-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "A function should be used in preference to a function-like macro [CERT_C-PRE00-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-PRE00_C (REC) Prefer inline or static functions to function-like macros" ] } }, { "id": "CERT_C-PRE01-a", "name": "In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##", "shortDescription": { "text": "In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##" }, "fullDescription": { "text": "In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ## [CERT_C-PRE01-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ## [CERT_C-PRE01-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-PRE01_C (REC) Use parentheses within macros around parameter names" ] } }, { "id": "CERT_C-POS54-a", "name": "The value returned by a POSIX library function that may return an error should be used", "shortDescription": { "text": "The value returned by a POSIX library function that may return an error should be used" }, "fullDescription": { "text": "The value returned by a POSIX library function that may return an error should be used [CERT_C-POS54-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The value returned by a POSIX library function that may return an error should be used [CERT_C-POS54-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-POS54_C (RULE) Detect and handle POSIX library errors" ] } }, { "id": "CERT_C-ERR33-a", "name": "The value returned by a standard library function that may return an error should be used", "shortDescription": { "text": "The value returned by a standard library function that may return an error should be used" }, "fullDescription": { "text": "The value returned by a standard library function that may return an error should be used [CERT_C-ERR33-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The value returned by a standard library function that may return an error should be used [CERT_C-ERR33-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-ERR33_C (RULE) Detect and handle standard library errors" ] } }, { "id": "CERT_C-ERR33-d", "name": "Always check the returned value of non-void function", "shortDescription": { "text": "Always check the returned value of non-void function" }, "fullDescription": { "text": "Always check the returned value of non-void function [CERT_C-ERR33-d]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Always check the returned value of non-void function [CERT_C-ERR33-d]" }, "properties": { "tags": [ "SEI CERT C", "CERT-ERR33_C (RULE) Detect and handle standard library errors" ] } }, { "id": "CERT_C-ERR34-a", "name": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used", "shortDescription": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used" }, "fullDescription": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used [CERT_C-ERR34-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used [CERT_C-ERR34-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-ERR34_C (RULE) Detect errors when converting a string to a number" ] } }, { "id": "CERT_C-ERR07-a", "name": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used", "shortDescription": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used" }, "fullDescription": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used [CERT_C-ERR07-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used [CERT_C-ERR07-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-ERR07_C (REC) Prefer functions that support error checking over equivalent functions that don't" ] } }, { "id": "CERT_C-DCL00-a", "name": "Declare local variable as const whenever possible", "shortDescription": { "text": "Declare local variable as const whenever possible" }, "fullDescription": { "text": "Declare local variable as const whenever possible [CERT_C-DCL00-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Declare local variable as const whenever possible [CERT_C-DCL00-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-DCL00_C (REC) Const-qualify immutable objects" ] } }, { "id": "CERT_C-DCL04-a", "name": "Each variable should be declared in a separate declaration statement", "shortDescription": { "text": "Each variable should be declared in a separate declaration statement" }, "fullDescription": { "text": "Each variable should be declared in a separate declaration statement [CERT_C-DCL04-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Each variable should be declared in a separate declaration statement [CERT_C-DCL04-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-DCL04_C (REC) Do not declare more than one variable per declaration" ] } }, { "id": "CERT_C-WIN30-a", "name": "Ensure resources are freed", "shortDescription": { "text": "Ensure resources are freed" }, "fullDescription": { "text": "Ensure resources are freed [CERT_C-WIN30-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Ensure resources are freed [CERT_C-WIN30-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-WIN30_C (RULE) Properly pair allocation and deallocation functions" ] } }, { "id": "CERT_C-ERR02-a", "name": "The input\/output functions from the 'cstdio' and 'cwchar' libraries should not be used", "shortDescription": { "text": "The input\/output functions from the 'cstdio' and 'cwchar' libraries should not be used" }, "fullDescription": { "text": "The input\/output functions from the 'cstdio' and 'cwchar' libraries should not be used [CERT_C-ERR02-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The input\/output functions from the 'cstdio' and 'cwchar' libraries should not be used [CERT_C-ERR02-a]" }, "properties": { "tags": [ "SEI CERT C", "CERT-ERR02_C (REC) Avoid in-band error indicators" ] } }, { "id": "CERT_CPP-ERR50-d", "name": "There should be at least one exception handler to catch all otherwise unhandled exceptions", "shortDescription": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions" }, "fullDescription": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions [CERT_CPP-ERR50-d]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions [CERT_CPP-ERR50-d]" }, "properties": { "tags": [ "SEI CERT C++", "CERT-ERR50_CPP (RULE) Do not abruptly terminate the program" ] } }, { "id": "CERT_CPP-ERR50-f", "name": "Exceptions shall be raised only after start-up and before termination of the program", "shortDescription": { "text": "Exceptions shall be raised only after start-up and before termination of the program" }, "fullDescription": { "text": "Exceptions shall be raised only after start-up and before termination of the program [CERT_CPP-ERR50-f]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Exceptions shall be raised only after start-up and before termination of the program [CERT_CPP-ERR50-f]" }, "properties": { "tags": [ "SEI CERT C++", "CERT-ERR50_CPP (RULE) Do not abruptly terminate the program" ] } }, { "id": "CERT_CPP-MEM52-a", "name": "Check the return value of new", "shortDescription": { "text": "Check the return value of new" }, "fullDescription": { "text": "Check the return value of new [CERT_CPP-MEM52-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Check the return value of new [CERT_CPP-MEM52-a]" }, "properties": { "tags": [ "SEI CERT C++", "CERT-MEM52_CPP (RULE) Detect and handle memory allocation errors" ] } }, { "id": "CERT_CPP-ERR58-a", "name": "Exceptions shall be raised only after start-up and before termination of the program", "shortDescription": { "text": "Exceptions shall be raised only after start-up and before termination of the program" }, "fullDescription": { "text": "Exceptions shall be raised only after start-up and before termination of the program [CERT_CPP-ERR58-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Exceptions shall be raised only after start-up and before termination of the program [CERT_CPP-ERR58-a]" }, "properties": { "tags": [ "SEI CERT C++", "CERT-ERR58_CPP (RULE) Handle all exceptions thrown before main() begins executing" ] } }, { "id": "CERT_CPP-ERR57-a", "name": "Ensure resources are freed", "shortDescription": { "text": "Ensure resources are freed" }, "fullDescription": { "text": "Ensure resources are freed [CERT_CPP-ERR57-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Ensure resources are freed [CERT_CPP-ERR57-a]" }, "properties": { "tags": [ "SEI CERT C++", "CERT-ERR57_CPP (RULE) Do not leak resources when handling exceptions" ] } }, { "id": "CERT_CPP-STR51-a", "name": "Avoid null pointer dereferencing", "shortDescription": { "text": "Avoid null pointer dereferencing" }, "fullDescription": { "text": "Avoid null pointer dereferencing [CERT_CPP-STR51-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid null pointer dereferencing [CERT_CPP-STR51-a]" }, "properties": { "tags": [ "SEI CERT C++", "CERT-STR51_CPP (RULE) Do not attempt to create a std::string from a null pointer" ] } }, { "id": "CERT_CPP-OOP52-a", "name": "Define a virtual destructor in classes used as base classes which have virtual functions", "shortDescription": { "text": "Define a virtual destructor in classes used as base classes which have virtual functions" }, "fullDescription": { "text": "Define a virtual destructor in classes used as base classes which have virtual functions [CERT_CPP-OOP52-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Define a virtual destructor in classes used as base classes which have virtual functions [CERT_CPP-OOP52-a]" }, "properties": { "tags": [ "SEI CERT C++", "CERT-OOP52_CPP (RULE) Do not delete a polymorphic object without a virtual destructor" ] } }, { "id": "CERT_CPP-FIO51-a", "name": "Ensure resources are freed", "shortDescription": { "text": "Ensure resources are freed" }, "fullDescription": { "text": "Ensure resources are freed [CERT_CPP-FIO51-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Ensure resources are freed [CERT_CPP-FIO51-a]" }, "properties": { "tags": [ "SEI CERT C++", "CERT-FIO51_CPP (RULE) Close files when they are no longer needed" ] } }, { "id": "CERT_CPP-EXP56-a", "name": "Do not call a function with a mismatched language linkage", "shortDescription": { "text": "Do not call a function with a mismatched language linkage" }, "fullDescription": { "text": "Do not call a function with a mismatched language linkage [CERT_CPP-EXP56-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Do not call a function with a mismatched language linkage [CERT_CPP-EXP56-a]" }, "properties": { "tags": [ "SEI CERT C++", "CERT-EXP56_CPP (RULE) Do not call a function with a mismatched language linkage" ] } }, { "id": "CERT_CPP-ERR62-a", "name": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used", "shortDescription": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used" }, "fullDescription": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used [CERT_CPP-ERR62-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used [CERT_CPP-ERR62-a]" }, "properties": { "tags": [ "SEI CERT C++", "CERT-ERR62_CPP (RULE) Detect errors when converting a string to a number" ] } }, { "id": "CODSTA-142", "name": "Global functions shall not declare parameters with array type", "shortDescription": { "text": "Global functions shall not declare parameters with array type" }, "fullDescription": { "text": "Global functions shall not declare parameters with array type [CODSTA-142]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Global functions shall not declare parameters with array type [CODSTA-142]" }, "properties": { "tags": [ "Coding Conventions" ] } }, { "id": "CODSTA-03", "name": "Do not define constants via #define", "shortDescription": { "text": "Do not define constants via #define" }, "fullDescription": { "text": "Do not define constants via #define [CODSTA-03]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Do not define constants via #define [CODSTA-03]" }, "properties": { "tags": [ "Coding Conventions" ] } }, { "id": "CODSTA-110", "name": "The input\/output functions from the 'cstdio' and 'cwchar' libraries should not be used", "shortDescription": { "text": "The input\/output functions from the 'cstdio' and 'cwchar' libraries should not be used" }, "fullDescription": { "text": "The input\/output functions from the 'cstdio' and 'cwchar' libraries should not be used [CODSTA-110]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The input\/output functions from the 'cstdio' and 'cwchar' libraries should not be used [CODSTA-110]" }, "properties": { "tags": [ "Coding Conventions" ] } }, { "id": "CODSTA-122_a", "name": "The value returned by a function having non-void return type shall be used", "shortDescription": { "text": "The value returned by a function having non-void return type shall be used" }, "fullDescription": { "text": "The value returned by a function having non-void return type shall be used [CODSTA-122_a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The value returned by a function having non-void return type shall be used [CODSTA-122_a]" }, "properties": { "tags": [ "Coding Conventions" ] } }, { "id": "CODSTA-131", "name": "Use NULL instead of literal zero (0) as the null-pointer-constant", "shortDescription": { "text": "Use NULL instead of literal zero (0) as the null-pointer-constant" }, "fullDescription": { "text": "Use NULL instead of literal zero (0) as the null-pointer-constant [CODSTA-131]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Use NULL instead of literal zero (0) as the null-pointer-constant [CODSTA-131]" }, "properties": { "tags": [ "Coding Conventions" ] } }, { "id": "CODSTA-223", "name": "Fixed width integer types from <cstdint>, indicating the size and signedness, shall be used in place of the basic numerical types", "shortDescription": { "text": "Fixed width integer types from <cstdint>, indicating the size and signedness, shall be used in place of the basic numerical types" }, "fullDescription": { "text": "Fixed width integer types from <cstdint>, indicating the size and signedness, shall be used in place of the basic numerical types [CODSTA-223]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Fixed width integer types from <cstdint>, indicating the size and signedness, shall be used in place of the basic numerical types [CODSTA-223]" }, "properties": { "tags": [ "Coding Conventions" ] } }, { "id": "CODSTA-23", "name": "All 'if' statements should have an 'else' clause", "shortDescription": { "text": "All 'if' statements should have an 'else' clause" }, "fullDescription": { "text": "All 'if' statements should have an 'else' clause [CODSTA-23]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "All 'if' statements should have an 'else' clause [CODSTA-23]" }, "properties": { "tags": [ "Coding Conventions" ] } }, { "id": "CODSTA-26", "name": "Avoid magic numbers", "shortDescription": { "text": "Avoid magic numbers" }, "fullDescription": { "text": "Avoid magic numbers [CODSTA-26]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid magic numbers [CODSTA-26]" }, "properties": { "tags": [ "Coding Conventions" ] } }, { "id": "CODSTA-27", "name": "Avoid functions that modify global variables", "shortDescription": { "text": "Avoid functions that modify global variables" }, "fullDescription": { "text": "Avoid functions that modify global variables [CODSTA-27]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid functions that modify global variables [CODSTA-27]" }, "properties": { "tags": [ "Coding Conventions" ] } }, { "id": "CODSTA-31", "name": "Avoid explicit type conversions (casts)", "shortDescription": { "text": "Avoid explicit type conversions (casts)" }, "fullDescription": { "text": "Avoid explicit type conversions (casts) [CODSTA-31]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid explicit type conversions (casts) [CODSTA-31]" }, "properties": { "tags": [ "Coding Conventions" ] } }, { "id": "CODSTA-37", "name": "Prefer const objects or enums to #defines for simple constants", "shortDescription": { "text": "Prefer const objects or enums to #defines for simple constants" }, "fullDescription": { "text": "Prefer const objects or enums to #defines for simple constants [CODSTA-37]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Prefer const objects or enums to #defines for simple constants [CODSTA-37]" }, "properties": { "tags": [ "Coding Conventions" ] } }, { "id": "CODSTA-68", "name": "A \"U\" suffix shall be applied to all octal or hexadecimal integer literals of unsigned type", "shortDescription": { "text": "A \"U\" suffix shall be applied to all octal or hexadecimal integer literals of unsigned type" }, "fullDescription": { "text": "A \"U\" suffix shall be applied to all octal or hexadecimal integer literals of unsigned type [CODSTA-68]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "A \"U\" suffix shall be applied to all octal or hexadecimal integer literals of unsigned type [CODSTA-68]" }, "properties": { "tags": [ "Coding Conventions" ] } }, { "id": "CODSTA-83", "name": "All loops must have a fixed upper or lower bound", "shortDescription": { "text": "All loops must have a fixed upper or lower bound" }, "fullDescription": { "text": "All loops must have a fixed upper or lower bound [CODSTA-83]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "All loops must have a fixed upper or lower bound [CODSTA-83]" }, "properties": { "tags": [ "Coding Conventions" ] } }, { "id": "CODSTA-86", "name": "The validity of parameters must be checked inside each function", "shortDescription": { "text": "The validity of parameters must be checked inside each function" }, "fullDescription": { "text": "The validity of parameters must be checked inside each function [CODSTA-86]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The validity of parameters must be checked inside each function [CODSTA-86]" }, "properties": { "tags": [ "Coding Conventions" ] } }, { "id": "CODSTA-89", "name": "The declaration should not contain more than one level of pointer indirection", "shortDescription": { "text": "The declaration should not contain more than one level of pointer indirection" }, "fullDescription": { "text": "The declaration should not contain more than one level of pointer indirection [CODSTA-89]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The declaration should not contain more than one level of pointer indirection [CODSTA-89]" }, "properties": { "tags": [ "Coding Conventions" ] } }, { "id": "CODSTA-94", "name": "Do not declare pointer or array type", "shortDescription": { "text": "Do not declare pointer or array type" }, "fullDescription": { "text": "Do not declare pointer or array type [CODSTA-94]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Do not declare pointer or array type [CODSTA-94]" }, "properties": { "tags": [ "Coding Conventions" ] } }, { "id": "CODSTA-95", "name": "Do not declare pointer type", "shortDescription": { "text": "Do not declare pointer type" }, "fullDescription": { "text": "Do not declare pointer type [CODSTA-95]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Do not declare pointer type [CODSTA-95]" }, "properties": { "tags": [ "Coding Conventions" ] } }, { "id": "CODSTA-203", "name": "Do not hard code string literals", "shortDescription": { "text": "Do not hard code string literals" }, "fullDescription": { "text": "Do not hard code string literals [CODSTA-203]" }, "defaultConfiguration": { "level": "note" }, "help": { "text": "Do not hard code string literals [CODSTA-203]" }, "properties": { "tags": [ "Coding Conventions" ] } }, { "id": "CODSTA-46", "name": "Use positive logic rather than negative logic whenever practical", "shortDescription": { "text": "Use positive logic rather than negative logic whenever practical" }, "fullDescription": { "text": "Use positive logic rather than negative logic whenever practical [CODSTA-46]" }, "defaultConfiguration": { "level": "note" }, "help": { "text": "Use positive logic rather than negative logic whenever practical [CODSTA-46]" }, "properties": { "tags": [ "Coding Conventions" ] } }, { "id": "CODSTA-CPP-04", "name": "Constructors allowing for conversion should be made explicit", "shortDescription": { "text": "Constructors allowing for conversion should be made explicit" }, "fullDescription": { "text": "Constructors allowing for conversion should be made explicit [CODSTA-CPP-04]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Constructors allowing for conversion should be made explicit [CODSTA-CPP-04]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-19", "name": "Declare at least one constructor to prevent the compiler from doing so", "shortDescription": { "text": "Declare at least one constructor to prevent the compiler from doing so" }, "fullDescription": { "text": "Declare at least one constructor to prevent the compiler from doing so [CODSTA-CPP-19]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Declare at least one constructor to prevent the compiler from doing so [CODSTA-CPP-19]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-06", "name": "Avoid returning handles to class data from member functions", "shortDescription": { "text": "Avoid returning handles to class data from member functions" }, "fullDescription": { "text": "Avoid returning handles to class data from member functions [CODSTA-CPP-06]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid returning handles to class data from member functions [CODSTA-CPP-06]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-11", "name": "C-style casts should not be used", "shortDescription": { "text": "C-style casts should not be used" }, "fullDescription": { "text": "C-style casts should not be used [CODSTA-CPP-11]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "C-style casts should not be used [CODSTA-CPP-11]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-12", "name": "Put classes that are used as base classes and classes that are used as member variables into separate include files", "shortDescription": { "text": "Put classes that are used as base classes and classes that are used as member variables into separate include files" }, "fullDescription": { "text": "Put classes that are used as base classes and classes that are used as member variables into separate include files [CODSTA-CPP-12]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Put classes that are used as base classes and classes that are used as member variables into separate include files [CODSTA-CPP-12]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-15", "name": "Put functions that are used in the body of inline member function into separate include file", "shortDescription": { "text": "Put functions that are used in the body of inline member function into separate include file" }, "fullDescription": { "text": "Put functions that are used in the body of inline member function into separate include file [CODSTA-CPP-15]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Put functions that are used in the body of inline member function into separate include file [CODSTA-CPP-15]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-25", "name": "Consider making virtual functions nonpublic, and public functions nonvirtual", "shortDescription": { "text": "Consider making virtual functions nonpublic, and public functions nonvirtual" }, "fullDescription": { "text": "Consider making virtual functions nonpublic, and public functions nonvirtual [CODSTA-CPP-25]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Consider making virtual functions nonpublic, and public functions nonvirtual [CODSTA-CPP-25]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-36", "name": "The global namespace shall only contain main() and namespace declarations", "shortDescription": { "text": "The global namespace shall only contain main() and namespace declarations" }, "fullDescription": { "text": "The global namespace shall only contain main() and namespace declarations [CODSTA-CPP-36]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The global namespace shall only contain main() and namespace declarations [CODSTA-CPP-36]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-46", "name": "Order of scopes in class: public before all others", "shortDescription": { "text": "Order of scopes in class: public before all others" }, "fullDescription": { "text": "Order of scopes in class: public before all others [CODSTA-CPP-46]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Order of scopes in class: public before all others [CODSTA-CPP-46]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-47", "name": "Order of scopes in classes: protected before private", "shortDescription": { "text": "Order of scopes in classes: protected before private" }, "fullDescription": { "text": "Order of scopes in classes: protected before private [CODSTA-CPP-47]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Order of scopes in classes: protected before private [CODSTA-CPP-47]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-50", "name": "Do not use static keyword except inside functions and classes", "shortDescription": { "text": "Do not use static keyword except inside functions and classes" }, "fullDescription": { "text": "Do not use static keyword except inside functions and classes [CODSTA-CPP-50]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Do not use static keyword except inside functions and classes [CODSTA-CPP-50]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-53", "name": "Declare local variable as const whenever possible", "shortDescription": { "text": "Declare local variable as const whenever possible" }, "fullDescription": { "text": "Declare local variable as const whenever possible [CODSTA-CPP-53]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Declare local variable as const whenever possible [CODSTA-CPP-53]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-54", "name": "Member functions shall be declared const whenever possible", "shortDescription": { "text": "Member functions shall be declared const whenever possible" }, "fullDescription": { "text": "Member functions shall be declared const whenever possible [CODSTA-CPP-54]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Member functions shall be declared const whenever possible [CODSTA-CPP-54]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-58", "name": "The value returned by a function having a non-void return type that is not an overloaded operator shall always be used", "shortDescription": { "text": "The value returned by a function having a non-void return type that is not an overloaded operator shall always be used" }, "fullDescription": { "text": "The value returned by a function having a non-void return type that is not an overloaded operator shall always be used [CODSTA-CPP-58]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The value returned by a function having a non-void return type that is not an overloaded operator shall always be used [CODSTA-CPP-58]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-59", "name": "The C library shall not be used", "shortDescription": { "text": "The C library shall not be used" }, "fullDescription": { "text": "The C library shall not be used [CODSTA-CPP-59]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The C library shall not be used [CODSTA-CPP-59]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-63", "name": "Literal zero (0) shall not be used as the null-pointer-constant", "shortDescription": { "text": "Literal zero (0) shall not be used as the null-pointer-constant" }, "fullDescription": { "text": "Literal zero (0) shall not be used as the null-pointer-constant [CODSTA-CPP-63]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Literal zero (0) shall not be used as the null-pointer-constant [CODSTA-CPP-63]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-66", "name": "C-style casts (other than void casts) and functional notation casts (other than explicit constructor calls) shall not be used", "shortDescription": { "text": "C-style casts (other than void casts) and functional notation casts (other than explicit constructor calls) shall not be used" }, "fullDescription": { "text": "C-style casts (other than void casts) and functional notation casts (other than explicit constructor calls) shall not be used [CODSTA-CPP-66]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "C-style casts (other than void casts) and functional notation casts (other than explicit constructor calls) shall not be used [CODSTA-CPP-66]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-67", "name": "Each operand of the ! operator, the logical && or the logical || operators shall have type bool", "shortDescription": { "text": "Each operand of the ! operator, the logical && or the logical || operators shall have type bool" }, "fullDescription": { "text": "Each operand of the ! operator, the logical && or the logical || operators shall have type bool [CODSTA-CPP-67]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Each operand of the ! operator, the logical && or the logical || operators shall have type bool [CODSTA-CPP-67]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-78", "name": "If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const", "shortDescription": { "text": "If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const" }, "fullDescription": { "text": "If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const [CODSTA-CPP-78]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const [CODSTA-CPP-78]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-82", "name": "Global variables and static data members should not be used", "shortDescription": { "text": "Global variables and static data members should not be used" }, "fullDescription": { "text": "Global variables and static data members should not be used [CODSTA-CPP-82]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Global variables and static data members should not be used [CODSTA-CPP-82]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-96", "name": "Do not call a function with a mismatched language linkage", "shortDescription": { "text": "Do not call a function with a mismatched language linkage" }, "fullDescription": { "text": "Do not call a function with a mismatched language linkage [CODSTA-CPP-96]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Do not call a function with a mismatched language linkage [CODSTA-CPP-96]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-01", "name": "Prefer iostream.h to stdio.h", "shortDescription": { "text": "Prefer iostream.h to stdio.h" }, "fullDescription": { "text": "Prefer iostream.h to stdio.h [CODSTA-CPP-01]" }, "defaultConfiguration": { "level": "note" }, "help": { "text": "Prefer iostream.h to stdio.h [CODSTA-CPP-01]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-18", "name": "Encapsulate global variables and constants, enumerated types, and typedefs in a class", "shortDescription": { "text": "Encapsulate global variables and constants, enumerated types, and typedefs in a class" }, "fullDescription": { "text": "Encapsulate global variables and constants, enumerated types, and typedefs in a class [CODSTA-CPP-18]" }, "defaultConfiguration": { "level": "note" }, "help": { "text": "Encapsulate global variables and constants, enumerated types, and typedefs in a class [CODSTA-CPP-18]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-CPP-23", "name": "Whenever a global function  is  referenced, use the :: operator", "shortDescription": { "text": "Whenever a global function  is  referenced, use the :: operator" }, "fullDescription": { "text": "Whenever a global function  is  referenced, use the :: operator [CODSTA-CPP-23]" }, "defaultConfiguration": { "level": "note" }, "help": { "text": "Whenever a global function  is  referenced, use the :: operator [CODSTA-CPP-23]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for C++" ] } }, { "id": "CODSTA-MCPP-08_a", "name": "Prefer 'auto' to explicit type names in variable declarations", "shortDescription": { "text": "Prefer 'auto' to explicit type names in variable declarations" }, "fullDescription": { "text": "Prefer 'auto' to explicit type names in variable declarations [CODSTA-MCPP-08_a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Prefer 'auto' to explicit type names in variable declarations [CODSTA-MCPP-08_a]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for Modern C++" ] } }, { "id": "CODSTA-MCPP-08_b", "name": "Prefer 'auto' to explicit type names for function return types", "shortDescription": { "text": "Prefer 'auto' to explicit type names for function return types" }, "fullDescription": { "text": "Prefer 'auto' to explicit type names for function return types [CODSTA-MCPP-08_b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Prefer 'auto' to explicit type names for function return types [CODSTA-MCPP-08_b]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for Modern C++" ] } }, { "id": "CODSTA-MCPP-05", "name": "Each overriding virtual function shall be declared with the override or final specifier", "shortDescription": { "text": "Each overriding virtual function shall be declared with the override or final specifier" }, "fullDescription": { "text": "Each overriding virtual function shall be declared with the override or final specifier [CODSTA-MCPP-05]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Each overriding virtual function shall be declared with the override or final specifier [CODSTA-MCPP-05]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for Modern C++" ] } }, { "id": "CODSTA-MCPP-09", "name": "Declare functions 'noexcept' if they will not emit exceptions", "shortDescription": { "text": "Declare functions 'noexcept' if they will not emit exceptions" }, "fullDescription": { "text": "Declare functions 'noexcept' if they will not emit exceptions [CODSTA-MCPP-09]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Declare functions 'noexcept' if they will not emit exceptions [CODSTA-MCPP-09]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for Modern C++" ] } }, { "id": "CODSTA-MCPP-23", "name": "If a public destructor of a class is non-virtual, then the class should be declared final", "shortDescription": { "text": "If a public destructor of a class is non-virtual, then the class should be declared final" }, "fullDescription": { "text": "If a public destructor of a class is non-virtual, then the class should be declared final [CODSTA-MCPP-23]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "If a public destructor of a class is non-virtual, then the class should be declared final [CODSTA-MCPP-23]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for Modern C++" ] } }, { "id": "CODSTA-MCPP-24", "name": "Only one of virtual, override or final should be specified in a member function declaration", "shortDescription": { "text": "Only one of virtual, override or final should be specified in a member function declaration" }, "fullDescription": { "text": "Only one of virtual, override or final should be specified in a member function declaration [CODSTA-MCPP-24]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Only one of virtual, override or final should be specified in a member function declaration [CODSTA-MCPP-24]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for Modern C++" ] } }, { "id": "CODSTA-MCPP-32", "name": "Static and thread-local objects shall be constant-initialized", "shortDescription": { "text": "Static and thread-local objects shall be constant-initialized" }, "fullDescription": { "text": "Static and thread-local objects shall be constant-initialized [CODSTA-MCPP-32]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Static and thread-local objects shall be constant-initialized [CODSTA-MCPP-32]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for Modern C++" ] } }, { "id": "CODSTA-MCPP-38", "name": "Braced-initialization {}, without equals sign, shall be used for variable initialization", "shortDescription": { "text": "Braced-initialization {}, without equals sign, shall be used for variable initialization" }, "fullDescription": { "text": "Braced-initialization {}, without equals sign, shall be used for variable initialization [CODSTA-MCPP-38]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Braced-initialization {}, without equals sign, shall be used for variable initialization [CODSTA-MCPP-38]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for Modern C++" ] } }, { "id": "CODSTA-MCPP-04", "name": "Prefer 'nullptr' over 'NULL' or '0'(zero)", "shortDescription": { "text": "Prefer 'nullptr' over 'NULL' or '0'(zero)" }, "fullDescription": { "text": "Prefer 'nullptr' over 'NULL' or '0'(zero) [CODSTA-MCPP-04]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Prefer 'nullptr' over 'NULL' or '0'(zero) [CODSTA-MCPP-04]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for Modern C++" ] } }, { "id": "CODSTA-MCPP-11_b_cpp11", "name": "Use constexpr to declare functions whenever possible", "shortDescription": { "text": "Use constexpr to declare functions whenever possible" }, "fullDescription": { "text": "Use constexpr to declare functions whenever possible [CODSTA-MCPP-11_b_cpp11]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Use constexpr to declare functions whenever possible [CODSTA-MCPP-11_b_cpp11]" }, "properties": { "tags": [ "Coding Conventions", "Coding Conventions for Modern C++" ] } }, { "id": "COMMENT-01", "name": "Prefer C++ style comment", "shortDescription": { "text": "Prefer C++ style comment" }, "fullDescription": { "text": "Prefer C++ style comment [COMMENT-01]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Prefer C++ style comment [COMMENT-01]" }, "properties": { "tags": [ "Comments" ] } }, { "id": "COMMENT-02", "name": "Provide copyright information", "shortDescription": { "text": "Provide copyright information" }, "fullDescription": { "text": "Provide copyright information [COMMENT-02]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Provide copyright information [COMMENT-02]" }, "properties": { "tags": [ "Comments" ] } }, { "id": "COMMENT-03", "name": "Every source file will be documented with an introductory comment that provides information on the file", "shortDescription": { "text": "Every source file will be documented with an introductory comment that provides information on the file" }, "fullDescription": { "text": "Every source file will be documented with an introductory comment that provides information on the file [COMMENT-03]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Every source file will be documented with an introductory comment that provides information on the file [COMMENT-03]" }, "properties": { "tags": [ "Comments" ] } }, { "id": "COMMENT-04", "name": "Document functions in comments that precede function definitions", "shortDescription": { "text": "Document functions in comments that precede function definitions" }, "fullDescription": { "text": "Document functions in comments that precede function definitions [COMMENT-04]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Document functions in comments that precede function definitions [COMMENT-04]" }, "properties": { "tags": [ "Comments" ] } }, { "id": "COMMENT-04_b", "name": "Document functions in comments that precede function declarations", "shortDescription": { "text": "Document functions in comments that precede function declarations" }, "fullDescription": { "text": "Document functions in comments that precede function declarations [COMMENT-04_b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Document functions in comments that precede function declarations [COMMENT-04_b]" }, "properties": { "tags": [ "Comments" ] } }, { "id": "COMMENT-05", "name": "Each variable declaration should be commented", "shortDescription": { "text": "Each variable declaration should be commented" }, "fullDescription": { "text": "Each variable declaration should be commented [COMMENT-05]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Each variable declaration should be commented [COMMENT-05]" }, "properties": { "tags": [ "Comments" ] } }, { "id": "COMMENT-10", "name": "Use of floating-point arithmetic shall be documented", "shortDescription": { "text": "Use of floating-point arithmetic shall be documented" }, "fullDescription": { "text": "Use of floating-point arithmetic shall be documented [COMMENT-10]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Use of floating-point arithmetic shall be documented [COMMENT-10]" }, "properties": { "tags": [ "Comments" ] } }, { "id": "COMMENT-14", "name": "All declarations of types, data members, and functions should be preceded by a comment annotated with the '@brief' tag", "shortDescription": { "text": "All declarations of types, data members, and functions should be preceded by a comment annotated with the '@brief' tag" }, "fullDescription": { "text": "All declarations of types, data members, and functions should be preceded by a comment annotated with the '@brief' tag [COMMENT-14]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "All declarations of types, data members, and functions should be preceded by a comment annotated with the '@brief' tag [COMMENT-14]" }, "properties": { "tags": [ "Comments" ] } }, { "id": "COMMENT-14_b", "name": "Function parameters and return type should be documented in a comment that precedes the function declaration", "shortDescription": { "text": "Function parameters and return type should be documented in a comment that precedes the function declaration" }, "fullDescription": { "text": "Function parameters and return type should be documented in a comment that precedes the function declaration [COMMENT-14_b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Function parameters and return type should be documented in a comment that precedes the function declaration [COMMENT-14_b]" }, "properties": { "tags": [ "Comments" ] } }, { "id": "CWE-772-a", "name": "Ensure resources are freed", "shortDescription": { "text": "Ensure resources are freed" }, "fullDescription": { "text": "Ensure resources are freed [CWE-772-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Ensure resources are freed [CWE-772-a]" }, "properties": { "tags": [ "Common Weakness Enumeration", "CWE-772 Missing Release of Resource after Effective Lifetime" ] } }, { "id": "CWE-772-b", "name": "Define a virtual destructor in classes used as base classes which have virtual functions", "shortDescription": { "text": "Define a virtual destructor in classes used as base classes which have virtual functions" }, "fullDescription": { "text": "Define a virtual destructor in classes used as base classes which have virtual functions [CWE-772-b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Define a virtual destructor in classes used as base classes which have virtual functions [CWE-772-b]" }, "properties": { "tags": [ "Common Weakness Enumeration", "CWE-772 Missing Release of Resource after Effective Lifetime" ] } }, { "id": "CWE-476-a", "name": "Avoid null pointer dereferencing", "shortDescription": { "text": "Avoid null pointer dereferencing" }, "fullDescription": { "text": "Avoid null pointer dereferencing [CWE-476-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid null pointer dereferencing [CWE-476-a]" }, "properties": { "tags": [ "Common Weakness Enumeration", "CWE-476 NULL Pointer Dereference" ] } }, { "id": "CWE-770-a", "name": "Validate potentially tainted data before it is used to determine the size of memory allocation", "shortDescription": { "text": "Validate potentially tainted data before it is used to determine the size of memory allocation" }, "fullDescription": { "text": "Validate potentially tainted data before it is used to determine the size of memory allocation [CWE-770-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Validate potentially tainted data before it is used to determine the size of memory allocation [CWE-770-a]" }, "properties": { "tags": [ "Common Weakness Enumeration", "CWE-770 Allocation of Resources Without Limits or Throttling" ] } }, { "id": "CWE-798-a", "name": "Do not hard code string literals", "shortDescription": { "text": "Do not hard code string literals" }, "fullDescription": { "text": "Do not hard code string literals [CWE-798-a]" }, "defaultConfiguration": { "level": "note" }, "help": { "text": "Do not hard code string literals [CWE-798-a]" }, "properties": { "tags": [ "Common Weakness Enumeration", "CWE-798 Use of Hard-coded Credentials" ] } }, { "id": "CWE-20-b", "name": "Avoid potential integer overflow\/underflow on tainted data", "shortDescription": { "text": "Avoid potential integer overflow\/underflow on tainted data" }, "fullDescription": { "text": "Avoid potential integer overflow\/underflow on tainted data [CWE-20-b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid potential integer overflow\/underflow on tainted data [CWE-20-b]" }, "properties": { "tags": [ "Common Weakness Enumeration", "CWE-20 Improper Input Validation" ] } }, { "id": "CWE-20-j", "name": "Untrusted data is used as a loop boundary", "shortDescription": { "text": "Untrusted data is used as a loop boundary" }, "fullDescription": { "text": "Untrusted data is used as a loop boundary [CWE-20-j]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Untrusted data is used as a loop boundary [CWE-20-j]" }, "properties": { "tags": [ "Common Weakness Enumeration", "CWE-20 Improper Input Validation" ] } }, { "id": "EXCEPT-05", "name": "C++ exceptions shall not be used (i.e. throw, catch and try shall not be used.)", "shortDescription": { "text": "C++ exceptions shall not be used (i.e. throw, catch and try shall not be used.)" }, "fullDescription": { "text": "C++ exceptions shall not be used (i.e. throw, catch and try shall not be used.) [EXCEPT-05]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "C++ exceptions shall not be used (i.e. throw, catch and try shall not be used.) [EXCEPT-05]" }, "properties": { "tags": [ "Exceptions" ] } }, { "id": "EXCEPT-06", "name": "There should be at least one exception handler to catch all otherwise unhandled exceptions", "shortDescription": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions" }, "fullDescription": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions [EXCEPT-06]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions [EXCEPT-06]" }, "properties": { "tags": [ "Exceptions" ] } }, { "id": "EXCEPT-08", "name": "Exceptions shall be raised only after start-up and before termination of the program", "shortDescription": { "text": "Exceptions shall be raised only after start-up and before termination of the program" }, "fullDescription": { "text": "Exceptions shall be raised only after start-up and before termination of the program [EXCEPT-08]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Exceptions shall be raised only after start-up and before termination of the program [EXCEPT-08]" }, "properties": { "tags": [ "Exceptions" ] } }, { "id": "EXCEPT-09", "name": "An exception object should not have pointer type", "shortDescription": { "text": "An exception object should not have pointer type" }, "fullDescription": { "text": "An exception object should not have pointer type [EXCEPT-09]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "An exception object should not have pointer type [EXCEPT-09]" }, "properties": { "tags": [ "Exceptions" ] } }, { "id": "FORMAT-02", "name": "Place an opening brace '{' on its own line", "shortDescription": { "text": "Place an opening brace '{' on its own line" }, "fullDescription": { "text": "Place an opening brace '{' on its own line [FORMAT-02]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Place an opening brace '{' on its own line [FORMAT-02]" }, "properties": { "tags": [ "Formatting" ] } }, { "id": "FORMAT-03", "name": "Place a closing brace '}' on its own line", "shortDescription": { "text": "Place a closing brace '}' on its own line" }, "fullDescription": { "text": "Place a closing brace '}' on its own line [FORMAT-03]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Place a closing brace '}' on its own line [FORMAT-03]" }, "properties": { "tags": [ "Formatting" ] } }, { "id": "FORMAT-04", "name": "Physical lines should be less than eighty characters", "shortDescription": { "text": "Physical lines should be less than eighty characters" }, "fullDescription": { "text": "Physical lines should be less than eighty characters [FORMAT-04]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Physical lines should be less than eighty characters [FORMAT-04]" }, "properties": { "tags": [ "Formatting" ] } }, { "id": "FORMAT-12", "name": "There shall be a single ASCII space character between a conditional statement keyword and its opening parenthesis", "shortDescription": { "text": "There shall be a single ASCII space character between a conditional statement keyword and its opening parenthesis" }, "fullDescription": { "text": "There shall be a single ASCII space character between a conditional statement keyword and its opening parenthesis [FORMAT-12]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "There shall be a single ASCII space character between a conditional statement keyword and its opening parenthesis [FORMAT-12]" }, "properties": { "tags": [ "Formatting" ] } }, { "id": "FORMAT-25_b", "name": "Parenthesis shall be used with the \"return\" statement", "shortDescription": { "text": "Parenthesis shall be used with the \"return\" statement" }, "fullDescription": { "text": "Parenthesis shall be used with the \"return\" statement [FORMAT-25_b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Parenthesis shall be used with the \"return\" statement [FORMAT-25_b]" }, "properties": { "tags": [ "Formatting" ] } }, { "id": "FORMAT-28", "name": "In a function definition, the return type of the function should be written on a separate line directly above the function name", "shortDescription": { "text": "In a function definition, the return type of the function should be written on a separate line directly above the function name" }, "fullDescription": { "text": "In a function definition, the return type of the function should be written on a separate line directly above the function name [FORMAT-28]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "In a function definition, the return type of the function should be written on a separate line directly above the function name [FORMAT-28]" }, "properties": { "tags": [ "Formatting" ] } }, { "id": "FORMAT-29", "name": "Multiple variable declarations shall not be allowed on the same line", "shortDescription": { "text": "Multiple variable declarations shall not be allowed on the same line" }, "fullDescription": { "text": "Multiple variable declarations shall not be allowed on the same line [FORMAT-29]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Multiple variable declarations shall not be allowed on the same line [FORMAT-29]" }, "properties": { "tags": [ "Formatting" ] } }, { "id": "FORMAT-33", "name": "Each variable should be declared in a separate declaration statement", "shortDescription": { "text": "Each variable should be declared in a separate declaration statement" }, "fullDescription": { "text": "Each variable should be declared in a separate declaration statement [FORMAT-33]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Each variable should be declared in a separate declaration statement [FORMAT-33]" }, "properties": { "tags": [ "Formatting" ] } }, { "id": "FORMAT-34", "name": "Braces \"{}\" which enclose a block should be placed in the same column", "shortDescription": { "text": "Braces \"{}\" which enclose a block should be placed in the same column" }, "fullDescription": { "text": "Braces \"{}\" which enclose a block should be placed in the same column [FORMAT-34]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Braces \"{}\" which enclose a block should be placed in the same column [FORMAT-34]" }, "properties": { "tags": [ "Formatting" ] } }, { "id": "FORMAT-42", "name": "Braces (\"{}\") which enclose a block will have nothing else on the line except comments", "shortDescription": { "text": "Braces (\"{}\") which enclose a block will have nothing else on the line except comments" }, "fullDescription": { "text": "Braces (\"{}\") which enclose a block will have nothing else on the line except comments [FORMAT-42]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Braces (\"{}\") which enclose a block will have nothing else on the line except comments [FORMAT-42]" }, "properties": { "tags": [ "Formatting" ] } }, { "id": "FORMAT-43", "name": "Braces (\"{}\") which enclose a block will be placed in the same column", "shortDescription": { "text": "Braces (\"{}\") which enclose a block will be placed in the same column" }, "fullDescription": { "text": "Braces (\"{}\") which enclose a block will be placed in the same column [FORMAT-43]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Braces (\"{}\") which enclose a block will be placed in the same column [FORMAT-43]" }, "properties": { "tags": [ "Formatting" ] } }, { "id": "FORMAT-47_a", "name": "Place CV-qualifiers on the right hand side of the type they apply to", "shortDescription": { "text": "Place CV-qualifiers on the right hand side of the type they apply to" }, "fullDescription": { "text": "Place CV-qualifiers on the right hand side of the type they apply to [FORMAT-47_a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Place CV-qualifiers on the right hand side of the type they apply to [FORMAT-47_a]" }, "properties": { "tags": [ "Formatting" ] } }, { "id": "FORMAT-32", "name": "The dereference operator '*' and the address-of operator '&' should be directly connected with the type", "shortDescription": { "text": "The dereference operator '*' and the address-of operator '&' should be directly connected with the type" }, "fullDescription": { "text": "The dereference operator '*' and the address-of operator '&' should be directly connected with the type [FORMAT-32]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The dereference operator '*' and the address-of operator '&' should be directly connected with the type [FORMAT-32]" }, "properties": { "tags": [ "Formatting" ] } }, { "id": "FORMAT-01", "name": "Tabs that do not use ASCII spaces shall not be used", "shortDescription": { "text": "Tabs that do not use ASCII spaces shall not be used" }, "fullDescription": { "text": "Tabs that do not use ASCII spaces shall not be used [FORMAT-01]" }, "defaultConfiguration": { "level": "note" }, "help": { "text": "Tabs that do not use ASCII spaces shall not be used [FORMAT-01]" }, "properties": { "tags": [ "Formatting" ] } }, { "id": "GLOBAL-ONEUSEVAR", "name": "A project shall not contain non-volatile POD variables having only one use", "shortDescription": { "text": "A project shall not contain non-volatile POD variables having only one use" }, "fullDescription": { "text": "A project shall not contain non-volatile POD variables having only one use [GLOBAL-ONEUSEVAR]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "A project shall not contain non-volatile POD variables having only one use [GLOBAL-ONEUSEVAR]" }, "properties": { "tags": [ "Global Static Analysis" ] } }, { "id": "GLOBAL-UNUSEDFUNC", "name": "Every defined function with external linkage shall be used at least once", "shortDescription": { "text": "Every defined function with external linkage shall be used at least once" }, "fullDescription": { "text": "Every defined function with external linkage shall be used at least once [GLOBAL-UNUSEDFUNC]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Every defined function with external linkage shall be used at least once [GLOBAL-UNUSEDFUNC]" }, "properties": { "tags": [ "Global Static Analysis" ] } }, { "id": "GLOBAL-UNUSEDTYPE", "name": "A project shall not contain unused type declarations", "shortDescription": { "text": "A project shall not contain unused type declarations" }, "fullDescription": { "text": "A project shall not contain unused type declarations [GLOBAL-UNUSEDTYPE]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "A project shall not contain unused type declarations [GLOBAL-UNUSEDTYPE]" }, "properties": { "tags": [ "Global Static Analysis" ] } }, { "id": "HICPP-2_1_1-a", "name": "Tabs that do not use ASCII spaces shall not be used", "shortDescription": { "text": "Tabs that do not use ASCII spaces shall not be used" }, "fullDescription": { "text": "Tabs that do not use ASCII spaces shall not be used [HICPP-2_1_1-a]" }, "defaultConfiguration": { "level": "note" }, "help": { "text": "Tabs that do not use ASCII spaces shall not be used [HICPP-2_1_1-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 2.1.1 Do not use tab characters in source files" ] } }, { "id": "HICPP-2_5_3-a", "name": "Prefer 'nullptr' over 'NULL' or '0'(zero)", "shortDescription": { "text": "Prefer 'nullptr' over 'NULL' or '0'(zero)" }, "fullDescription": { "text": "Prefer 'nullptr' over 'NULL' or '0'(zero) [HICPP-2_5_3-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Prefer 'nullptr' over 'NULL' or '0'(zero) [HICPP-2_5_3-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 2.5.3 Use nullptr for the null pointer constant" ] } }, { "id": "HICPP-15_1_1-a", "name": "Only use instances of std::exception for exceptions", "shortDescription": { "text": "Only use instances of std::exception for exceptions" }, "fullDescription": { "text": "Only use instances of std::exception for exceptions [HICPP-15_1_1-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Only use instances of std::exception for exceptions [HICPP-15_1_1-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 15.1.1 Only use instances of std::exception for exceptions" ] } }, { "id": "HICPP-3_3_1-a", "name": "Do not use variables with static storage duration", "shortDescription": { "text": "Do not use variables with static storage duration" }, "fullDescription": { "text": "Do not use variables with static storage duration [HICPP-3_3_1-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Do not use variables with static storage duration [HICPP-3_3_1-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 3.3.1 Do not use variables with static storage duration" ] } }, { "id": "HICPP-2_4_1-a", "name": "Different identifiers shall be typographically unambiguous", "shortDescription": { "text": "Different identifiers shall be typographically unambiguous" }, "fullDescription": { "text": "Different identifiers shall be typographically unambiguous [HICPP-2_4_1-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Different identifiers shall be typographically unambiguous [HICPP-2_4_1-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 2.4.1 Ensure that each identifier is distinct from any other visible identifier" ] } }, { "id": "HICPP-8_1_1-a", "name": "The declaration should not contain more than one level of pointer indirection", "shortDescription": { "text": "The declaration should not contain more than one level of pointer indirection" }, "fullDescription": { "text": "The declaration should not contain more than one level of pointer indirection [HICPP-8_1_1-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The declaration should not contain more than one level of pointer indirection [HICPP-8_1_1-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 8.1.1 Do not use multiple levels of pointer indirection" ] } }, { "id": "HICPP-5_2_1-c", "name": "Avoid null pointer dereferencing", "shortDescription": { "text": "Avoid null pointer dereferencing" }, "fullDescription": { "text": "Avoid null pointer dereferencing [HICPP-5_2_1-c]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid null pointer dereferencing [HICPP-5_2_1-c]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 5.2.1 Ensure that pointer or array access is demonstrably within bounds of a valid object" ] } }, { "id": "HICPP-15_3_2-b", "name": "There should be at least one exception handler to catch all otherwise unhandled exceptions", "shortDescription": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions" }, "fullDescription": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions [HICPP-15_3_2-b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions [HICPP-15_3_2-b]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 15.3.2 Ensure that a program does not result in a call to std::terminate" ] } }, { "id": "HICPP-16_1_1-a", "name": "Avoid using macro definitions", "shortDescription": { "text": "Avoid using macro definitions" }, "fullDescription": { "text": "Avoid using macro definitions [HICPP-16_1_1-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid using macro definitions [HICPP-16_1_1-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 16.1.1 Use the preprocessor only for implementing include guards, and including header files with include guards" ] } }, { "id": "HICPP-16_1_1-c", "name": "The #ifdef, #else, #elif preprocessor directives should not be used", "shortDescription": { "text": "The #ifdef, #else, #elif preprocessor directives should not be used" }, "fullDescription": { "text": "The #ifdef, #else, #elif preprocessor directives should not be used [HICPP-16_1_1-c]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The #ifdef, #else, #elif preprocessor directives should not be used [HICPP-16_1_1-c]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 16.1.1 Use the preprocessor only for implementing include guards, and including header files with include guards" ] } }, { "id": "HICPP-16_1_1-e", "name": "The #endif pre-processor directives will only be used to prevent multiple inclusions of the same header file", "shortDescription": { "text": "The #endif pre-processor directives will only be used to prevent multiple inclusions of the same header file" }, "fullDescription": { "text": "The #endif pre-processor directives will only be used to prevent multiple inclusions of the same header file [HICPP-16_1_1-e]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The #endif pre-processor directives will only be used to prevent multiple inclusions of the same header file [HICPP-16_1_1-e]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 16.1.1 Use the preprocessor only for implementing include guards, and including header files with include guards" ] } }, { "id": "HICPP-16_1_1-f", "name": "The #if pre-processor directive will only be used to prevent multiple inclusions of the same header file", "shortDescription": { "text": "The #if pre-processor directive will only be used to prevent multiple inclusions of the same header file" }, "fullDescription": { "text": "The #if pre-processor directive will only be used to prevent multiple inclusions of the same header file [HICPP-16_1_1-f]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The #if pre-processor directive will only be used to prevent multiple inclusions of the same header file [HICPP-16_1_1-f]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 16.1.1 Use the preprocessor only for implementing include guards, and including header files with include guards" ] } }, { "id": "HICPP-2_3_1-a", "name": "Prefer C++ style comment", "shortDescription": { "text": "Prefer C++ style comment" }, "fullDescription": { "text": "Prefer C++ style comment [HICPP-2_3_1-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Prefer C++ style comment [HICPP-2_3_1-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 2.3.1 Do not use the C comment delimiters \/* ... *\/" ] } }, { "id": "HICPP-7_4_1-a", "name": "Do not use static keyword except inside functions and classes", "shortDescription": { "text": "Do not use static keyword except inside functions and classes" }, "fullDescription": { "text": "Do not use static keyword except inside functions and classes [HICPP-7_4_1-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Do not use static keyword except inside functions and classes [HICPP-7_4_1-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 7.4.1 Ensure that any objects, functions or types to be used from a single translation unit are defined in an unnamed namespace in the main source file" ] } }, { "id": "HICPP-10_2_1-a", "name": "Each overriding virtual function shall be declared with the override or final specifier", "shortDescription": { "text": "Each overriding virtual function shall be declared with the override or final specifier" }, "fullDescription": { "text": "Each overriding virtual function shall be declared with the override or final specifier [HICPP-10_2_1-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Each overriding virtual function shall be declared with the override or final specifier [HICPP-10_2_1-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 10.2.1 Use the override special identifier when overriding a virtual function" ] } }, { "id": "HICPP-3_5_1-b", "name": "typedefs should be used in place of the basic types", "shortDescription": { "text": "typedefs should be used in place of the basic types" }, "fullDescription": { "text": "typedefs should be used in place of the basic types [HICPP-3_5_1-b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "typedefs should be used in place of the basic types [HICPP-3_5_1-b]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 3.5.1 Do not make any assumptions about the internal representation of a value or object" ] } }, { "id": "HICPP-8_2_3-a", "name": "Pass small objects with a trivial copy constructor by value", "shortDescription": { "text": "Pass small objects with a trivial copy constructor by value" }, "fullDescription": { "text": "Pass small objects with a trivial copy constructor by value [HICPP-8_2_3-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Pass small objects with a trivial copy constructor by value [HICPP-8_2_3-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 8.2.3 Pass small objects with a trivial copy constructor by value" ] } }, { "id": "HICPP-18_1_1-a", "name": "Do not use platform-specific multi-threading facilities", "shortDescription": { "text": "Do not use platform-specific multi-threading facilities" }, "fullDescription": { "text": "Do not use platform-specific multi-threading facilities [HICPP-18_1_1-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Do not use platform-specific multi-threading facilities [HICPP-18_1_1-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 18.1.1 Do not use platform specific multi-threading facilities" ] } }, { "id": "HICPP-5_5_1-a", "name": "Avoid division by zero", "shortDescription": { "text": "Avoid division by zero" }, "fullDescription": { "text": "Avoid division by zero [HICPP-5_5_1-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid division by zero [HICPP-5_5_1-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 5.5.1 Ensure that the right hand operand of the division or remainder operators is demonstrably non-zero" ] } }, { "id": "HICPP-5_1_1-a", "name": "Avoid magic numbers", "shortDescription": { "text": "Avoid magic numbers" }, "fullDescription": { "text": "Avoid magic numbers [HICPP-5_1_1-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid magic numbers [HICPP-5_1_1-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 5.1.1 Use symbolic names instead of literal values in code" ] } }, { "id": "HICPP-12_5_1-a", "name": "Explicitly define =default or =delete special member functions of concrete classes implicitly provided by the compiler", "shortDescription": { "text": "Explicitly define =default or =delete special member functions of concrete classes implicitly provided by the compiler" }, "fullDescription": { "text": "Explicitly define =default or =delete special member functions of concrete classes implicitly provided by the compiler [HICPP-12_5_1-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Explicitly define =default or =delete special member functions of concrete classes implicitly provided by the compiler [HICPP-12_5_1-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 12.5.1 Define explicitly =default or =delete implicit special member functions of concrete classes" ] } }, { "id": "HICPP-12_1_1-a", "name": "Constructors allowing for conversion should be made explicit", "shortDescription": { "text": "Constructors allowing for conversion should be made explicit" }, "fullDescription": { "text": "Constructors allowing for conversion should be made explicit [HICPP-12_1_1-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Constructors allowing for conversion should be made explicit [HICPP-12_1_1-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 12.1.1 Do not declare implicit user defined conversions" ] } }, { "id": "HICPP-7_1_4-a", "name": "Place CV-qualifiers on the right hand side of the type they apply to", "shortDescription": { "text": "Place CV-qualifiers on the right hand side of the type they apply to" }, "fullDescription": { "text": "Place CV-qualifiers on the right hand side of the type they apply to [HICPP-7_1_4-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Place CV-qualifiers on the right hand side of the type they apply to [HICPP-7_1_4-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 7.1.4 Place CV-qualifiers on the right hand side of the type they apply to" ] } }, { "id": "HICPP-7_1_6-b", "name": "The names of the standard signed integer types and standard unsigned integer types should not be used", "shortDescription": { "text": "The names of the standard signed integer types and standard unsigned integer types should not be used" }, "fullDescription": { "text": "The names of the standard signed integer types and standard unsigned integer types should not be used [HICPP-7_1_6-b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The names of the standard signed integer types and standard unsigned integer types should not be used [HICPP-7_1_6-b]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 7.1.6 Use class types or typedefs to abstract scalar quantities and standard integer types" ] } }, { "id": "HICPP-7_1_8-a", "name": "Use auto id = expr when declaring a variable that is the same type as the initializer function call", "shortDescription": { "text": "Use auto id = expr when declaring a variable that is the same type as the initializer function call" }, "fullDescription": { "text": "Use auto id = expr when declaring a variable that is the same type as the initializer function call [HICPP-7_1_8-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Use auto id = expr when declaring a variable that is the same type as the initializer function call [HICPP-7_1_8-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 7.1.8 Use auto id = expr when declaring a variable to have the same type as its initializer function call" ] } }, { "id": "HICPP-7_1_2-a", "name": "Declare local variable as const whenever possible", "shortDescription": { "text": "Declare local variable as const whenever possible" }, "fullDescription": { "text": "Declare local variable as const whenever possible [HICPP-7_1_2-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Declare local variable as const whenever possible [HICPP-7_1_2-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 7.1.2 Use const whenever possible" ] } }, { "id": "HICPP-7_1_1-a", "name": "Multiple variable declarations shall not be allowed on the same line", "shortDescription": { "text": "Multiple variable declarations shall not be allowed on the same line" }, "fullDescription": { "text": "Multiple variable declarations shall not be allowed on the same line [HICPP-7_1_1-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Multiple variable declarations shall not be allowed on the same line [HICPP-7_1_1-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 7.1.1 Declare each identifier on a separate line in a separate declaration" ] } }, { "id": "HICPP-7_1_1-b", "name": "Each variable should be declared in a separate declaration statement", "shortDescription": { "text": "Each variable should be declared in a separate declaration statement" }, "fullDescription": { "text": "Each variable should be declared in a separate declaration statement [HICPP-7_1_1-b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Each variable should be declared in a separate declaration statement [HICPP-7_1_1-b]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 7.1.1 Declare each identifier on a separate line in a separate declaration" ] } }, { "id": "HICPP-17_2_1-a", "name": "Wrap use of the C Standard Library", "shortDescription": { "text": "Wrap use of the C Standard Library" }, "fullDescription": { "text": "Wrap use of the C Standard Library [HICPP-17_2_1-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Wrap use of the C Standard Library [HICPP-17_2_1-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 17.2.1 Wrap use of the C Standard Library" ] } }, { "id": "HICPP-4_2_2-b", "name": "Avoid explicit type conversions (casts)", "shortDescription": { "text": "Avoid explicit type conversions (casts)" }, "fullDescription": { "text": "Avoid explicit type conversions (casts) [HICPP-4_2_2-b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid explicit type conversions (casts) [HICPP-4_2_2-b]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 4.2.2 Ensure that data loss does not demonstrably occur in an integral expression" ] } }, { "id": "HICPP-4_2_1-a", "name": "Apply the U suffix to literals used in a context that requires an unsigned integral expression", "shortDescription": { "text": "Apply the U suffix to literals used in a context that requires an unsigned integral expression" }, "fullDescription": { "text": "Apply the U suffix to literals used in a context that requires an unsigned integral expression [HICPP-4_2_1-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Apply the U suffix to literals used in a context that requires an unsigned integral expression [HICPP-4_2_1-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 4.2.1 Ensure that the U suffix is applied to a literal used in a context requiring an unsigned integral expression" ] } }, { "id": "HICPP-5_4_1-a", "name": "C-style casts should not be used", "shortDescription": { "text": "C-style casts should not be used" }, "fullDescription": { "text": "C-style casts should not be used [HICPP-5_4_1-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "C-style casts should not be used [HICPP-5_4_1-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 5.4.1 Only use casting forms: static cast (excl. void*), dynamic cast or explicit constructor call" ] } }, { "id": "HICPP-9_1_4-a", "name": "Public member functions shall not return non-const handles to private\/protected class-data", "shortDescription": { "text": "Public member functions shall not return non-const handles to private\/protected class-data" }, "fullDescription": { "text": "Public member functions shall not return non-const handles to private\/protected class-data [HICPP-9_1_4-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Public member functions shall not return non-const handles to private\/protected class-data [HICPP-9_1_4-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 9.1.4 Do not write member functions which return non-const handles to data less accessible than the member function" ] } }, { "id": "HICPP-9_1_1-a", "name": "If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const", "shortDescription": { "text": "If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const" }, "fullDescription": { "text": "If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const [HICPP-9_1_1-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const [HICPP-9_1_1-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 9.1.1 Declare static any member function that does not require this. Alternatively, declare const any member function that does not modify the externally visible state of the object" ] } }, { "id": "HICPP-1_3_3-a", "name": "The C library shall not be used", "shortDescription": { "text": "The C library shall not be used" }, "fullDescription": { "text": "The C library shall not be used [HICPP-1_3_3-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The C library shall not be used [HICPP-1_3_3-a]" }, "properties": { "tags": [ "High Integrity C++", "HIC++ 1.3.3 Do not use the C Standard Library .h headers" ] } }, { "id": "INIT-04", "name": "Initialize all pointer variables", "shortDescription": { "text": "Initialize all pointer variables" }, "fullDescription": { "text": "Initialize all pointer variables [INIT-04]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Initialize all pointer variables [INIT-04]" }, "properties": { "tags": [ "Initialization" ] } }, { "id": "INIT-03", "name": "Initialize all variables", "shortDescription": { "text": "Initialize all variables" }, "fullDescription": { "text": "Initialize all variables [INIT-03]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Initialize all variables [INIT-03]" }, "properties": { "tags": [ "Initialization" ] } }, { "id": "JSF-022", "name": "The input\/output library <stdio.h> shall not be used", "shortDescription": { "text": "The input\/output library <stdio.h> shall not be used" }, "fullDescription": { "text": "The input\/output library <stdio.h> shall not be used [JSF-022]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The input\/output library <stdio.h> shall not be used [JSF-022]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-023", "name": "The library functions atof, atoi and atol from library <stdlib.h> shall not be used", "shortDescription": { "text": "The library functions atof, atoi and atol from library <stdlib.h> shall not be used" }, "fullDescription": { "text": "The library functions atof, atoi and atol from library <stdlib.h> shall not be used [JSF-023]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The library functions atof, atoi and atol from library <stdlib.h> shall not be used [JSF-023]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-026", "name": "The #ifdef, #else, #elif preprocessor directives should not be used", "shortDescription": { "text": "The #ifdef, #else, #elif preprocessor directives should not be used" }, "fullDescription": { "text": "The #ifdef, #else, #elif preprocessor directives should not be used [JSF-026]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The #ifdef, #else, #elif preprocessor directives should not be used [JSF-026]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-026_b", "name": "The #if preprocessor directive should not be used", "shortDescription": { "text": "The #if preprocessor directive should not be used" }, "fullDescription": { "text": "The #if preprocessor directive should not be used [JSF-026_b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The #if preprocessor directive should not be used [JSF-026_b]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-029", "name": "The #define pre-processor directive shall not be used to create inline macros", "shortDescription": { "text": "The #define pre-processor directive shall not be used to create inline macros" }, "fullDescription": { "text": "The #define pre-processor directive shall not be used to create inline macros [JSF-029]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The #define pre-processor directive shall not be used to create inline macros [JSF-029]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-030", "name": "The #define pre-processor directive shall not be used to define constant values", "shortDescription": { "text": "The #define pre-processor directive shall not be used to define constant values" }, "fullDescription": { "text": "The #define pre-processor directive shall not be used to define constant values [JSF-030]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The #define pre-processor directive shall not be used to define constant values [JSF-030]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-033", "name": "The #include directive shall use the <filename.h> notation to include header files", "shortDescription": { "text": "The #include directive shall use the <filename.h> notation to include header files" }, "fullDescription": { "text": "The #include directive shall use the <filename.h> notation to include header files [JSF-033]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The #include directive shall use the <filename.h> notation to include header files [JSF-033]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-078", "name": "All base classes with a virtual function shall define a virtual destructor", "shortDescription": { "text": "All base classes with a virtual function shall define a virtual destructor" }, "fullDescription": { "text": "All base classes with a virtual function shall define a virtual destructor [JSF-078]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "All base classes with a virtual function shall define a virtual destructor [JSF-078]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-097_c", "name": "Arrays shall not be used in global functions", "shortDescription": { "text": "Arrays shall not be used in global functions" }, "fullDescription": { "text": "Arrays shall not be used in global functions [JSF-097_c]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Arrays shall not be used in global functions [JSF-097_c]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-126", "name": "Only valid C++ style comments (\/\/) shall be used", "shortDescription": { "text": "Only valid C++ style comments (\/\/) shall be used" }, "fullDescription": { "text": "Only valid C++ style comments (\/\/) shall be used [JSF-126]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Only valid C++ style comments (\/\/) shall be used [JSF-126]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-142_b", "name": "All variables shall be initialized before use", "shortDescription": { "text": "All variables shall be initialized before use" }, "fullDescription": { "text": "All variables shall be initialized before use [JSF-142_b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "All variables shall be initialized before use [JSF-142_b]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-152", "name": "Multiple variable declarations shall not be allowed on the same line", "shortDescription": { "text": "Multiple variable declarations shall not be allowed on the same line" }, "fullDescription": { "text": "Multiple variable declarations shall not be allowed on the same line [JSF-152]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Multiple variable declarations shall not be allowed on the same line [JSF-152]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-185", "name": "C-style casts (other than void casts) and functional notation casts (other than explicit constructor calls) shall not be used", "shortDescription": { "text": "C-style casts (other than void casts) and functional notation casts (other than explicit constructor calls) shall not be used" }, "fullDescription": { "text": "C-style casts (other than void casts) and functional notation casts (other than explicit constructor calls) shall not be used [JSF-185]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "C-style casts (other than void casts) and functional notation casts (other than explicit constructor calls) shall not be used [JSF-185]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-206", "name": "Dynamic heap memory allocation shall not be used", "shortDescription": { "text": "Dynamic heap memory allocation shall not be used" }, "fullDescription": { "text": "Dynamic heap memory allocation shall not be used [JSF-206]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Dynamic heap memory allocation shall not be used [JSF-206]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-208", "name": "C++ exceptions shall not be used", "shortDescription": { "text": "C++ exceptions shall not be used" }, "fullDescription": { "text": "C++ exceptions shall not be used [JSF-208]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "C++ exceptions shall not be used [JSF-208]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-209_b", "name": "Typedefs that indicate size and signedness shall be used in place of the basic types", "shortDescription": { "text": "Typedefs that indicate size and signedness shall be used in place of the basic types" }, "fullDescription": { "text": "Typedefs that indicate size and signedness shall be used in place of the basic types [JSF-209_b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Typedefs that indicate size and signedness shall be used in place of the basic types [JSF-209_b]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-028_b", "name": "The #endif pre-processor directives will only be used to prevent multiple inclusions of the same header file", "shortDescription": { "text": "The #endif pre-processor directives will only be used to prevent multiple inclusions of the same header file" }, "fullDescription": { "text": "The #endif pre-processor directives will only be used to prevent multiple inclusions of the same header file [JSF-028_b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The #endif pre-processor directives will only be used to prevent multiple inclusions of the same header file [JSF-028_b]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-031", "name": "The #define pre-processor directive will only be used as part of the technique to prevent multiple inclusions of the same header file", "shortDescription": { "text": "The #define pre-processor directive will only be used as part of the technique to prevent multiple inclusions of the same header file" }, "fullDescription": { "text": "The #define pre-processor directive will only be used as part of the technique to prevent multiple inclusions of the same header file [JSF-031]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The #define pre-processor directive will only be used as part of the technique to prevent multiple inclusions of the same header file [JSF-031]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-032", "name": "The #include pre-processor directive will only be used to include header (*.h) files", "shortDescription": { "text": "The #include pre-processor directive will only be used to include header (*.h) files" }, "fullDescription": { "text": "The #include pre-processor directive will only be used to include header (*.h) files [JSF-032]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The #include pre-processor directive will only be used to include header (*.h) files [JSF-032]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-041", "name": "Source lines will be kept to a length of 120 characters or less", "shortDescription": { "text": "Source lines will be kept to a length of 120 characters or less" }, "fullDescription": { "text": "Source lines will be kept to a length of 120 characters or less [JSF-041]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Source lines will be kept to a length of 120 characters or less [JSF-041]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-047", "name": "Identifiers will not begin with the underscore character \"_\"", "shortDescription": { "text": "Identifiers will not begin with the underscore character \"_\"" }, "fullDescription": { "text": "Identifiers will not begin with the underscore character \"_\" [JSF-047]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Identifiers will not begin with the underscore character \"_\" [JSF-047]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-048", "name": "Identifiers will not differ by mixture of case, the underscore character, interchange of the similarly looking letters and numbers", "shortDescription": { "text": "Identifiers will not differ by mixture of case, the underscore character, interchange of the similarly looking letters and numbers" }, "fullDescription": { "text": "Identifiers will not differ by mixture of case, the underscore character, interchange of the similarly looking letters and numbers [JSF-048]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Identifiers will not differ by mixture of case, the underscore character, interchange of the similarly looking letters and numbers [JSF-048]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-051", "name": "All letters contained in function and variable names will be composed entirely of lowercase letters", "shortDescription": { "text": "All letters contained in function and variable names will be composed entirely of lowercase letters" }, "fullDescription": { "text": "All letters contained in function and variable names will be composed entirely of lowercase letters [JSF-051]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "All letters contained in function and variable names will be composed entirely of lowercase letters [JSF-051]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-053", "name": "Header files will always have a file name extension of \".h\"", "shortDescription": { "text": "Header files will always have a file name extension of \".h\"" }, "fullDescription": { "text": "Header files will always have a file name extension of \".h\" [JSF-053]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Header files will always have a file name extension of \".h\" [JSF-053]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-057_a", "name": "The public section of a class will be declared before the protected section and before the private section", "shortDescription": { "text": "The public section of a class will be declared before the protected section and before the private section" }, "fullDescription": { "text": "The public section of a class will be declared before the protected section and before the private section [JSF-057_a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The public section of a class will be declared before the protected section and before the private section [JSF-057_a]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-057_b", "name": "The protected section of a class will be declared before the private section", "shortDescription": { "text": "The protected section of a class will be declared before the private section" }, "fullDescription": { "text": "The protected section of a class will be declared before the private section [JSF-057_b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The protected section of a class will be declared before the private section [JSF-057_b]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-060_a", "name": "Braces (\"{}\") which enclose a block will have nothing else on the line except comments", "shortDescription": { "text": "Braces (\"{}\") which enclose a block will have nothing else on the line except comments" }, "fullDescription": { "text": "Braces (\"{}\") which enclose a block will have nothing else on the line except comments [JSF-060_a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Braces (\"{}\") which enclose a block will have nothing else on the line except comments [JSF-060_a]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-060_b", "name": "Braces (\"{}\") which enclose a block will be placed in the same column", "shortDescription": { "text": "Braces (\"{}\") which enclose a block will be placed in the same column" }, "fullDescription": { "text": "Braces (\"{}\") which enclose a block will be placed in the same column [JSF-060_b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Braces (\"{}\") which enclose a block will be placed in the same column [JSF-060_b]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-061", "name": "Braces (\"{}\") which enclose a block will have nothing else on the line except comments", "shortDescription": { "text": "Braces (\"{}\") which enclose a block will have nothing else on the line except comments" }, "fullDescription": { "text": "Braces (\"{}\") which enclose a block will have nothing else on the line except comments [JSF-061]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Braces (\"{}\") which enclose a block will have nothing else on the line except comments [JSF-061]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-062", "name": "The dereference operator '*' and the address-of operator '&' will be directly connected with the type-specifier", "shortDescription": { "text": "The dereference operator '*' and the address-of operator '&' will be directly connected with the type-specifier" }, "fullDescription": { "text": "The dereference operator '*' and the address-of operator '&' will be directly connected with the type-specifier [JSF-062]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The dereference operator '*' and the address-of operator '&' will be directly connected with the type-specifier [JSF-062]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-069", "name": "A member function that does not affect the state of an object will be declared const", "shortDescription": { "text": "A member function that does not affect the state of an object will be declared const" }, "fullDescription": { "text": "A member function that does not affect the state of an object will be declared const [JSF-069]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "A member function that does not affect the state of an object will be declared const [JSF-069]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-115", "name": "If a function returns error information, then that error information will be tested", "shortDescription": { "text": "If a function returns error information, then that error information will be tested" }, "fullDescription": { "text": "If a function returns error information, then that error information will be tested [JSF-115]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "If a function returns error information, then that error information will be tested [JSF-115]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-132_a", "name": "Each variable declaration will be commented", "shortDescription": { "text": "Each variable declaration will be commented" }, "fullDescription": { "text": "Each variable declaration will be commented [JSF-132_a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Each variable declaration will be commented [JSF-132_a]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-133_a", "name": "Every source file will be documented with an introductory comment that provides information on the file", "shortDescription": { "text": "Every source file will be documented with an introductory comment that provides information on the file" }, "fullDescription": { "text": "Every source file will be documented with an introductory comment that provides information on the file [JSF-133_a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Every source file will be documented with an introductory comment that provides information on the file [JSF-133_a]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-133_b", "name": "Every source file will contain copyright information", "shortDescription": { "text": "Every source file will contain copyright information" }, "fullDescription": { "text": "Every source file will contain copyright information [JSF-133_b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Every source file will contain copyright information [JSF-133_b]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-151", "name": "Numeric values in code will not be used; symbolic values will be used instead", "shortDescription": { "text": "Numeric values in code will not be used; symbolic values will be used instead" }, "fullDescription": { "text": "Numeric values in code will not be used; symbolic values will be used instead [JSF-151]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Numeric values in code will not be used; symbolic values will be used instead [JSF-151]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-207", "name": "Unencapsulated global data will be avoided", "shortDescription": { "text": "Unencapsulated global data will be avoided" }, "fullDescription": { "text": "Unencapsulated global data will be avoided [JSF-207]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Unencapsulated global data will be avoided [JSF-207]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-043", "name": "Tabs should be avoided", "shortDescription": { "text": "Tabs should be avoided" }, "fullDescription": { "text": "Tabs should be avoided [JSF-043]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Tabs should be avoided [JSF-043]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-098", "name": "Every nonlocal name, except main(), should be placed in some namespace", "shortDescription": { "text": "Every nonlocal name, except main(), should be placed in some namespace" }, "fullDescription": { "text": "Every nonlocal name, except main(), should be placed in some namespace [JSF-098]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Every nonlocal name, except main(), should be placed in some namespace [JSF-098]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-115_a", "name": "Value returned by a function having a non-void return type that is not an overloaded operator shall always be used", "shortDescription": { "text": "Value returned by a function having a non-void return type that is not an overloaded operator shall always be used" }, "fullDescription": { "text": "Value returned by a function having a non-void return type that is not an overloaded operator shall always be used [JSF-115_a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Value returned by a function having a non-void return type that is not an overloaded operator shall always be used [JSF-115_a]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-117", "name": "Arguments should be passed by reference", "shortDescription": { "text": "Arguments should be passed by reference" }, "fullDescription": { "text": "Arguments should be passed by reference [JSF-117]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Arguments should be passed by reference [JSF-117]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-118", "name": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object", "shortDescription": { "text": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object" }, "fullDescription": { "text": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object [JSF-118]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object [JSF-118]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-125_a", "name": "Pass and return by reference when possible", "shortDescription": { "text": "Pass and return by reference when possible" }, "fullDescription": { "text": "Pass and return by reference when possible [JSF-125_a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Pass and return by reference when possible [JSF-125_a]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-134", "name": "Document functions in comments that precede function definitions", "shortDescription": { "text": "Document functions in comments that precede function definitions" }, "fullDescription": { "text": "Document functions in comments that precede function definitions [JSF-134]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Document functions in comments that precede function definitions [JSF-134]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-134_b", "name": "Document functions in comments that precede function declarations", "shortDescription": { "text": "Document functions in comments that precede function declarations" }, "fullDescription": { "text": "Document functions in comments that precede function declarations [JSF-134_b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Document functions in comments that precede function declarations [JSF-134_b]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-137", "name": "All declarations at file scope should be static where possible", "shortDescription": { "text": "All declarations at file scope should be static where possible" }, "fullDescription": { "text": "All declarations at file scope should be static where possible [JSF-137]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "All declarations at file scope should be static where possible [JSF-137]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-177_b", "name": "Constructors allowing for conversion should be made explicit", "shortDescription": { "text": "Constructors allowing for conversion should be made explicit" }, "fullDescription": { "text": "Constructors allowing for conversion should be made explicit [JSF-177_b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Constructors allowing for conversion should be made explicit [JSF-177_b]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "JSF-183", "name": "Every possible measure should be taken to avoid type casting", "shortDescription": { "text": "Every possible measure should be taken to avoid type casting" }, "fullDescription": { "text": "Every possible measure should be taken to avoid type casting [JSF-183]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Every possible measure should be taken to avoid type casting [JSF-183]" }, "properties": { "tags": [ "Joint Strike Fighter" ] } }, { "id": "METRIC.NOPLIF", "name": "Physical Lines in Files", "shortDescription": { "text": "Physical Lines in Files" }, "fullDescription": { "text": "Physical Lines in Files [METRIC.NOPLIF]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Physical Lines in Files [METRIC.NOPLIF]" }, "properties": { "tags": [ "Metric" ] } }, { "id": "METRICS-19", "name": "The percentage of comment lines versus the total number of module lines should be between 20 and 60", "shortDescription": { "text": "The percentage of comment lines versus the total number of module lines should be between 20 and 60" }, "fullDescription": { "text": "The percentage of comment lines versus the total number of module lines should be between 20 and 60 [METRICS-19]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The percentage of comment lines versus the total number of module lines should be between 20 and 60 [METRICS-19]" }, "properties": { "tags": [ "Metrics" ] } }, { "id": "METRICS-26", "name": "Source lines will be kept to a length of 120 characters or less", "shortDescription": { "text": "Source lines will be kept to a length of 120 characters or less" }, "fullDescription": { "text": "Source lines will be kept to a length of 120 characters or less [METRICS-26]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Source lines will be kept to a length of 120 characters or less [METRICS-26]" }, "properties": { "tags": [ "Metrics" ] } }, { "id": "METRICS-31", "name": "The assertion density of the code should average to a minimum of two assertions per function", "shortDescription": { "text": "The assertion density of the code should average to a minimum of two assertions per function" }, "fullDescription": { "text": "The assertion density of the code should average to a minimum of two assertions per function [METRICS-31]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The assertion density of the code should average to a minimum of two assertions per function [METRICS-31]" }, "properties": { "tags": [ "Metrics" ] } }, { "id": "METRICS-29", "name": "Report Cyclomatic Complexity", "shortDescription": { "text": "Report Cyclomatic Complexity" }, "fullDescription": { "text": "Report Cyclomatic Complexity [METRICS-29]" }, "defaultConfiguration": { "level": "note" }, "help": { "text": "Report Cyclomatic Complexity [METRICS-29]" }, "properties": { "tags": [ "Metrics" ] } }, { "id": "METRICS-33", "name": "Report Essential Complexity", "shortDescription": { "text": "Report Essential Complexity" }, "fullDescription": { "text": "Report Essential Complexity [METRICS-33]" }, "defaultConfiguration": { "level": "note" }, "help": { "text": "Report Essential Complexity [METRICS-33]" }, "properties": { "tags": [ "Metrics" ] } }, { "id": "MISRA-013", "name": "The basic types of char, int, short, long, float and double should not be used, but specific-length equivalents should be typedef'd", "shortDescription": { "text": "The basic types of char, int, short, long, float and double should not be used, but specific-length equivalents should be typedef'd" }, "fullDescription": { "text": "The basic types of char, int, short, long, float and double should not be used, but specific-length equivalents should be typedef'd [MISRA-013]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The basic types of char, int, short, long, float and double should not be used, but specific-length equivalents should be typedef'd [MISRA-013]" }, "properties": { "tags": [ "MISRA C 1998" ] } }, { "id": "MISRA-096", "name": "Enclose in parentheses whole definition of a function-like macro", "shortDescription": { "text": "Enclose in parentheses whole definition of a function-like macro" }, "fullDescription": { "text": "Enclose in parentheses whole definition of a function-like macro [MISRA-096]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Enclose in parentheses whole definition of a function-like macro [MISRA-096]" }, "properties": { "tags": [ "MISRA C 1998" ] } }, { "id": "MISRA-023", "name": "Objects or functions with external linkage shall be declared in a header file", "shortDescription": { "text": "Objects or functions with external linkage shall be declared in a header file" }, "fullDescription": { "text": "Objects or functions with external linkage shall be declared in a header file [MISRA-023]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Objects or functions with external linkage shall be declared in a header file [MISRA-023]" }, "properties": { "tags": [ "MISRA C 1998" ] } }, { "id": "MISRA-022", "name": "Declare objects at function scope", "shortDescription": { "text": "Declare objects at function scope" }, "fullDescription": { "text": "Declare objects at function scope [MISRA-022]" }, "defaultConfiguration": { "level": "note" }, "help": { "text": "Declare objects at function scope [MISRA-022]" }, "properties": { "tags": [ "MISRA C 1998" ] } }, { "id": "MISRA2004-10_1_a", "name": "Avoid implicit conversions between signed and unsigned integer types", "shortDescription": { "text": "Avoid implicit conversions between signed and unsigned integer types" }, "fullDescription": { "text": "Avoid implicit conversions between signed and unsigned integer types [MISRA2004-10_1_a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid implicit conversions between signed and unsigned integer types [MISRA2004-10_1_a]" }, "properties": { "tags": [ "MISRA C 2004" ] } }, { "id": "MISRA2004-10_1_b", "name": "There shall be no implicit conversions from integral to floating type", "shortDescription": { "text": "There shall be no implicit conversions from integral to floating type" }, "fullDescription": { "text": "There shall be no implicit conversions from integral to floating type [MISRA2004-10_1_b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "There shall be no implicit conversions from integral to floating type [MISRA2004-10_1_b]" }, "properties": { "tags": [ "MISRA C 2004" ] } }, { "id": "MISRA2004-12_6_a", "name": "The operands of logical operators (&&, || and !) should be effectively Boolean", "shortDescription": { "text": "The operands of logical operators (&&, || and !) should be effectively Boolean" }, "fullDescription": { "text": "The operands of logical operators (&&, || and !) should be effectively Boolean [MISRA2004-12_6_a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The operands of logical operators (&&, || and !) should be effectively Boolean [MISRA2004-12_6_a]" }, "properties": { "tags": [ "MISRA C 2004" ] } }, { "id": "MISRA2004-16_10", "name": "If a function returns error information, then that error information shall be tested", "shortDescription": { "text": "If a function returns error information, then that error information shall be tested" }, "fullDescription": { "text": "If a function returns error information, then that error information shall be tested [MISRA2004-16_10]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "If a function returns error information, then that error information shall be tested [MISRA2004-16_10]" }, "properties": { "tags": [ "MISRA C 2004" ] } }, { "id": "MISRA2004-16_7", "name": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object", "shortDescription": { "text": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object" }, "fullDescription": { "text": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object [MISRA2004-16_7]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object [MISRA2004-16_7]" }, "properties": { "tags": [ "MISRA C 2004" ] } }, { "id": "MISRA2004-16_9", "name": "A function identifier shall only be used with either a preceding '&', or with a parenthesised parameter list, which may be empty", "shortDescription": { "text": "A function identifier shall only be used with either a preceding '&', or with a parenthesised parameter list, which may be empty" }, "fullDescription": { "text": "A function identifier shall only be used with either a preceding '&', or with a parenthesised parameter list, which may be empty [MISRA2004-16_9]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "A function identifier shall only be used with either a preceding '&', or with a parenthesised parameter list, which may be empty [MISRA2004-16_9]" }, "properties": { "tags": [ "MISRA C 2004" ] } }, { "id": "MISRA2004-17_4", "name": "Array indexing shall be the only allowed form of pointer arithmetic", "shortDescription": { "text": "Array indexing shall be the only allowed form of pointer arithmetic" }, "fullDescription": { "text": "Array indexing shall be the only allowed form of pointer arithmetic [MISRA2004-17_4]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Array indexing shall be the only allowed form of pointer arithmetic [MISRA2004-17_4]" }, "properties": { "tags": [ "MISRA C 2004" ] } }, { "id": "MISRA2004-19_10", "name": "In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##", "shortDescription": { "text": "In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##" }, "fullDescription": { "text": "In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ## [MISRA2004-19_10]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ## [MISRA2004-19_10]" }, "properties": { "tags": [ "MISRA C 2004" ] } }, { "id": "MISRA2004-19_7", "name": "A function should be used in preference to a function-like macro", "shortDescription": { "text": "A function should be used in preference to a function-like macro" }, "fullDescription": { "text": "A function should be used in preference to a function-like macro [MISRA2004-19_7]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "A function should be used in preference to a function-like macro [MISRA2004-19_7]" }, "properties": { "tags": [ "MISRA C 2004" ] } }, { "id": "MISRA2004-20_10", "name": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used", "shortDescription": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used" }, "fullDescription": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used [MISRA2004-20_10]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used [MISRA2004-20_10]" }, "properties": { "tags": [ "MISRA C 2004" ] } }, { "id": "MISRA2004-20_4", "name": "Dynamic heap memory allocation shall not be used", "shortDescription": { "text": "Dynamic heap memory allocation shall not be used" }, "fullDescription": { "text": "Dynamic heap memory allocation shall not be used [MISRA2004-20_4]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Dynamic heap memory allocation shall not be used [MISRA2004-20_4]" }, "properties": { "tags": [ "MISRA C 2004" ] } }, { "id": "MISRA2004-20_9", "name": "The input\/output library stdio.h shall not be used", "shortDescription": { "text": "The input\/output library stdio.h shall not be used" }, "fullDescription": { "text": "The input\/output library stdio.h shall not be used [MISRA2004-20_9]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The input\/output library stdio.h shall not be used [MISRA2004-20_9]" }, "properties": { "tags": [ "MISRA C 2004" ] } }, { "id": "MISRA2004-6_3_b", "name": "typedefs should be used in place of the basic types", "shortDescription": { "text": "typedefs should be used in place of the basic types" }, "fullDescription": { "text": "typedefs should be used in place of the basic types [MISRA2004-6_3_b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "typedefs should be used in place of the basic types [MISRA2004-6_3_b]" }, "properties": { "tags": [ "MISRA C 2004" ] } }, { "id": "MISRA2004-8_10", "name": "Objects or functions with external linkage shall be declared in a header file", "shortDescription": { "text": "Objects or functions with external linkage shall be declared in a header file" }, "fullDescription": { "text": "Objects or functions with external linkage shall be declared in a header file [MISRA2004-8_10]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Objects or functions with external linkage shall be declared in a header file [MISRA2004-8_10]" }, "properties": { "tags": [ "MISRA C 2004" ] } }, { "id": "MISRA2008-0_1_10_b", "name": "Every defined function with external linkage shall be used", "shortDescription": { "text": "Every defined function with external linkage shall be used" }, "fullDescription": { "text": "Every defined function with external linkage shall be used [MISRA2008-0_1_10_b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Every defined function with external linkage shall be used [MISRA2008-0_1_10_b]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-0_1_11", "name": "There shall be no unused parameters (named or unnamed) in nonvirtual functions", "shortDescription": { "text": "There shall be no unused parameters (named or unnamed) in nonvirtual functions" }, "fullDescription": { "text": "There shall be no unused parameters (named or unnamed) in nonvirtual functions [MISRA2008-0_1_11]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "There shall be no unused parameters (named or unnamed) in nonvirtual functions [MISRA2008-0_1_11]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-0_1_3_c", "name": "Eliminate unused private member variables", "shortDescription": { "text": "Eliminate unused private member variables" }, "fullDescription": { "text": "Eliminate unused private member variables [MISRA2008-0_1_3_c]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Eliminate unused private member variables [MISRA2008-0_1_3_c]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-0_1_4", "name": "A project shall not contain non-volatile POD variables having only one use", "shortDescription": { "text": "A project shall not contain non-volatile POD variables having only one use" }, "fullDescription": { "text": "A project shall not contain non-volatile POD variables having only one use [MISRA2008-0_1_4]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "A project shall not contain non-volatile POD variables having only one use [MISRA2008-0_1_4]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-0_1_5", "name": "A project shall not contain unused type declarations", "shortDescription": { "text": "A project shall not contain unused type declarations" }, "fullDescription": { "text": "A project shall not contain unused type declarations [MISRA2008-0_1_5]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "A project shall not contain unused type declarations [MISRA2008-0_1_5]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-0_1_6", "name": "Avoid unused values", "shortDescription": { "text": "Avoid unused values" }, "fullDescription": { "text": "Avoid unused values [MISRA2008-0_1_6]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid unused values [MISRA2008-0_1_6]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-0_1_7", "name": "The value returned by a function having a non-void return type that is not an overloaded operator shall always be used", "shortDescription": { "text": "The value returned by a function having a non-void return type that is not an overloaded operator shall always be used" }, "fullDescription": { "text": "The value returned by a function having a non-void return type that is not an overloaded operator shall always be used [MISRA2008-0_1_7]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The value returned by a function having a non-void return type that is not an overloaded operator shall always be used [MISRA2008-0_1_7]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-0_1_8_b", "name": "All functions with void return type shall have external side effect(s)", "shortDescription": { "text": "All functions with void return type shall have external side effect(s)" }, "fullDescription": { "text": "All functions with void return type shall have external side effect(s) [MISRA2008-0_1_8_b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "All functions with void return type shall have external side effect(s) [MISRA2008-0_1_8_b]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-0_3_2", "name": "If a function generates error information, then that error information shall be tested", "shortDescription": { "text": "If a function generates error information, then that error information shall be tested" }, "fullDescription": { "text": "If a function generates error information, then that error information shall be tested [MISRA2008-0_3_2]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "If a function generates error information, then that error information shall be tested [MISRA2008-0_3_2]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-10_3_2", "name": "Each overriding virtual function shall be declared with the virtual keyword", "shortDescription": { "text": "Each overriding virtual function shall be declared with the virtual keyword" }, "fullDescription": { "text": "Each overriding virtual function shall be declared with the virtual keyword [MISRA2008-10_3_2]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Each overriding virtual function shall be declared with the virtual keyword [MISRA2008-10_3_2]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-15_3_1", "name": "Exceptions shall be raised only after start-up and before termination of the program", "shortDescription": { "text": "Exceptions shall be raised only after start-up and before termination of the program" }, "fullDescription": { "text": "Exceptions shall be raised only after start-up and before termination of the program [MISRA2008-15_3_1]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Exceptions shall be raised only after start-up and before termination of the program [MISRA2008-15_3_1]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-15_5_3_d", "name": "There should be at least one exception handler to catch all otherwise unhandled exceptions", "shortDescription": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions" }, "fullDescription": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions [MISRA2008-15_5_3_d]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions [MISRA2008-15_5_3_d]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-15_5_3_f", "name": "Exceptions shall be raised only after start-up and before termination of the program", "shortDescription": { "text": "Exceptions shall be raised only after start-up and before termination of the program" }, "fullDescription": { "text": "Exceptions shall be raised only after start-up and before termination of the program [MISRA2008-15_5_3_f]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Exceptions shall be raised only after start-up and before termination of the program [MISRA2008-15_5_3_f]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-16_0_4", "name": "Function-like macros shall not be defined", "shortDescription": { "text": "Function-like macros shall not be defined" }, "fullDescription": { "text": "Function-like macros shall not be defined [MISRA2008-16_0_4]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Function-like macros shall not be defined [MISRA2008-16_0_4]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-16_0_6", "name": "In the definition of a function-like macro, each instance of a parameter shall be enclosed in parentheses, unless it is used as the operand of # or ##", "shortDescription": { "text": "In the definition of a function-like macro, each instance of a parameter shall be enclosed in parentheses, unless it is used as the operand of # or ##" }, "fullDescription": { "text": "In the definition of a function-like macro, each instance of a parameter shall be enclosed in parentheses, unless it is used as the operand of # or ## [MISRA2008-16_0_6]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "In the definition of a function-like macro, each instance of a parameter shall be enclosed in parentheses, unless it is used as the operand of # or ## [MISRA2008-16_0_6]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-16_2_1_a", "name": "Avoid using macro definitions", "shortDescription": { "text": "Avoid using macro definitions" }, "fullDescription": { "text": "Avoid using macro definitions [MISRA2008-16_2_1_a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid using macro definitions [MISRA2008-16_2_1_a]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-16_2_1_c", "name": "The #ifdef, #else, #elif preprocessor directives should not be used", "shortDescription": { "text": "The #ifdef, #else, #elif preprocessor directives should not be used" }, "fullDescription": { "text": "The #ifdef, #else, #elif preprocessor directives should not be used [MISRA2008-16_2_1_c]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The #ifdef, #else, #elif preprocessor directives should not be used [MISRA2008-16_2_1_c]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-16_2_1_d", "name": "The #endif pre-processor directives will only be used to prevent multiple inclusions of the same header file", "shortDescription": { "text": "The #endif pre-processor directives will only be used to prevent multiple inclusions of the same header file" }, "fullDescription": { "text": "The #endif pre-processor directives will only be used to prevent multiple inclusions of the same header file [MISRA2008-16_2_1_d]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The #endif pre-processor directives will only be used to prevent multiple inclusions of the same header file [MISRA2008-16_2_1_d]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-16_2_1_e", "name": "The #if pre-processor directive will only be used to prevent multiple inclusions of the same header file", "shortDescription": { "text": "The #if pre-processor directive will only be used to prevent multiple inclusions of the same header file" }, "fullDescription": { "text": "The #if pre-processor directive will only be used to prevent multiple inclusions of the same header file [MISRA2008-16_2_1_e]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The #if pre-processor directive will only be used to prevent multiple inclusions of the same header file [MISRA2008-16_2_1_e]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-16_2_2", "name": "C++ macros shall only be used for: include guards, type qualifiers, or storage class specifiers", "shortDescription": { "text": "C++ macros shall only be used for: include guards, type qualifiers, or storage class specifiers" }, "fullDescription": { "text": "C++ macros shall only be used for: include guards, type qualifiers, or storage class specifiers [MISRA2008-16_2_2]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "C++ macros shall only be used for: include guards, type qualifiers, or storage class specifiers [MISRA2008-16_2_2]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-18_0_1", "name": "The C library shall not be used", "shortDescription": { "text": "The C library shall not be used" }, "fullDescription": { "text": "The C library shall not be used [MISRA2008-18_0_1]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The C library shall not be used [MISRA2008-18_0_1]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-18_0_2", "name": "The library functions atof, atoi and atol from library <cstdlib> shall not be used", "shortDescription": { "text": "The library functions atof, atoi and atol from library <cstdlib> shall not be used" }, "fullDescription": { "text": "The library functions atof, atoi and atol from library <cstdlib> shall not be used [MISRA2008-18_0_2]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The library functions atof, atoi and atol from library <cstdlib> shall not be used [MISRA2008-18_0_2]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-18_4_1", "name": "Dynamic heap memory allocation shall not be used", "shortDescription": { "text": "Dynamic heap memory allocation shall not be used" }, "fullDescription": { "text": "Dynamic heap memory allocation shall not be used [MISRA2008-18_4_1]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Dynamic heap memory allocation shall not be used [MISRA2008-18_4_1]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-27_0_1", "name": "The stream input\/output library <cstdio> shall not be used", "shortDescription": { "text": "The stream input\/output library <cstdio> shall not be used" }, "fullDescription": { "text": "The stream input\/output library <cstdio> shall not be used [MISRA2008-27_0_1]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The stream input\/output library <cstdio> shall not be used [MISRA2008-27_0_1]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-2_10_1", "name": "Different identifiers shall be typographically unambiguous", "shortDescription": { "text": "Different identifiers shall be typographically unambiguous" }, "fullDescription": { "text": "Different identifiers shall be typographically unambiguous [MISRA2008-2_10_1]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Different identifiers shall be typographically unambiguous [MISRA2008-2_10_1]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-2_13_3", "name": "A \"U\" suffix shall be applied to all octal or hexadecimal integer literals of unsigned type", "shortDescription": { "text": "A \"U\" suffix shall be applied to all octal or hexadecimal integer literals of unsigned type" }, "fullDescription": { "text": "A \"U\" suffix shall be applied to all octal or hexadecimal integer literals of unsigned type [MISRA2008-2_13_3]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "A \"U\" suffix shall be applied to all octal or hexadecimal integer literals of unsigned type [MISRA2008-2_13_3]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-3_3_1", "name": "Objects or functions with external linkage shall be declared in a header file", "shortDescription": { "text": "Objects or functions with external linkage shall be declared in a header file" }, "fullDescription": { "text": "Objects or functions with external linkage shall be declared in a header file [MISRA2008-3_3_1]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Objects or functions with external linkage shall be declared in a header file [MISRA2008-3_3_1]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-4_10_2", "name": "Literal zero (0) shall not be used as the null-pointer-constant", "shortDescription": { "text": "Literal zero (0) shall not be used as the null-pointer-constant" }, "fullDescription": { "text": "Literal zero (0) shall not be used as the null-pointer-constant [MISRA2008-4_10_2]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Literal zero (0) shall not be used as the null-pointer-constant [MISRA2008-4_10_2]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-5_0_15", "name": "Array indexing shall be the only form of pointer arithmetic", "shortDescription": { "text": "Array indexing shall be the only form of pointer arithmetic" }, "fullDescription": { "text": "Array indexing shall be the only form of pointer arithmetic [MISRA2008-5_0_15]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Array indexing shall be the only form of pointer arithmetic [MISRA2008-5_0_15]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-5_0_4_a", "name": "An implicit integral conversion shall not change the signedness of the underlying type", "shortDescription": { "text": "An implicit integral conversion shall not change the signedness of the underlying type" }, "fullDescription": { "text": "An implicit integral conversion shall not change the signedness of the underlying type [MISRA2008-5_0_4_a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "An implicit integral conversion shall not change the signedness of the underlying type [MISRA2008-5_0_4_a]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-5_0_5_b", "name": "There shall be no implicit floating-integral conversions", "shortDescription": { "text": "There shall be no implicit floating-integral conversions" }, "fullDescription": { "text": "There shall be no implicit floating-integral conversions [MISRA2008-5_0_5_b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "There shall be no implicit floating-integral conversions [MISRA2008-5_0_5_b]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-5_2_4", "name": "C-style casts (other than void casts) and functional notation casts (other than explicit constructor calls) shall not be used", "shortDescription": { "text": "C-style casts (other than void casts) and functional notation casts (other than explicit constructor calls) shall not be used" }, "fullDescription": { "text": "C-style casts (other than void casts) and functional notation casts (other than explicit constructor calls) shall not be used [MISRA2008-5_2_4]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "C-style casts (other than void casts) and functional notation casts (other than explicit constructor calls) shall not be used [MISRA2008-5_2_4]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-5_3_1", "name": "Each operand of the ! operator, the logical && or the logical || operators shall have type bool", "shortDescription": { "text": "Each operand of the ! operator, the logical && or the logical || operators shall have type bool" }, "fullDescription": { "text": "Each operand of the ! operator, the logical && or the logical || operators shall have type bool [MISRA2008-5_3_1]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Each operand of the ! operator, the logical && or the logical || operators shall have type bool [MISRA2008-5_3_1]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-7_1_1", "name": "Declare local variable as const whenever possible", "shortDescription": { "text": "Declare local variable as const whenever possible" }, "fullDescription": { "text": "Declare local variable as const whenever possible [MISRA2008-7_1_1]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Declare local variable as const whenever possible [MISRA2008-7_1_1]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-7_1_2_a", "name": "A pointer parameter in a function shall be declared as pointer to const if the corresponding object is not modified", "shortDescription": { "text": "A pointer parameter in a function shall be declared as pointer to const if the corresponding object is not modified" }, "fullDescription": { "text": "A pointer parameter in a function shall be declared as pointer to const if the corresponding object is not modified [MISRA2008-7_1_2_a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "A pointer parameter in a function shall be declared as pointer to const if the corresponding object is not modified [MISRA2008-7_1_2_a]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-7_3_1", "name": "The global namespace shall only contain main, namespace declarations and extern \"C\" declarations", "shortDescription": { "text": "The global namespace shall only contain main, namespace declarations and extern \"C\" declarations" }, "fullDescription": { "text": "The global namespace shall only contain main, namespace declarations and extern \"C\" declarations [MISRA2008-7_3_1]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The global namespace shall only contain main, namespace declarations and extern \"C\" declarations [MISRA2008-7_3_1]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-8_0_1", "name": "An init-declarator-list or a member-declarator-list shall consist of a single init-declarator or member-declarator respectively", "shortDescription": { "text": "An init-declarator-list or a member-declarator-list shall consist of a single init-declarator or member-declarator respectively" }, "fullDescription": { "text": "An init-declarator-list or a member-declarator-list shall consist of a single init-declarator or member-declarator respectively [MISRA2008-8_0_1]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "An init-declarator-list or a member-declarator-list shall consist of a single init-declarator or member-declarator respectively [MISRA2008-8_0_1]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-8_4_4", "name": "A function identifier shall either be used to call the function or it shall be preceded by '&'", "shortDescription": { "text": "A function identifier shall either be used to call the function or it shall be preceded by '&'" }, "fullDescription": { "text": "A function identifier shall either be used to call the function or it shall be preceded by '&' [MISRA2008-8_4_4]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "A function identifier shall either be used to call the function or it shall be preceded by '&' [MISRA2008-8_4_4]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-9_3_2_b", "name": "Public member functions shall not return non-const handles to class-data", "shortDescription": { "text": "Public member functions shall not return non-const handles to class-data" }, "fullDescription": { "text": "Public member functions shall not return non-const handles to class-data [MISRA2008-9_3_2_b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Public member functions shall not return non-const handles to class-data [MISRA2008-9_3_2_b]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-9_3_3", "name": "If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const", "shortDescription": { "text": "If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const" }, "fullDescription": { "text": "If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const [MISRA2008-9_3_3]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const [MISRA2008-9_3_3]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-15_0_2", "name": "An exception object should not have pointer type", "shortDescription": { "text": "An exception object should not have pointer type" }, "fullDescription": { "text": "An exception object should not have pointer type [MISRA2008-15_0_2]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "An exception object should not have pointer type [MISRA2008-15_0_2]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-15_3_2", "name": "There should be at least one exception handler to catch all otherwise unhandled exceptions", "shortDescription": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions" }, "fullDescription": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions [MISRA2008-15_3_2]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "There should be at least one exception handler to catch all otherwise unhandled exceptions [MISRA2008-15_3_2]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-3_9_2", "name": "typedefs that indicate size and signedness should be used in place of the basic numerical types", "shortDescription": { "text": "typedefs that indicate size and signedness should be used in place of the basic numerical types" }, "fullDescription": { "text": "typedefs that indicate size and signedness should be used in place of the basic numerical types [MISRA2008-3_9_2]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "typedefs that indicate size and signedness should be used in place of the basic numerical types [MISRA2008-3_9_2]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-0_3_1_b", "name": "Avoid null pointer dereferencing", "shortDescription": { "text": "Avoid null pointer dereferencing" }, "fullDescription": { "text": "Avoid null pointer dereferencing [MISRA2008-0_3_1_b]" }, "defaultConfiguration": { "level": "note" }, "help": { "text": "Avoid null pointer dereferencing [MISRA2008-0_3_1_b]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-0_3_1_c", "name": "Avoid division by zero", "shortDescription": { "text": "Avoid division by zero" }, "fullDescription": { "text": "Avoid division by zero [MISRA2008-0_3_1_c]" }, "defaultConfiguration": { "level": "note" }, "help": { "text": "Avoid division by zero [MISRA2008-0_3_1_c]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2008-0_4_2", "name": "Use of floating-point arithmetic shall be documented", "shortDescription": { "text": "Use of floating-point arithmetic shall be documented" }, "fullDescription": { "text": "Use of floating-point arithmetic shall be documented [MISRA2008-0_4_2]" }, "defaultConfiguration": { "level": "note" }, "help": { "text": "Use of floating-point arithmetic shall be documented [MISRA2008-0_4_2]" }, "properties": { "tags": [ "MISRA C++ 2008" ] } }, { "id": "MISRA2012-RULE-11_9_a", "name": "The macro NULL shall be the only permitted form of integer null pointer constant", "shortDescription": { "text": "The macro NULL shall be the only permitted form of integer null pointer constant" }, "fullDescription": { "text": "The macro NULL shall be the only permitted form of integer null pointer constant [MISRA2012-RULE-11_9_a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The macro NULL shall be the only permitted form of integer null pointer constant [MISRA2012-RULE-11_9_a]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Rules" ] } }, { "id": "MISRA2012-RULE-11_9_b", "name": "The macro NULL shall be the only permitted form of integer null pointer constant", "shortDescription": { "text": "The macro NULL shall be the only permitted form of integer null pointer constant" }, "fullDescription": { "text": "The macro NULL shall be the only permitted form of integer null pointer constant [MISRA2012-RULE-11_9_b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The macro NULL shall be the only permitted form of integer null pointer constant [MISRA2012-RULE-11_9_b]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Rules" ] } }, { "id": "MISRA2012-RULE-17_7_a", "name": "The value returned by a function having non-void return type shall be used", "shortDescription": { "text": "The value returned by a function having non-void return type shall be used" }, "fullDescription": { "text": "The value returned by a function having non-void return type shall be used [MISRA2012-RULE-17_7_a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The value returned by a function having non-void return type shall be used [MISRA2012-RULE-17_7_a]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Rules" ] } }, { "id": "MISRA2012-RULE-1_3_a", "name": "Avoid division by zero", "shortDescription": { "text": "Avoid division by zero" }, "fullDescription": { "text": "Avoid division by zero [MISRA2012-RULE-1_3_a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid division by zero [MISRA2012-RULE-1_3_a]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Rules" ] } }, { "id": "MISRA2012-RULE-20_7", "name": "Expressions resulting from the expansion of macro parameters shall be enclosed in parentheses", "shortDescription": { "text": "Expressions resulting from the expansion of macro parameters shall be enclosed in parentheses" }, "fullDescription": { "text": "Expressions resulting from the expansion of macro parameters shall be enclosed in parentheses [MISRA2012-RULE-20_7]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Expressions resulting from the expansion of macro parameters shall be enclosed in parentheses [MISRA2012-RULE-20_7]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Rules" ] } }, { "id": "MISRA2012-RULE-21_3", "name": "The memory allocation and deallocation functions of <stdlib.h> shall not be used", "shortDescription": { "text": "The memory allocation and deallocation functions of <stdlib.h> shall not be used" }, "fullDescription": { "text": "The memory allocation and deallocation functions of <stdlib.h> shall not be used [MISRA2012-RULE-21_3]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The memory allocation and deallocation functions of <stdlib.h> shall not be used [MISRA2012-RULE-21_3]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Rules" ] } }, { "id": "MISRA2012-RULE-21_6", "name": "The Standard Library input\/output functions shall not be used", "shortDescription": { "text": "The Standard Library input\/output functions shall not be used" }, "fullDescription": { "text": "The Standard Library input\/output functions shall not be used [MISRA2012-RULE-21_6]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The Standard Library input\/output functions shall not be used [MISRA2012-RULE-21_6]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Rules" ] } }, { "id": "MISRA2012-RULE-21_7", "name": "The atof, atoi, atol and atoll functions of <stdlib.h> shall not be used", "shortDescription": { "text": "The atof, atoi, atol and atoll functions of <stdlib.h> shall not be used" }, "fullDescription": { "text": "The atof, atoi, atol and atoll functions of <stdlib.h> shall not be used [MISRA2012-RULE-21_7]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The atof, atoi, atol and atoll functions of <stdlib.h> shall not be used [MISRA2012-RULE-21_7]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Rules" ] } }, { "id": "MISRA2012-RULE-22_1", "name": "All resources obtained dynamically by means of Standard Library functions shall be explicitly released", "shortDescription": { "text": "All resources obtained dynamically by means of Standard Library functions shall be explicitly released" }, "fullDescription": { "text": "All resources obtained dynamically by means of Standard Library functions shall be explicitly released [MISRA2012-RULE-22_1]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "All resources obtained dynamically by means of Standard Library functions shall be explicitly released [MISRA2012-RULE-22_1]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Rules" ] } }, { "id": "MISRA2012-RULE-2_2_b", "name": "Avoid unused values", "shortDescription": { "text": "Avoid unused values" }, "fullDescription": { "text": "Avoid unused values [MISRA2012-RULE-2_2_b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid unused values [MISRA2012-RULE-2_2_b]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Rules" ] } }, { "id": "MISRA2012-RULE-5_7_a", "name": "A tag name shall be a unique identifier", "shortDescription": { "text": "A tag name shall be a unique identifier" }, "fullDescription": { "text": "A tag name shall be a unique identifier [MISRA2012-RULE-5_7_a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "A tag name shall be a unique identifier [MISRA2012-RULE-5_7_a]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Rules" ] } }, { "id": "MISRA2012-RULE-8_13_a", "name": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object", "shortDescription": { "text": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object" }, "fullDescription": { "text": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object [MISRA2012-RULE-8_13_a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object [MISRA2012-RULE-8_13_a]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Rules" ] } }, { "id": "MISRA2012-DIR-4_12", "name": "Dynamic memory allocation shall not be used", "shortDescription": { "text": "Dynamic memory allocation shall not be used" }, "fullDescription": { "text": "Dynamic memory allocation shall not be used [MISRA2012-DIR-4_12]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Dynamic memory allocation shall not be used [MISRA2012-DIR-4_12]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Directives" ] } }, { "id": "MISRA2012-DIR-4_14_b", "name": "Protect against integer overflow\/underflow from tainted data", "shortDescription": { "text": "Protect against integer overflow\/underflow from tainted data" }, "fullDescription": { "text": "Protect against integer overflow\/underflow from tainted data [MISRA2012-DIR-4_14_b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Protect against integer overflow\/underflow from tainted data [MISRA2012-DIR-4_14_b]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Directives" ] } }, { "id": "MISRA2012-DIR-4_1_b", "name": "Avoid null pointer dereferencing", "shortDescription": { "text": "Avoid null pointer dereferencing" }, "fullDescription": { "text": "Avoid null pointer dereferencing [MISRA2012-DIR-4_1_b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid null pointer dereferencing [MISRA2012-DIR-4_1_b]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Directives" ] } }, { "id": "MISRA2012-DIR-4_1_c", "name": "Avoid division by zero", "shortDescription": { "text": "Avoid division by zero" }, "fullDescription": { "text": "Avoid division by zero [MISRA2012-DIR-4_1_c]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid division by zero [MISRA2012-DIR-4_1_c]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Directives" ] } }, { "id": "MISRA2012-DIR-4_13_a", "name": "All resources obtained dynamically by means of Standard Library functions shall be explicitly released", "shortDescription": { "text": "All resources obtained dynamically by means of Standard Library functions shall be explicitly released" }, "fullDescription": { "text": "All resources obtained dynamically by means of Standard Library functions shall be explicitly released [MISRA2012-DIR-4_13_a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "All resources obtained dynamically by means of Standard Library functions shall be explicitly released [MISRA2012-DIR-4_13_a]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Directives" ] } }, { "id": "MISRA2012-DIR-4_13_d", "name": "Do not abandon unreleased locks", "shortDescription": { "text": "Do not abandon unreleased locks" }, "fullDescription": { "text": "Do not abandon unreleased locks [MISRA2012-DIR-4_13_d]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Do not abandon unreleased locks [MISRA2012-DIR-4_13_d]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Directives" ] } }, { "id": "MISRA2012-DIR-4_6_b", "name": "typedefs should be used in place of the basic types", "shortDescription": { "text": "typedefs should be used in place of the basic types" }, "fullDescription": { "text": "typedefs should be used in place of the basic types [MISRA2012-DIR-4_6_b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "typedefs should be used in place of the basic types [MISRA2012-DIR-4_6_b]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Directives" ] } }, { "id": "MISRA2012-DIR-4_9", "name": "A function should be used in preference to a function-like macro where they are interchangeable", "shortDescription": { "text": "A function should be used in preference to a function-like macro where they are interchangeable" }, "fullDescription": { "text": "A function should be used in preference to a function-like macro where they are interchangeable [MISRA2012-DIR-4_9]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "A function should be used in preference to a function-like macro where they are interchangeable [MISRA2012-DIR-4_9]" }, "properties": { "tags": [ "MISRA C 2012 (Legacy)", "MISRA C 2012 Directives" ] } }, { "id": "MISRAC2012-RULE_11_9-a", "name": "Literal zero (0) shall not be used as the null-pointer-constant", "shortDescription": { "text": "Literal zero (0) shall not be used as the null-pointer-constant" }, "fullDescription": { "text": "Literal zero (0) shall not be used as the null-pointer-constant [MISRAC2012-RULE_11_9-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Literal zero (0) shall not be used as the null-pointer-constant [MISRAC2012-RULE_11_9-a]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Rule 11.9 (Required) The macro NULL shall be the only permitted form of integer null pointer constant" ] } }, { "id": "MISRAC2012-RULE_11_9-b", "name": "Use NULL instead of literal zero (0) as the null-pointer-constant", "shortDescription": { "text": "Use NULL instead of literal zero (0) as the null-pointer-constant" }, "fullDescription": { "text": "Use NULL instead of literal zero (0) as the null-pointer-constant [MISRAC2012-RULE_11_9-b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Use NULL instead of literal zero (0) as the null-pointer-constant [MISRAC2012-RULE_11_9-b]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Rule 11.9 (Required) The macro NULL shall be the only permitted form of integer null pointer constant" ] } }, { "id": "MISRAC2012-DIR_4_14-b", "name": "Avoid potential integer overflow\/underflow on tainted data", "shortDescription": { "text": "Avoid potential integer overflow\/underflow on tainted data" }, "fullDescription": { "text": "Avoid potential integer overflow\/underflow on tainted data [MISRAC2012-DIR_4_14-b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid potential integer overflow\/underflow on tainted data [MISRAC2012-DIR_4_14-b]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Dir 4.14 (Required) The validity of values received from external sources shall be checked" ] } }, { "id": "MISRAC2012-DIR_4_13-a", "name": "Ensure resources are freed", "shortDescription": { "text": "Ensure resources are freed" }, "fullDescription": { "text": "Ensure resources are freed [MISRAC2012-DIR_4_13-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Ensure resources are freed [MISRAC2012-DIR_4_13-a]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Dir 4.13 (Advisory) Functions which are designed to provide operations on a resource should be called in an appropriate sequence" ] } }, { "id": "MISRAC2012-DIR_4_13-d", "name": "Do not abandon unreleased locks", "shortDescription": { "text": "Do not abandon unreleased locks" }, "fullDescription": { "text": "Do not abandon unreleased locks [MISRAC2012-DIR_4_13-d]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Do not abandon unreleased locks [MISRAC2012-DIR_4_13-d]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Dir 4.13 (Advisory) Functions which are designed to provide operations on a resource should be called in an appropriate sequence" ] } }, { "id": "MISRAC2012-DIR_4_12-a", "name": "Dynamic heap memory allocation shall not be used", "shortDescription": { "text": "Dynamic heap memory allocation shall not be used" }, "fullDescription": { "text": "Dynamic heap memory allocation shall not be used [MISRAC2012-DIR_4_12-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Dynamic heap memory allocation shall not be used [MISRAC2012-DIR_4_12-a]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Dir 4.12 (Required) Dynamic memory allocation shall not be used" ] } }, { "id": "MISRAC2012-RULE_22_1-a", "name": "Ensure resources are freed", "shortDescription": { "text": "Ensure resources are freed" }, "fullDescription": { "text": "Ensure resources are freed [MISRAC2012-RULE_22_1-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Ensure resources are freed [MISRAC2012-RULE_22_1-a]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Rule 22.1 (Required) All resources obtained dynamically by means of Standard Library functions shall be explicitly released" ] } }, { "id": "MISRAC2012-RULE_21_6-a", "name": "The input\/output functions from the 'cstdio' and 'cwchar' libraries should not be used", "shortDescription": { "text": "The input\/output functions from the 'cstdio' and 'cwchar' libraries should not be used" }, "fullDescription": { "text": "The input\/output functions from the 'cstdio' and 'cwchar' libraries should not be used [MISRAC2012-RULE_21_6-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The input\/output functions from the 'cstdio' and 'cwchar' libraries should not be used [MISRAC2012-RULE_21_6-a]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Rule 21.6 (Required) The Standard Library input\/output functions shall not be used" ] } }, { "id": "MISRAC2012-RULE_21_7-a", "name": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used", "shortDescription": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used" }, "fullDescription": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used [MISRAC2012-RULE_21_7-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The 'atof', 'atoi', 'atol' and 'atoll' functions from the 'stdlib.h' or 'cstdlib' library should not be used [MISRAC2012-RULE_21_7-a]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Rule 21.7 (Required) The atof, atoi, atol and atoll functions of <stdlib.h> shall not be used" ] } }, { "id": "MISRAC2012-RULE_21_3-a", "name": "Dynamic heap memory allocation shall not be used", "shortDescription": { "text": "Dynamic heap memory allocation shall not be used" }, "fullDescription": { "text": "Dynamic heap memory allocation shall not be used [MISRAC2012-RULE_21_3-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Dynamic heap memory allocation shall not be used [MISRAC2012-RULE_21_3-a]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Rule 21.3 (Required) The memory allocation and deallocation functions of <stdlib.h> shall not be used" ] } }, { "id": "MISRAC2012-RULE_17_7-a", "name": "The value returned by a function having non-void return type shall be used", "shortDescription": { "text": "The value returned by a function having non-void return type shall be used" }, "fullDescription": { "text": "The value returned by a function having non-void return type shall be used [MISRAC2012-RULE_17_7-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The value returned by a function having non-void return type shall be used [MISRAC2012-RULE_17_7-a]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Rule 17.7 (Required) The value returned by a function having non-void return type shall be used" ] } }, { "id": "MISRAC2012-RULE_2_2-b", "name": "Avoid unused values", "shortDescription": { "text": "Avoid unused values" }, "fullDescription": { "text": "Avoid unused values [MISRAC2012-RULE_2_2-b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid unused values [MISRAC2012-RULE_2_2-b]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Rule 2.2 (Required) A project shall not contain dead code" ] } }, { "id": "MISRAC2012-RULE_20_7-a", "name": "In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##", "shortDescription": { "text": "In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ##" }, "fullDescription": { "text": "In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ## [MISRAC2012-RULE_20_7-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "In the definition of a function-like macro each instance of a parameter shall be enclosed in parentheses unless it is used as the operand of # or ## [MISRAC2012-RULE_20_7-a]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Rule 20.7 (Required) Expressions resulting from the expansion of macro parameters shall be enclosed in parentheses" ] } }, { "id": "MISRAC2012-RULE_5_7-a", "name": "A tag name shall be a unique identifier", "shortDescription": { "text": "A tag name shall be a unique identifier" }, "fullDescription": { "text": "A tag name shall be a unique identifier [MISRAC2012-RULE_5_7-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "A tag name shall be a unique identifier [MISRAC2012-RULE_5_7-a]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Rule 5.7 (Required) A tag name shall be a unique identifier" ] } }, { "id": "MISRAC2012-DIR_4_9-a", "name": "A function should be used in preference to a function-like macro", "shortDescription": { "text": "A function should be used in preference to a function-like macro" }, "fullDescription": { "text": "A function should be used in preference to a function-like macro [MISRAC2012-DIR_4_9-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "A function should be used in preference to a function-like macro [MISRAC2012-DIR_4_9-a]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Dir 4.9 (Advisory) A function should be used in preference to a function-like macro where they are interchangeable" ] } }, { "id": "MISRAC2012-DIR_4_6-b", "name": "typedefs should be used in place of the basic types", "shortDescription": { "text": "typedefs should be used in place of the basic types" }, "fullDescription": { "text": "typedefs should be used in place of the basic types [MISRAC2012-DIR_4_6-b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "typedefs should be used in place of the basic types [MISRAC2012-DIR_4_6-b]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Dir 4.6 (Advisory) typedefs that indicate size and signedness should be used in place of the basic numerical types" ] } }, { "id": "MISRAC2012-DIR_4_1-b", "name": "Avoid null pointer dereferencing", "shortDescription": { "text": "Avoid null pointer dereferencing" }, "fullDescription": { "text": "Avoid null pointer dereferencing [MISRAC2012-DIR_4_1-b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid null pointer dereferencing [MISRAC2012-DIR_4_1-b]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Dir 4.1 (Required) Run-time failures shall be minimized" ] } }, { "id": "MISRAC2012-DIR_4_1-c", "name": "Avoid division by zero", "shortDescription": { "text": "Avoid division by zero" }, "fullDescription": { "text": "Avoid division by zero [MISRAC2012-DIR_4_1-c]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid division by zero [MISRAC2012-DIR_4_1-c]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Dir 4.1 (Required) Run-time failures shall be minimized" ] } }, { "id": "MISRAC2012-RULE_8_13-a", "name": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object", "shortDescription": { "text": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object" }, "fullDescription": { "text": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object [MISRAC2012-RULE_8_13-a]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "A pointer parameter in a function prototype should be declared as pointer to const if the pointer is not used to modify the addressed object [MISRAC2012-RULE_8_13-a]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Rule 8.13 (Advisory) A pointer should point to a const-qualified type whenever possible" ] } }, { "id": "MISRAC2012-RULE_1_3-a", "name": "Avoid division by zero", "shortDescription": { "text": "Avoid division by zero" }, "fullDescription": { "text": "Avoid division by zero [MISRAC2012-RULE_1_3-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid division by zero [MISRAC2012-RULE_1_3-a]" }, "properties": { "tags": [ "MISRA C 2023 (MISRA C 2012)", "Rule 1.3 (Required) There shall be no occurrence of undefined or critical unspecified behaviour" ] } }, { "id": "MRM-04", "name": "All classes should contain the assignment operator or appropriate comment", "shortDescription": { "text": "All classes should contain the assignment operator or appropriate comment" }, "fullDescription": { "text": "All classes should contain the assignment operator or appropriate comment [MRM-04]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "All classes should contain the assignment operator or appropriate comment [MRM-04]" }, "properties": { "tags": [ "Memory and Resource Management" ] } }, { "id": "MRM-05", "name": "All classes should contain the copy constructor or appropriate comment", "shortDescription": { "text": "All classes should contain the copy constructor or appropriate comment" }, "fullDescription": { "text": "All classes should contain the copy constructor or appropriate comment [MRM-05]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "All classes should contain the copy constructor or appropriate comment [MRM-05]" }, "properties": { "tags": [ "Memory and Resource Management" ] } }, { "id": "MRM-18", "name": "Do not allocate memory and expect that someone else will deallocate it later", "shortDescription": { "text": "Do not allocate memory and expect that someone else will deallocate it later" }, "fullDescription": { "text": "Do not allocate memory and expect that someone else will deallocate it later [MRM-18]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Do not allocate memory and expect that someone else will deallocate it later [MRM-18]" }, "properties": { "tags": [ "Memory and Resource Management" ] } }, { "id": "MRM-34", "name": "Check the return value of new", "shortDescription": { "text": "Check the return value of new" }, "fullDescription": { "text": "Check the return value of new [MRM-34]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Check the return value of new [MRM-34]" }, "properties": { "tags": [ "Memory and Resource Management" ] } }, { "id": "MRM-47", "name": "Classes containing at least one non-static member variable should declare the assignment operator or contain appropriate comment", "shortDescription": { "text": "Classes containing at least one non-static member variable should declare the assignment operator or contain appropriate comment" }, "fullDescription": { "text": "Classes containing at least one non-static member variable should declare the assignment operator or contain appropriate comment [MRM-47]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Classes containing at least one non-static member variable should declare the assignment operator or contain appropriate comment [MRM-47]" }, "properties": { "tags": [ "Memory and Resource Management" ] } }, { "id": "MRM-48", "name": "Classes containing at least one non-static member variable should declare the copy constructor or contain appropriate comment", "shortDescription": { "text": "Classes containing at least one non-static member variable should declare the copy constructor or contain appropriate comment" }, "fullDescription": { "text": "Classes containing at least one non-static member variable should declare the copy constructor or contain appropriate comment [MRM-48]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Classes containing at least one non-static member variable should declare the copy constructor or contain appropriate comment [MRM-48]" }, "properties": { "tags": [ "Memory and Resource Management" ] } }, { "id": "NAMING-03", "name": "Use lowercase for file names", "shortDescription": { "text": "Use lowercase for file names" }, "fullDescription": { "text": "Use lowercase for file names [NAMING-03]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Use lowercase for file names [NAMING-03]" }, "properties": { "tags": [ "Naming Conventions" ] } }, { "id": "NAMING-07", "name": "Begin member variable names with a lowercase letters", "shortDescription": { "text": "Begin member variable names with a lowercase letters" }, "fullDescription": { "text": "Begin member variable names with a lowercase letters [NAMING-07]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Begin member variable names with a lowercase letters [NAMING-07]" }, "properties": { "tags": [ "Naming Conventions" ] } }, { "id": "NAMING-14", "name": "Begin class data member names with 'its'", "shortDescription": { "text": "Begin class data member names with 'its'" }, "fullDescription": { "text": "Begin class data member names with 'its' [NAMING-14]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Begin class data member names with 'its' [NAMING-14]" }, "properties": { "tags": [ "Naming Conventions" ] } }, { "id": "NAMING-15", "name": "Begin all double type variable with 'd'", "shortDescription": { "text": "Begin all double type variable with 'd'" }, "fullDescription": { "text": "Begin all double type variable with 'd' [NAMING-15]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Begin all double type variable with 'd' [NAMING-15]" }, "properties": { "tags": [ "Naming Conventions" ] } }, { "id": "NAMING-17", "name": "Begin all function names with uppercase letter", "shortDescription": { "text": "Begin all function names with uppercase letter" }, "fullDescription": { "text": "Begin all function names with uppercase letter [NAMING-17]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Begin all function names with uppercase letter [NAMING-17]" }, "properties": { "tags": [ "Naming Conventions" ] } }, { "id": "NAMING-18", "name": "Begin global variable names with 'the'", "shortDescription": { "text": "Begin global variable names with 'the'" }, "fullDescription": { "text": "Begin global variable names with 'the' [NAMING-18]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Begin global variable names with 'the' [NAMING-18]" }, "properties": { "tags": [ "Naming Conventions" ] } }, { "id": "NAMING-19", "name": "Begin all integer type variable with 'i'", "shortDescription": { "text": "Begin all integer type variable with 'i'" }, "fullDescription": { "text": "Begin all integer type variable with 'i' [NAMING-19]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Begin all integer type variable with 'i' [NAMING-19]" }, "properties": { "tags": [ "Naming Conventions" ] } }, { "id": "NAMING-22", "name": "Prefix a variable type 'pointer' with a 'p' character", "shortDescription": { "text": "Prefix a variable type 'pointer' with a 'p' character" }, "fullDescription": { "text": "Prefix a variable type 'pointer' with a 'p' character [NAMING-22]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Prefix a variable type 'pointer' with a 'p' character [NAMING-22]" }, "properties": { "tags": [ "Naming Conventions" ] } }, { "id": "NAMING-33", "name": "Do not use identifiers which begin with one or two underscores (`_' or `__')", "shortDescription": { "text": "Do not use identifiers which begin with one or two underscores (`_' or `__')" }, "fullDescription": { "text": "Do not use identifiers which begin with one or two underscores (`_' or `__') [NAMING-33]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Do not use identifiers which begin with one or two underscores (`_' or `__') [NAMING-33]" }, "properties": { "tags": [ "Naming Conventions" ] } }, { "id": "NAMING-34", "name": "Global function names should start with lowercase", "shortDescription": { "text": "Global function names should start with lowercase" }, "fullDescription": { "text": "Global function names should start with lowercase [NAMING-34]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Global function names should start with lowercase [NAMING-34]" }, "properties": { "tags": [ "Naming Conventions" ] } }, { "id": "NAMING-37", "name": "Include files in C++ always have the file name extension '.hh'", "shortDescription": { "text": "Include files in C++ always have the file name extension '.hh'" }, "fullDescription": { "text": "Include files in C++ always have the file name extension '.hh' [NAMING-37]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Include files in C++ always have the file name extension '.hh' [NAMING-37]" }, "properties": { "tags": [ "Naming Conventions" ] } }, { "id": "NAMING-38", "name": "Implementation files in C++ always have the file name extension \".cc\"", "shortDescription": { "text": "Implementation files in C++ always have the file name extension \".cc\"" }, "fullDescription": { "text": "Implementation files in C++ always have the file name extension \".cc\" [NAMING-38]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Implementation files in C++ always have the file name extension \".cc\" [NAMING-38]" }, "properties": { "tags": [ "Naming Conventions" ] } }, { "id": "NAMING-39", "name": "Inline definition files always have the file name extension \".icc\"", "shortDescription": { "text": "Inline definition files always have the file name extension \".icc\"" }, "fullDescription": { "text": "Inline definition files always have the file name extension \".icc\" [NAMING-39]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Inline definition files always have the file name extension \".icc\" [NAMING-39]" }, "properties": { "tags": [ "Naming Conventions" ] } }, { "id": "NAMING-40", "name": "Only the first word of the name of a class, structure, namespace, enumeration, or typedef will begin with an uppercase letter", "shortDescription": { "text": "Only the first word of the name of a class, structure, namespace, enumeration, or typedef will begin with an uppercase letter" }, "fullDescription": { "text": "Only the first word of the name of a class, structure, namespace, enumeration, or typedef will begin with an uppercase letter [NAMING-40]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Only the first word of the name of a class, structure, namespace, enumeration, or typedef will begin with an uppercase letter [NAMING-40]" }, "properties": { "tags": [ "Naming Conventions" ] } }, { "id": "NAMING-41", "name": "Header files will always have a file name extension of '.h'", "shortDescription": { "text": "Header files will always have a file name extension of '.h'" }, "fullDescription": { "text": "Header files will always have a file name extension of '.h' [NAMING-41]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Header files will always have a file name extension of '.h' [NAMING-41]" }, "properties": { "tags": [ "Naming Conventions" ] } }, { "id": "NAMING-43", "name": "File name extension, if present, should be \"*.cpp\" or \"*.h\"", "shortDescription": { "text": "File name extension, if present, should be \"*.cpp\" or \"*.h\"" }, "fullDescription": { "text": "File name extension, if present, should be \"*.cpp\" or \"*.h\" [NAMING-43]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "File name extension, if present, should be \"*.cpp\" or \"*.h\" [NAMING-43]" }, "properties": { "tags": [ "Naming Conventions" ] } }, { "id": "NAMING-44", "name": "All letters contained in function and variable names will be composed entirely of lowercase letters", "shortDescription": { "text": "All letters contained in function and variable names will be composed entirely of lowercase letters" }, "fullDescription": { "text": "All letters contained in function and variable names will be composed entirely of lowercase letters [NAMING-44]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "All letters contained in function and variable names will be composed entirely of lowercase letters [NAMING-44]" }, "properties": { "tags": [ "Naming Conventions" ] } }, { "id": "NAMING-45", "name": "Identifiers will not differ by mixture of case, the underscore character, interchange of the similarly looking letters and numbers", "shortDescription": { "text": "Identifiers will not differ by mixture of case, the underscore character, interchange of the similarly looking letters and numbers" }, "fullDescription": { "text": "Identifiers will not differ by mixture of case, the underscore character, interchange of the similarly looking letters and numbers [NAMING-45]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Identifiers will not differ by mixture of case, the underscore character, interchange of the similarly looking letters and numbers [NAMING-45]" }, "properties": { "tags": [ "Naming Conventions" ] } }, { "id": "NAMING-47", "name": "Different identifiers shall be typographically unambiguous", "shortDescription": { "text": "Different identifiers shall be typographically unambiguous" }, "fullDescription": { "text": "Different identifiers shall be typographically unambiguous [NAMING-47]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Different identifiers shall be typographically unambiguous [NAMING-47]" }, "properties": { "tags": [ "Naming Conventions" ] } }, { "id": "NAMING-HN-01", "name": "Hungarian notation for array variables and parameters", "shortDescription": { "text": "Hungarian notation for array variables and parameters" }, "fullDescription": { "text": "Hungarian notation for array variables and parameters [NAMING-HN-01]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Hungarian notation for array variables and parameters [NAMING-HN-01]" }, "properties": { "tags": [ "Naming Conventions", "Hungarian Notation" ] } }, { "id": "NAMING-HN-05", "name": "Hungarian notation for byte pointer, array, or reference types", "shortDescription": { "text": "Hungarian notation for byte pointer, array, or reference types" }, "fullDescription": { "text": "Hungarian notation for byte pointer, array, or reference types [NAMING-HN-05]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Hungarian notation for byte pointer, array, or reference types [NAMING-HN-05]" }, "properties": { "tags": [ "Naming Conventions", "Hungarian Notation" ] } }, { "id": "NAMING-HN-09", "name": "Hungarian notation for char pointer, array, or reference types", "shortDescription": { "text": "Hungarian notation for char pointer, array, or reference types" }, "fullDescription": { "text": "Hungarian notation for char pointer, array, or reference types [NAMING-HN-09]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Hungarian notation for char pointer, array, or reference types [NAMING-HN-09]" }, "properties": { "tags": [ "Naming Conventions", "Hungarian Notation" ] } }, { "id": "NAMING-HN-10", "name": "Hungarian notation for char pointer or reference types", "shortDescription": { "text": "Hungarian notation for char pointer or reference types" }, "fullDescription": { "text": "Hungarian notation for char pointer or reference types [NAMING-HN-10]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Hungarian notation for char pointer or reference types [NAMING-HN-10]" }, "properties": { "tags": [ "Naming Conventions", "Hungarian Notation" ] } }, { "id": "NAMING-HN-11", "name": "Hungarian notation for constant parameters", "shortDescription": { "text": "Hungarian notation for constant parameters" }, "fullDescription": { "text": "Hungarian notation for constant parameters [NAMING-HN-11]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Hungarian notation for constant parameters [NAMING-HN-11]" }, "properties": { "tags": [ "Naming Conventions", "Hungarian Notation" ] } }, { "id": "NAMING-HN-12", "name": "Hungarian notation for double-precision floating point types", "shortDescription": { "text": "Hungarian notation for double-precision floating point types" }, "fullDescription": { "text": "Hungarian notation for double-precision floating point types [NAMING-HN-12]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Hungarian notation for double-precision floating point types [NAMING-HN-12]" }, "properties": { "tags": [ "Naming Conventions", "Hungarian Notation" ] } }, { "id": "NAMING-HN-16", "name": "Hungarian notation for dynamically allocated array", "shortDescription": { "text": "Hungarian notation for dynamically allocated array" }, "fullDescription": { "text": "Hungarian notation for dynamically allocated array [NAMING-HN-16]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Hungarian notation for dynamically allocated array [NAMING-HN-16]" }, "properties": { "tags": [ "Naming Conventions", "Hungarian Notation" ] } }, { "id": "NAMING-HN-19", "name": "Hungarian notation for class declaration", "shortDescription": { "text": "Hungarian notation for class declaration" }, "fullDescription": { "text": "Hungarian notation for class declaration [NAMING-HN-19]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Hungarian notation for class declaration [NAMING-HN-19]" }, "properties": { "tags": [ "Naming Conventions", "Hungarian Notation" ] } }, { "id": "NAMING-HN-22", "name": "Hungarian notation for int types", "shortDescription": { "text": "Hungarian notation for int types" }, "fullDescription": { "text": "Hungarian notation for int types [NAMING-HN-22]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Hungarian notation for int types [NAMING-HN-22]" }, "properties": { "tags": [ "Naming Conventions", "Hungarian Notation" ] } }, { "id": "NAMING-HN-23", "name": "Hungarian notation for int pointer, array, or reference types", "shortDescription": { "text": "Hungarian notation for int pointer, array, or reference types" }, "fullDescription": { "text": "Hungarian notation for int pointer, array, or reference types [NAMING-HN-23]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Hungarian notation for int pointer, array, or reference types [NAMING-HN-23]" }, "properties": { "tags": [ "Naming Conventions", "Hungarian Notation" ] } }, { "id": "NAMING-HN-29", "name": "Hungarian notation for member variables", "shortDescription": { "text": "Hungarian notation for member variables" }, "fullDescription": { "text": "Hungarian notation for member variables [NAMING-HN-29]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Hungarian notation for member variables [NAMING-HN-29]" }, "properties": { "tags": [ "Naming Conventions", "Hungarian Notation" ] } }, { "id": "NAMING-HN-30", "name": "Hungarian notation for int types", "shortDescription": { "text": "Hungarian notation for int types" }, "fullDescription": { "text": "Hungarian notation for int types [NAMING-HN-30]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Hungarian notation for int types [NAMING-HN-30]" }, "properties": { "tags": [ "Naming Conventions", "Hungarian Notation" ] } }, { "id": "NAMING-HN-31", "name": "Hungarian notation for int pointer, array, or reference types", "shortDescription": { "text": "Hungarian notation for int pointer, array, or reference types" }, "fullDescription": { "text": "Hungarian notation for int pointer, array, or reference types [NAMING-HN-31]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Hungarian notation for int pointer, array, or reference types [NAMING-HN-31]" }, "properties": { "tags": [ "Naming Conventions", "Hungarian Notation" ] } }, { "id": "NAMING-HN-34", "name": "Hungarian notation for pointer", "shortDescription": { "text": "Hungarian notation for pointer" }, "fullDescription": { "text": "Hungarian notation for pointer [NAMING-HN-34]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Hungarian notation for pointer [NAMING-HN-34]" }, "properties": { "tags": [ "Naming Conventions", "Hungarian Notation" ] } }, { "id": "NAMING-HN-35", "name": "Hungarian notation for reference parameters", "shortDescription": { "text": "Hungarian notation for reference parameters" }, "fullDescription": { "text": "Hungarian notation for reference parameters [NAMING-HN-35]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Hungarian notation for reference parameters [NAMING-HN-35]" }, "properties": { "tags": [ "Naming Conventions", "Hungarian Notation" ] } }, { "id": "NAMING-HN-38", "name": "Hungarian notation for static variables", "shortDescription": { "text": "Hungarian notation for static variables" }, "fullDescription": { "text": "Hungarian notation for static variables [NAMING-HN-38]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Hungarian notation for static variables [NAMING-HN-38]" }, "properties": { "tags": [ "Naming Conventions", "Hungarian Notation" ] } }, { "id": "NAMING-HN-43", "name": "Hungarian notation for word types", "shortDescription": { "text": "Hungarian notation for word types" }, "fullDescription": { "text": "Hungarian notation for word types [NAMING-HN-43]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Hungarian notation for word types [NAMING-HN-43]" }, "properties": { "tags": [ "Naming Conventions", "Hungarian Notation" ] } }, { "id": "NAMING-HN-44", "name": "Hungarian notation for word pointer, array, or reference types", "shortDescription": { "text": "Hungarian notation for word pointer, array, or reference types" }, "fullDescription": { "text": "Hungarian notation for word pointer, array, or reference types [NAMING-HN-44]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Hungarian notation for word pointer, array, or reference types [NAMING-HN-44]" }, "properties": { "tags": [ "Naming Conventions", "Hungarian Notation" ] } }, { "id": "OOP-22", "name": "Define a virtual destructor in classes used as base classes which have virtual functions", "shortDescription": { "text": "Define a virtual destructor in classes used as base classes which have virtual functions" }, "fullDescription": { "text": "Define a virtual destructor in classes used as base classes which have virtual functions [OOP-22]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Define a virtual destructor in classes used as base classes which have virtual functions [OOP-22]" }, "properties": { "tags": [ "Object Oriented" ] } }, { "id": "OOP-23", "name": "If a class has virtual functions it shall have a virtual destructor", "shortDescription": { "text": "If a class has virtual functions it shall have a virtual destructor" }, "fullDescription": { "text": "If a class has virtual functions it shall have a virtual destructor [OOP-23]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "If a class has virtual functions it shall have a virtual destructor [OOP-23]" }, "properties": { "tags": [ "Object Oriented" ] } }, { "id": "OOP-21", "name": "Use the virtual keyword if a subclass implements a virtual function", "shortDescription": { "text": "Use the virtual keyword if a subclass implements a virtual function" }, "fullDescription": { "text": "Use the virtual keyword if a subclass implements a virtual function [OOP-21]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Use the virtual keyword if a subclass implements a virtual function [OOP-21]" }, "properties": { "tags": [ "Object Oriented" ] } }, { "id": "OOP-25", "name": "Avoid declaring virtual functions inline", "shortDescription": { "text": "Avoid declaring virtual functions inline" }, "fullDescription": { "text": "Avoid declaring virtual functions inline [OOP-25]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid declaring virtual functions inline [OOP-25]" }, "properties": { "tags": [ "Object Oriented" ] } }, { "id": "OOP-36", "name": "Public member functions shall not return non-const handles to private\/protected class-data", "shortDescription": { "text": "Public member functions shall not return non-const handles to private\/protected class-data" }, "fullDescription": { "text": "Public member functions shall not return non-const handles to private\/protected class-data [OOP-36]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Public member functions shall not return non-const handles to private\/protected class-data [OOP-36]" }, "properties": { "tags": [ "Object Oriented" ] } }, { "id": "OPT-03", "name": "Eliminate unused parameters", "shortDescription": { "text": "Eliminate unused parameters" }, "fullDescription": { "text": "Eliminate unused parameters [OPT-03]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Eliminate unused parameters [OPT-03]" }, "properties": { "tags": [ "Optimization" ] } }, { "id": "OPT-04", "name": "Prefer canonical form of ++ and --. Prefer calling the prefix forms", "shortDescription": { "text": "Prefer canonical form of ++ and --. Prefer calling the prefix forms" }, "fullDescription": { "text": "Prefer canonical form of ++ and --. Prefer calling the prefix forms [OPT-04]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Prefer canonical form of ++ and --. Prefer calling the prefix forms [OPT-04]" }, "properties": { "tags": [ "Optimization" ] } }, { "id": "OPT-05", "name": "Avoid unused private member variables", "shortDescription": { "text": "Avoid unused private member variables" }, "fullDescription": { "text": "Avoid unused private member variables [OPT-05]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid unused private member variables [OPT-05]" }, "properties": { "tags": [ "Optimization" ] } }, { "id": "OPT-10", "name": "Do not declare variables in \"if\", \"for\", \"while\", and \"do while\" statement", "shortDescription": { "text": "Do not declare variables in \"if\", \"for\", \"while\", and \"do while\" statement" }, "fullDescription": { "text": "Do not declare variables in \"if\", \"for\", \"while\", and \"do while\" statement [OPT-10]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Do not declare variables in \"if\", \"for\", \"while\", and \"do while\" statement [OPT-10]" }, "properties": { "tags": [ "Optimization" ] } }, { "id": "OPT-14", "name": "Pass objects by reference instead of by value", "shortDescription": { "text": "Pass objects by reference instead of by value" }, "fullDescription": { "text": "Pass objects by reference instead of by value [OPT-14]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Pass objects by reference instead of by value [OPT-14]" }, "properties": { "tags": [ "Optimization" ] } }, { "id": "OPT-17", "name": "Avoid inline constructors and destructors", "shortDescription": { "text": "Avoid inline constructors and destructors" }, "fullDescription": { "text": "Avoid inline constructors and destructors [OPT-17]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid inline constructors and destructors [OPT-17]" }, "properties": { "tags": [ "Optimization" ] } }, { "id": "OPT-31", "name": "There shall be no unused parameters (named or unnamed) in non-virtual functions", "shortDescription": { "text": "There shall be no unused parameters (named or unnamed) in non-virtual functions" }, "fullDescription": { "text": "There shall be no unused parameters (named or unnamed) in non-virtual functions [OPT-31]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "There shall be no unused parameters (named or unnamed) in non-virtual functions [OPT-31]" }, "properties": { "tags": [ "Optimization" ] } }, { "id": "OPT-06", "name": "Avoid unnecessary local variables", "shortDescription": { "text": "Avoid unnecessary local variables" }, "fullDescription": { "text": "Avoid unnecessary local variables [OPT-06]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid unnecessary local variables [OPT-06]" }, "properties": { "tags": [ "Optimization" ] } }, { "id": "OPT-27", "name": "The number of accessor and mutator functions should be minimized", "shortDescription": { "text": "The number of accessor and mutator functions should be minimized" }, "fullDescription": { "text": "The number of accessor and mutator functions should be minimized [OPT-27]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The number of accessor and mutator functions should be minimized [OPT-27]" }, "properties": { "tags": [ "Optimization" ] } }, { "id": "OPT-32_b", "name": "Functions with void return type shall not be empty", "shortDescription": { "text": "Functions with void return type shall not be empty" }, "fullDescription": { "text": "Functions with void return type shall not be empty [OPT-32_b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Functions with void return type shall not be empty [OPT-32_b]" }, "properties": { "tags": [ "Optimization" ] } }, { "id": "OWASP2019-API4-b", "name": "Ensure resources are freed", "shortDescription": { "text": "Ensure resources are freed" }, "fullDescription": { "text": "Ensure resources are freed [OWASP2019-API4-b]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Ensure resources are freed [OWASP2019-API4-b]" }, "properties": { "tags": [ "OWASP API Security Top 10 (2019)", "OWASP API4 Lack of Resources & Rate Limiting" ] } }, { "id": "OWASP2019-API4-a", "name": "Validate potentially tainted data before it is used to determine the size of memory allocation", "shortDescription": { "text": "Validate potentially tainted data before it is used to determine the size of memory allocation" }, "fullDescription": { "text": "Validate potentially tainted data before it is used to determine the size of memory allocation [OWASP2019-API4-a]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Validate potentially tainted data before it is used to determine the size of memory allocation [OWASP2019-API4-a]" }, "properties": { "tags": [ "OWASP API Security Top 10 (2019)", "OWASP API4 Lack of Resources & Rate Limiting" ] } }, { "id": "OWASP2019-API9-d", "name": "Use of floating-point arithmetic shall be documented", "shortDescription": { "text": "Use of floating-point arithmetic shall be documented" }, "fullDescription": { "text": "Use of floating-point arithmetic shall be documented [OWASP2019-API9-d]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Use of floating-point arithmetic shall be documented [OWASP2019-API9-d]" }, "properties": { "tags": [ "OWASP API Security Top 10 (2019)", "OWASP API9 Improper Assets Management" ] } }, { "id": "OWASP2019-API9-e", "name": "Objects or functions with external linkage shall be declared in a header file", "shortDescription": { "text": "Objects or functions with external linkage shall be declared in a header file" }, "fullDescription": { "text": "Objects or functions with external linkage shall be declared in a header file [OWASP2019-API9-e]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Objects or functions with external linkage shall be declared in a header file [OWASP2019-API9-e]" }, "properties": { "tags": [ "OWASP API Security Top 10 (2019)", "OWASP API9 Improper Assets Management" ] } }, { "id": "PARSER-WARNING", "name": "Parser warning", "shortDescription": { "text": "Parser warning" }, "fullDescription": { "text": "Parser warning [PARSER-WARNING]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Parser warning [PARSER-WARNING]" }, "properties": { "tags": [ "Parser diagnostics" ] } }, { "id": "PARSER-REMARK", "name": "Parser remark", "shortDescription": { "text": "Parser remark" }, "fullDescription": { "text": "Parser remark [PARSER-REMARK]" }, "defaultConfiguration": { "level": "note" }, "help": { "text": "Parser remark [PARSER-REMARK]" }, "properties": { "tags": [ "Parser diagnostics" ] } }, { "id": "PB-01", "name": "Do not dereference pointer type expressions", "shortDescription": { "text": "Do not dereference pointer type expressions" }, "fullDescription": { "text": "Do not dereference pointer type expressions [PB-01]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Do not dereference pointer type expressions [PB-01]" }, "properties": { "tags": [ "Possible Bugs" ] } }, { "id": "PB-05", "name": "Return value of a function must match declared return type", "shortDescription": { "text": "Return value of a function must match declared return type" }, "fullDescription": { "text": "Return value of a function must match declared return type [PB-05]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Return value of a function must match declared return type [PB-05]" }, "properties": { "tags": [ "Possible Bugs" ] } }, { "id": "PB-11", "name": "Declared types of formal and actual parameters to functions must match", "shortDescription": { "text": "Declared types of formal and actual parameters to functions must match" }, "fullDescription": { "text": "Declared types of formal and actual parameters to functions must match [PB-11]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Declared types of formal and actual parameters to functions must match [PB-11]" }, "properties": { "tags": [ "Possible Bugs" ] } }, { "id": "PB-76", "name": "C-style strings shall not be used", "shortDescription": { "text": "C-style strings shall not be used" }, "fullDescription": { "text": "C-style strings shall not be used [PB-76]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "C-style strings shall not be used [PB-76]" }, "properties": { "tags": [ "Possible Bugs" ] } }, { "id": "PFO-03", "name": "An include file should not contain more than one class definition", "shortDescription": { "text": "An include file should not contain more than one class definition" }, "fullDescription": { "text": "An include file should not contain more than one class definition [PFO-03]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "An include file should not contain more than one class definition [PFO-03]" }, "properties": { "tags": [ "Physical File Organization" ] } }, { "id": "PFO-07", "name": "Use multiple include guards with pattern based on the header file name", "shortDescription": { "text": "Use multiple include guards with pattern based on the header file name" }, "fullDescription": { "text": "Use multiple include guards with pattern based on the header file name [PFO-07]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Use multiple include guards with pattern based on the header file name [PFO-07]" }, "properties": { "tags": [ "Physical File Organization" ] } }, { "id": "PFO-10", "name": "Do not define more than on class in a header file", "shortDescription": { "text": "Do not define more than on class in a header file" }, "fullDescription": { "text": "Do not define more than on class in a header file [PFO-10]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Do not define more than on class in a header file [PFO-10]" }, "properties": { "tags": [ "Physical File Organization" ] } }, { "id": "PFO-04", "name": "Every implementation file should declare a local constant string that describes the file", "shortDescription": { "text": "Every implementation file should declare a local constant string that describes the file" }, "fullDescription": { "text": "Every implementation file should declare a local constant string that describes the file [PFO-04]" }, "defaultConfiguration": { "level": "note" }, "help": { "text": "Every implementation file should declare a local constant string that describes the file [PFO-04]" }, "properties": { "tags": [ "Physical File Organization" ] } }, { "id": "PORT-13", "name": "The type int shall always be declared as unsigned int or signed int", "shortDescription": { "text": "The type int shall always be declared as unsigned int or signed int" }, "fullDescription": { "text": "The type int shall always be declared as unsigned int or signed int [PORT-13]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The type int shall always be declared as unsigned int or signed int [PORT-13]" }, "properties": { "tags": [ "Portability" ] } }, { "id": "PORT-16", "name": "Avoid conversions from a \"shorter\" type to a \"longer\" type in function calls", "shortDescription": { "text": "Avoid conversions from a \"shorter\" type to a \"longer\" type in function calls" }, "fullDescription": { "text": "Avoid conversions from a \"shorter\" type to a \"longer\" type in function calls [PORT-16]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid conversions from a \"shorter\" type to a \"longer\" type in function calls [PORT-16]" }, "properties": { "tags": [ "Portability" ] } }, { "id": "PREPROC-09", "name": "The #include directive shall use the <filename.h> notation to include header files", "shortDescription": { "text": "The #include directive shall use the <filename.h> notation to include header files" }, "fullDescription": { "text": "The #include directive shall use the <filename.h> notation to include header files [PREPROC-09]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "The #include directive shall use the <filename.h> notation to include header files [PREPROC-09]" }, "properties": { "tags": [ "Preprocessor" ] } }, { "id": "PREPROC-01", "name": "Avoid using macro definitions", "shortDescription": { "text": "Avoid using macro definitions" }, "fullDescription": { "text": "Avoid using macro definitions [PREPROC-01]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Avoid using macro definitions [PREPROC-01]" }, "properties": { "tags": [ "Preprocessor" ] } }, { "id": "PREPROC-08", "name": "The #include pre-processor directive will only be used to include header (*.h) files", "shortDescription": { "text": "The #include pre-processor directive will only be used to include header (*.h) files" }, "fullDescription": { "text": "The #include pre-processor directive will only be used to include header (*.h) files [PREPROC-08]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The #include pre-processor directive will only be used to include header (*.h) files [PREPROC-08]" }, "properties": { "tags": [ "Preprocessor" ] } }, { "id": "PREPROC-10_b", "name": "The #endif pre-processor directives will only be used to prevent multiple inclusions of the same header file", "shortDescription": { "text": "The #endif pre-processor directives will only be used to prevent multiple inclusions of the same header file" }, "fullDescription": { "text": "The #endif pre-processor directives will only be used to prevent multiple inclusions of the same header file [PREPROC-10_b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The #endif pre-processor directives will only be used to prevent multiple inclusions of the same header file [PREPROC-10_b]" }, "properties": { "tags": [ "Preprocessor" ] } }, { "id": "PREPROC-10_c", "name": "The #if pre-processor directive will only be used to prevent multiple inclusions of the same header file", "shortDescription": { "text": "The #if pre-processor directive will only be used to prevent multiple inclusions of the same header file" }, "fullDescription": { "text": "The #if pre-processor directive will only be used to prevent multiple inclusions of the same header file [PREPROC-10_c]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The #if pre-processor directive will only be used to prevent multiple inclusions of the same header file [PREPROC-10_c]" }, "properties": { "tags": [ "Preprocessor" ] } }, { "id": "PREPROC-11", "name": "The #ifdef, #else, #elif preprocessor directives should not be used", "shortDescription": { "text": "The #ifdef, #else, #elif preprocessor directives should not be used" }, "fullDescription": { "text": "The #ifdef, #else, #elif preprocessor directives should not be used [PREPROC-11]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The #ifdef, #else, #elif preprocessor directives should not be used [PREPROC-11]" }, "properties": { "tags": [ "Preprocessor" ] } }, { "id": "PREPROC-11_b", "name": "The #if preprocessor directive should not be used", "shortDescription": { "text": "The #if preprocessor directive should not be used" }, "fullDescription": { "text": "The #if preprocessor directive should not be used [PREPROC-11_b]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The #if preprocessor directive should not be used [PREPROC-11_b]" }, "properties": { "tags": [ "Preprocessor" ] } }, { "id": "PREPROC-12", "name": "C++ macros shall only be used for include guards, type qualifiers, or storage class specifiers", "shortDescription": { "text": "C++ macros shall only be used for include guards, type qualifiers, or storage class specifiers" }, "fullDescription": { "text": "C++ macros shall only be used for include guards, type qualifiers, or storage class specifiers [PREPROC-12]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "C++ macros shall only be used for include guards, type qualifiers, or storage class specifiers [PREPROC-12]" }, "properties": { "tags": [ "Preprocessor" ] } }, { "id": "PREPROC-14", "name": "All macros must expand into complete syntactic units", "shortDescription": { "text": "All macros must expand into complete syntactic units" }, "fullDescription": { "text": "All macros must expand into complete syntactic units [PREPROC-14]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "All macros must expand into complete syntactic units [PREPROC-14]" }, "properties": { "tags": [ "Preprocessor" ] } }, { "id": "PREPROC-18", "name": "The input\/output library stdio.h shall not be included", "shortDescription": { "text": "The input\/output library stdio.h shall not be included" }, "fullDescription": { "text": "The input\/output library stdio.h shall not be included [PREPROC-18]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The input\/output library stdio.h shall not be included [PREPROC-18]" }, "properties": { "tags": [ "Preprocessor" ] } }, { "id": "PREPROC-26", "name": "The #ifndef, #ifdef, #if, #elif, #else, and #endif pre-processor directives shall only be used for conditional file inclusion and include guards", "shortDescription": { "text": "The #ifndef, #ifdef, #if, #elif, #else, and #endif pre-processor directives shall only be used for conditional file inclusion and include guards" }, "fullDescription": { "text": "The #ifndef, #ifdef, #if, #elif, #else, and #endif pre-processor directives shall only be used for conditional file inclusion and include guards [PREPROC-26]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "The #ifndef, #ifdef, #if, #elif, #else, and #endif pre-processor directives shall only be used for conditional file inclusion and include guards [PREPROC-26]" }, "properties": { "tags": [ "Preprocessor" ] } }, { "id": "PREPROC-04", "name": "Don't define part of statement", "shortDescription": { "text": "Don't define part of statement" }, "fullDescription": { "text": "Don't define part of statement [PREPROC-04]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Don't define part of statement [PREPROC-04]" }, "properties": { "tags": [ "Preprocessor" ] } }, { "id": "SECURITY-13", "name": "Avoid using unsafe string functions that do not check bounds", "shortDescription": { "text": "Avoid using unsafe string functions that do not check bounds" }, "fullDescription": { "text": "Avoid using unsafe string functions that do not check bounds [SECURITY-13]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Avoid using unsafe string functions that do not check bounds [SECURITY-13]" }, "properties": { "tags": [ "Security" ] } }, { "id": "SECURITY-14", "name": "Do not use scanf and fscanf functions without specifying variable size in format string", "shortDescription": { "text": "Do not use scanf and fscanf functions without specifying variable size in format string" }, "fullDescription": { "text": "Do not use scanf and fscanf functions without specifying variable size in format string [SECURITY-14]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Do not use scanf and fscanf functions without specifying variable size in format string [SECURITY-14]" }, "properties": { "tags": [ "Security" ] } }, { "id": "SECURITY-35", "name": "Don't trust any value of command line if attacker can set them", "shortDescription": { "text": "Don't trust any value of command line if attacker can set them" }, "fullDescription": { "text": "Don't trust any value of command line if attacker can set them [SECURITY-35]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Don't trust any value of command line if attacker can set them [SECURITY-35]" }, "properties": { "tags": [ "Security" ] } }, { "id": "SECURITY-38", "name": "Untrusted data is used as a loop boundary", "shortDescription": { "text": "Untrusted data is used as a loop boundary" }, "fullDescription": { "text": "Untrusted data is used as a loop boundary [SECURITY-38]" }, "defaultConfiguration": { "level": "error" }, "help": { "text": "Untrusted data is used as a loop boundary [SECURITY-38]" }, "properties": { "tags": [ "Security" ] } }, { "id": "STL-10", "name": "Prefer vector and string to dynamically allocated arrays", "shortDescription": { "text": "Prefer vector and string to dynamically allocated arrays" }, "fullDescription": { "text": "Prefer vector and string to dynamically allocated arrays [STL-10]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "Prefer vector and string to dynamically allocated arrays [STL-10]" }, "properties": { "tags": [ "STL Best Practices" ] } }, { "id": "STL-37", "name": "C-style arrays shall not be used", "shortDescription": { "text": "C-style arrays shall not be used" }, "fullDescription": { "text": "C-style arrays shall not be used [STL-37]" }, "defaultConfiguration": { "level": "warning" }, "help": { "text": "C-style arrays shall not be used [STL-37]" }, "properties": { "tags": [ "STL Best Practices" ] } }] } }, "originalUriBaseIds": {"PROJECTROOT-1": { "uri": "file:/D:/reports/projects/flowanalysiscpp%20(1)/" }}, "results": [{ "ruleId": "METRICS-31", "level": "warning", "message": { "text": "The assertion density is lower than two assertions per function", "markdown": "**\\[Line 1\\] The assertion density is lower than two assertions per function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "33f1ebf2-775d-311f-9385-d243c198f4b4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "NAMING-03", "level": "warning", "message": { "text": "The filename 'DeadLock.cpp' should be in lowercase", "markdown": "**\\[Line 1\\] The filename 'DeadLock\\.cpp' should be in lowercase**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "04ea27a5-a9a9-31b5-baac-987ca0ccfc6d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "NAMING-38", "level": "warning", "message": { "text": "Implementation file 'DeadLock.cpp' should have the file name extension \".cc\"", "markdown": "**\\[Line 1\\] Implementation file 'DeadLock\\.cpp' should have the file name extension \"\\.cc\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "d35aa8b0-dced-3d68-99a2-bb84c1d1a49a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PFO-04", "level": "note", "message": { "text": "Implementation file 'DeadLock.cpp' should declare a local constant string that begins from characters \"@(#)\" ", "markdown": "**\\[Line 1\\] Implementation file 'DeadLock\\.cpp' should declare a local constant string that begins from characters \"@\\(\\#\\)\" **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "da68e7d8-a2f8-3d9e-a1f1-f8f2cae8f8ce" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-02", "level": "warning", "message": { "text": "Add comment containing the copyright information at the begin of file 'DeadLock.cpp'", "markdown": "**\\[Line 1\\] Add comment containing the copyright information at the begin of file 'DeadLock\\.cpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "a6fbe724-d6cd-37fd-acc3-f295b4cec103" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-133_b", "level": "warning", "message": { "text": "Add comment containing the copyright information at the begin of file 'DeadLock.cpp'", "markdown": "**\\[Line 1\\] Add comment containing the copyright information at the begin of file 'DeadLock\\.cpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "38f19537-df9d-3ce0-a466-a6b582b2f6b6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-03", "level": "warning", "message": { "text": "Add comment containing the information on the file at the begin of file 'DeadLock.cpp'", "markdown": "**\\[Line 1\\] Add comment containing the information on the file at the begin of file 'DeadLock\\.cpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "86e54956-a32c-390a-b28f-c13983e37f0e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-133_a", "level": "warning", "message": { "text": "Add comment containing the information on the file at the begin of file 'DeadLock.cpp'", "markdown": "**\\[Line 1\\] Add comment containing the information on the file at the begin of file 'DeadLock\\.cpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "1fbfc739-bf35-3ee5-93e2-88d04a08c0f0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-032", "level": "warning", "message": { "text": "Not a proper header file (*.h ) is being included: \"Shapes.hpp\"", "markdown": "**\\[Line 1\\] Not a proper header file \\(\\*\\.h \\) is being included: \"Shapes\\.hpp\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "7da45ef4-e322-39f2-a8e2-7ae248d1a285" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-08", "level": "warning", "message": { "text": "Not a proper header file (*.h ) is being included: \"Shapes.hpp\"", "markdown": "**\\[Line 1\\] Not a proper header file \\(\\*\\.h \\) is being included: \"Shapes\\.hpp\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "5cdf43b5-4602-3b0c-b039-ccda4f168440" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-09", "level": "error", "message": { "text": "Disallowed #include notation is being used: \"Shapes.hpp\"", "markdown": "**\\[Line 1\\] Disallowed \\#include notation is being used: \"Shapes\\.hpp\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "972a4948-a314-3514-b572-7bf1e73640d1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-033", "level": "error", "message": { "text": "Disallowed #include notation is being used: \"Shapes.hpp\"", "markdown": "**\\[Line 1\\] Disallowed \\#include notation is being used: \"Shapes\\.hpp\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "95094b71-613f-361d-9aee-c6c655768308" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "METRIC.NOPLIF", "level": "warning", "message": { "text": "Value 152 is out of acceptable range: 'lower than 50'", "markdown": "**\\[Line 1\\] Value 152 is out of acceptable range: 'lower than 50'**" }, "partialFingerprints": { "violType": "MetViol", "lineHash": "329732047", "unbViolId": "6c729835-8887-3bcf-9038-ec5d2425e5af" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1 } } } ] }, { "ruleId": "PREPROC-10_c", "level": "warning", "message": { "text": "#if pre-processor directive should not be used", "markdown": "**\\[Line 3\\] \\#if pre\\-processor directive should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1674050737", "unbViolId": "e1b44214-b2ae-31d6-be10-bf91f4b44222" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_e", "level": "error", "message": { "text": "#if pre-processor directive should not be used", "markdown": "**\\[Line 3\\] \\#if pre\\-processor directive should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1674050737", "unbViolId": "5dab284a-5c0b-304f-9e85-551e1ed9bebd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-f", "level": "warning", "message": { "text": "#if pre-processor directive should not be used", "markdown": "**\\[Line 3\\] \\#if pre\\-processor directive should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1674050737", "unbViolId": "087249fb-723e-375a-883c-f4352934bfc7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-11_b", "level": "warning", "message": { "text": "The #if preprocessor directive is used", "markdown": "**\\[Line 3\\] The \\#if preprocessor directive is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1674050737", "unbViolId": "8d290295-64f8-312d-8dd4-0c80359e53a3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-026_b", "level": "error", "message": { "text": "The #if preprocessor directive is used", "markdown": "**\\[Line 3\\] The \\#if preprocessor directive is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1674050737", "unbViolId": "6215a757-1433-3283-91db-5f32812d35bf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-031", "level": "warning", "message": { "text": "Do not use the macro definition 'THREAD'", "markdown": "**\\[Line 7\\] Do not use the macro definition 'THREAD'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1431583748", "unbViolId": "74246df9-f3b9-3021-a127-f6e9369b3150" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_a", "level": "error", "message": { "text": "Do not use the macro definition 'THREAD'", "markdown": "**\\[Line 7\\] Do not use the macro definition 'THREAD'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1431583748", "unbViolId": "e7832fb3-2a7f-3f38-af6a-a31ecc6db95d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-a", "level": "warning", "message": { "text": "Do not use the macro definition 'THREAD'", "markdown": "**\\[Line 7\\] Do not use the macro definition 'THREAD'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1431583748", "unbViolId": "e1611039-65f9-3bdb-9e6c-69cb18bf4811" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-01", "level": "warning", "message": { "text": "Do not use the macro definition 'THREAD'", "markdown": "**\\[Line 7\\] Do not use the macro definition 'THREAD'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1431583748", "unbViolId": "ee876b4c-436b-3fff-8a3d-c06c6a22c28b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A16_0_1-d", "level": "error", "message": { "text": "Do not use the macro definition 'THREAD'", "markdown": "**\\[Line 7\\] Do not use the macro definition 'THREAD'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1431583748", "unbViolId": "fd333a57-ae51-313b-a7ef-8ebc3a930f9c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_2", "level": "error", "message": { "text": "Do not use #define to define constant: 'THREAD'", "markdown": "**\\[Line 7\\] Do not use \\#define to define constant: 'THREAD'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1431583748", "unbViolId": "0c98ae0e-0546-397d-a58a-08fa74e1e7f6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-12", "level": "warning", "message": { "text": "Do not use #define to define constant: 'THREAD'", "markdown": "**\\[Line 7\\] Do not use \\#define to define constant: 'THREAD'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1431583748", "unbViolId": "4e0bbe6f-1b0b-3372-9ade-27d1aee2360c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-14", "level": "warning", "message": { "text": "Not all body of macro 'THREAD' is enclosed in braces", "markdown": "**\\[Line 7\\] Not all body of macro 'THREAD' is enclosed in braces**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1431583748", "unbViolId": "730bc43d-5de0-37da-883c-ca3e2f97a077" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-031", "level": "warning", "message": { "text": "Do not use the macro definition 'THREAD_RETURN_TYPE'", "markdown": "**\\[Line 8\\] Do not use the macro definition 'THREAD\\_RETURN\\_TYPE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-823604806", "unbViolId": "6f2d83ff-88e4-32ed-a204-8c1af417f808" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_a", "level": "error", "message": { "text": "Do not use the macro definition 'THREAD_RETURN_TYPE'", "markdown": "**\\[Line 8\\] Do not use the macro definition 'THREAD\\_RETURN\\_TYPE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-823604806", "unbViolId": "1f7e3655-3cdd-3e14-bcf1-dd243fee9892" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-a", "level": "warning", "message": { "text": "Do not use the macro definition 'THREAD_RETURN_TYPE'", "markdown": "**\\[Line 8\\] Do not use the macro definition 'THREAD\\_RETURN\\_TYPE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-823604806", "unbViolId": "4e888d60-9db9-3445-bae9-5afbe529cd4b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-01", "level": "warning", "message": { "text": "Do not use the macro definition 'THREAD_RETURN_TYPE'", "markdown": "**\\[Line 8\\] Do not use the macro definition 'THREAD\\_RETURN\\_TYPE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-823604806", "unbViolId": "f6aa1a6d-8332-3cc4-a530-5d6e78c97a77" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A16_0_1-d", "level": "error", "message": { "text": "Do not use the macro definition 'THREAD_RETURN_TYPE'", "markdown": "**\\[Line 8\\] Do not use the macro definition 'THREAD\\_RETURN\\_TYPE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-823604806", "unbViolId": "89ca3cf4-22f0-33a9-bb1a-446cf0f5fe1a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_2", "level": "error", "message": { "text": "Do not use #define to define constant: 'THREAD_RETURN_TYPE'", "markdown": "**\\[Line 8\\] Do not use \\#define to define constant: 'THREAD\\_RETURN\\_TYPE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-823604806", "unbViolId": "395369ab-3fe9-357d-9a52-dbd816853fc1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-12", "level": "warning", "message": { "text": "Do not use #define to define constant: 'THREAD_RETURN_TYPE'", "markdown": "**\\[Line 8\\] Do not use \\#define to define constant: 'THREAD\\_RETURN\\_TYPE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-823604806", "unbViolId": "e99e14a2-f87a-3bb8-b2ac-442125ff8309" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-14", "level": "warning", "message": { "text": "Not all body of macro 'THREAD_RETURN_TYPE' is enclosed in braces", "markdown": "**\\[Line 8\\] Not all body of macro 'THREAD\\_RETURN\\_TYPE' is enclosed in braces**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-823604806", "unbViolId": "a98653fa-003f-3945-8e99-8a19e840b7f4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_0_4", "level": "error", "message": { "text": "Do not define function-like macro: THREAD_CREATE", "markdown": "**\\[Line 9\\] Do not define function\\-like macro: THREAD\\_CREATE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "59a17ef8-5fc7-3012-a1d8-300e81ad3b79" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_9-a", "level": "warning", "message": { "text": "Do not define function-like macro: THREAD_CREATE", "markdown": "**\\[Line 9\\] Do not define function\\-like macro: THREAD\\_CREATE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "2e63a4a9-8fc2-36ee-8bab-e709f01313a0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-19_7", "level": "warning", "message": { "text": "Do not define function-like macro: THREAD_CREATE", "markdown": "**\\[Line 9\\] Do not define function\\-like macro: THREAD\\_CREATE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "3a86577f-6dcb-33e3-9d31-6b1e8a1164cb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-029", "level": "error", "message": { "text": "Do not define function-like macro: THREAD_CREATE", "markdown": "**\\[Line 9\\] Do not define function\\-like macro: THREAD\\_CREATE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "46e43b5a-16e4-3873-8b0c-d6d67a58721d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2012-DIR-4_9", "level": "warning", "message": { "text": "Do not define function-like macro: THREAD_CREATE", "markdown": "**\\[Line 9\\] Do not define function\\-like macro: THREAD\\_CREATE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "660c4f42-837a-37af-9524-fc862b1c94af" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CERT_C-PRE00-a", "level": "warning", "message": { "text": "Do not define function-like macro: THREAD_CREATE", "markdown": "**\\[Line 9\\] Do not define function\\-like macro: THREAD\\_CREATE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "fbff5d29-338f-3d6b-a637-45f53e98837e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA-096", "level": "warning", "message": { "text": "Body of macro 'THREAD_CREATE' is defined without parentheses", "markdown": "**\\[Line 9\\] Body of macro 'THREAD\\_CREATE' is defined without parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "2483711b-0ff3-3c8c-b2cc-8b8fab331368" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CERT_C-PRE02-a", "level": "error", "message": { "text": "Body of macro 'THREAD_CREATE' is defined without parentheses", "markdown": "**\\[Line 9\\] Body of macro 'THREAD\\_CREATE' is defined without parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "732a7721-2f70-3569-a58b-9f1f481dd133" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-031", "level": "warning", "message": { "text": "Do not use the macro definition 'THREAD_CREATE'", "markdown": "**\\[Line 9\\] Do not use the macro definition 'THREAD\\_CREATE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "8d685c6e-1c9f-30cf-86b8-c53ddc069ce0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_a", "level": "error", "message": { "text": "Do not use the macro definition 'THREAD_CREATE'", "markdown": "**\\[Line 9\\] Do not use the macro definition 'THREAD\\_CREATE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "0adae35d-97d2-3e8a-b3b0-f2783ce48c16" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-a", "level": "warning", "message": { "text": "Do not use the macro definition 'THREAD_CREATE'", "markdown": "**\\[Line 9\\] Do not use the macro definition 'THREAD\\_CREATE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "1a4330d2-1a61-3208-8f5d-0226fe9a1006" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-01", "level": "warning", "message": { "text": "Do not use the macro definition 'THREAD_CREATE'", "markdown": "**\\[Line 9\\] Do not use the macro definition 'THREAD\\_CREATE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "f96a9ff6-e558-33b9-962d-cc89ae54b19c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A16_0_1-d", "level": "error", "message": { "text": "Do not use the macro definition 'THREAD_CREATE'", "markdown": "**\\[Line 9\\] Do not use the macro definition 'THREAD\\_CREATE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "03469507-cac4-3c4b-b7f6-41b1c2a0ae47" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_2", "level": "error", "message": { "text": "Do not define function-like macro: THREAD_CREATE", "markdown": "**\\[Line 9\\] Do not define function\\-like macro: THREAD\\_CREATE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "a7bb41de-8867-37db-8e81-a3126091aec1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-12", "level": "warning", "message": { "text": "Do not define function-like macro: THREAD_CREATE", "markdown": "**\\[Line 9\\] Do not define function\\-like macro: THREAD\\_CREATE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "72e89a6f-c3d5-3655-a8de-a234c0fb7906" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-14", "level": "warning", "message": { "text": "Not all body of macro 'THREAD_CREATE' is enclosed in braces", "markdown": "**\\[Line 9\\] Not all body of macro 'THREAD\\_CREATE' is enclosed in braces**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "26ebef9b-8145-3fbf-a5c7-5fa6ac841407" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-19_10", "level": "warning", "message": { "text": "Each instance of parameter: 'thread' should be enclosed in parentheses", "markdown": "**\\[Line 9\\] Each instance of parameter: 'thread' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "c0f60c14-d295-3c52-9689-baf87959aece" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 37, "endColumn": 38 } } } ] }, { "ruleId": "MISRA2008-16_0_6", "level": "error", "message": { "text": "Each instance of parameter: 'thread' should be enclosed in parentheses", "markdown": "**\\[Line 9\\] Each instance of parameter: 'thread' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "42a858ab-e3b4-343a-b44e-0ecd2728bad0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 37, "endColumn": 38 } } } ] }, { "ruleId": "MISRA2012-RULE-20_7", "level": "error", "message": { "text": "Each instance of parameter: 'thread' should be enclosed in parentheses", "markdown": "**\\[Line 9\\] Each instance of parameter: 'thread' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "501c5c7a-c3b1-3ff1-a2e8-43d0593bf553" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 37, "endColumn": 38 } } } ] }, { "ruleId": "AUTOSAR-M16_0_6-a", "level": "error", "message": { "text": "Each instance of parameter: 'thread' should be enclosed in parentheses", "markdown": "**\\[Line 9\\] Each instance of parameter: 'thread' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "1322287d-f05f-36f1-b7c7-0cb69204860e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 37, "endColumn": 38 } } } ] }, { "ruleId": "CERT_C-PRE01-a", "level": "error", "message": { "text": "Each instance of parameter: 'thread' should be enclosed in parentheses", "markdown": "**\\[Line 9\\] Each instance of parameter: 'thread' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "1275abff-99b0-333b-b46a-7a1b40cbdb7d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 37, "endColumn": 38 } } } ] }, { "ruleId": "MISRAC2012-RULE_20_7-a", "level": "error", "message": { "text": "Each instance of parameter: 'thread' should be enclosed in parentheses", "markdown": "**\\[Line 9\\] Each instance of parameter: 'thread' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "7faf7607-a751-3e0c-a56a-a85db76b23f5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 37, "endColumn": 38 } } } ] }, { "ruleId": "MISRA2004-19_10", "level": "warning", "message": { "text": "Each instance of parameter: 'func' should be enclosed in parentheses", "markdown": "**\\[Line 9\\] Each instance of parameter: 'func' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "bea368ef-6976-3b0d-9127-1ba9454ca8e6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 65, "endColumn": 66 } } } ] }, { "ruleId": "MISRA2008-16_0_6", "level": "error", "message": { "text": "Each instance of parameter: 'func' should be enclosed in parentheses", "markdown": "**\\[Line 9\\] Each instance of parameter: 'func' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "cd46ceec-c88a-3c3f-9c34-126535440ad1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 65, "endColumn": 66 } } } ] }, { "ruleId": "MISRA2012-RULE-20_7", "level": "error", "message": { "text": "Each instance of parameter: 'func' should be enclosed in parentheses", "markdown": "**\\[Line 9\\] Each instance of parameter: 'func' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "40bcc6cb-9da3-3583-bcab-e1290b78e1e8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 65, "endColumn": 66 } } } ] }, { "ruleId": "AUTOSAR-M16_0_6-a", "level": "error", "message": { "text": "Each instance of parameter: 'func' should be enclosed in parentheses", "markdown": "**\\[Line 9\\] Each instance of parameter: 'func' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "cb022d61-cc4c-340b-a752-912ba5d22a33" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 65, "endColumn": 66 } } } ] }, { "ruleId": "CERT_C-PRE01-a", "level": "error", "message": { "text": "Each instance of parameter: 'func' should be enclosed in parentheses", "markdown": "**\\[Line 9\\] Each instance of parameter: 'func' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "a4920501-4059-3a4b-8cc8-446cb2017103" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 65, "endColumn": 66 } } } ] }, { "ruleId": "MISRAC2012-RULE_20_7-a", "level": "error", "message": { "text": "Each instance of parameter: 'func' should be enclosed in parentheses", "markdown": "**\\[Line 9\\] Each instance of parameter: 'func' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "371252460", "unbViolId": "4e6d0f58-0538-3bf9-ba50-9f11710973b0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 65, "endColumn": 66 } } } ] }, { "ruleId": "JSF-031", "level": "warning", "message": { "text": "Do not use the macro definition 'LOCK'", "markdown": "**\\[Line 11\\] Do not use the macro definition 'LOCK'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1036666232", "unbViolId": "b8a3f175-cb2e-36a6-b63d-6017463ffb34" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_a", "level": "error", "message": { "text": "Do not use the macro definition 'LOCK'", "markdown": "**\\[Line 11\\] Do not use the macro definition 'LOCK'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1036666232", "unbViolId": "1b46f266-52bf-3545-8c81-6c0b3f06af07" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-a", "level": "warning", "message": { "text": "Do not use the macro definition 'LOCK'", "markdown": "**\\[Line 11\\] Do not use the macro definition 'LOCK'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1036666232", "unbViolId": "a8428bbf-452e-39cf-a5b6-60a48f041ac6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-01", "level": "warning", "message": { "text": "Do not use the macro definition 'LOCK'", "markdown": "**\\[Line 11\\] Do not use the macro definition 'LOCK'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1036666232", "unbViolId": "5125daa0-394f-3592-98a5-144f1aa1f935" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A16_0_1-d", "level": "error", "message": { "text": "Do not use the macro definition 'LOCK'", "markdown": "**\\[Line 11\\] Do not use the macro definition 'LOCK'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1036666232", "unbViolId": "5e0e9cf5-2dd9-3d3c-8a47-730c36efa557" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_2", "level": "error", "message": { "text": "Do not use #define to define constant: 'LOCK'", "markdown": "**\\[Line 11\\] Do not use \\#define to define constant: 'LOCK'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1036666232", "unbViolId": "ae80a66f-0e00-365e-9f2c-e91acc7dba37" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-12", "level": "warning", "message": { "text": "Do not use #define to define constant: 'LOCK'", "markdown": "**\\[Line 11\\] Do not use \\#define to define constant: 'LOCK'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1036666232", "unbViolId": "65866dda-4345-3c44-8dd5-f7fd8e8bb237" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-14", "level": "warning", "message": { "text": "Not all body of macro 'LOCK' is enclosed in braces", "markdown": "**\\[Line 11\\] Not all body of macro 'LOCK' is enclosed in braces**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1036666232", "unbViolId": "aca53fd6-7ddc-339f-9f25-9bfaadab3cbe" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_0_4", "level": "error", "message": { "text": "Do not define function-like macro: LOCK_ACQUIRE", "markdown": "**\\[Line 12\\] Do not define function\\-like macro: LOCK\\_ACQUIRE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "6937e53e-9ae3-3638-a4d5-eb7caf21c8d4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_9-a", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_ACQUIRE", "markdown": "**\\[Line 12\\] Do not define function\\-like macro: LOCK\\_ACQUIRE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "e7f4f32d-1d61-3ee9-b69f-e222ada798d3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-19_7", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_ACQUIRE", "markdown": "**\\[Line 12\\] Do not define function\\-like macro: LOCK\\_ACQUIRE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "53234989-a838-3d6d-b936-02f4f0b649e0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-029", "level": "error", "message": { "text": "Do not define function-like macro: LOCK_ACQUIRE", "markdown": "**\\[Line 12\\] Do not define function\\-like macro: LOCK\\_ACQUIRE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "4cfcc1ed-1df1-3e86-8325-9dac604ffd01" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2012-DIR-4_9", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_ACQUIRE", "markdown": "**\\[Line 12\\] Do not define function\\-like macro: LOCK\\_ACQUIRE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "841a0bcd-2ec0-36f9-af54-74bd2948c878" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CERT_C-PRE00-a", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_ACQUIRE", "markdown": "**\\[Line 12\\] Do not define function\\-like macro: LOCK\\_ACQUIRE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "f31d25ff-0019-3530-b2a9-7e4b42e19e3e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA-096", "level": "warning", "message": { "text": "Body of macro 'LOCK_ACQUIRE' is defined without parentheses", "markdown": "**\\[Line 12\\] Body of macro 'LOCK\\_ACQUIRE' is defined without parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "19f691ef-9df9-37a4-b419-3686c685ccc6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CERT_C-PRE02-a", "level": "error", "message": { "text": "Body of macro 'LOCK_ACQUIRE' is defined without parentheses", "markdown": "**\\[Line 12\\] Body of macro 'LOCK\\_ACQUIRE' is defined without parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "f3e3d8bc-6e68-3bd0-b309-81f09ae8ff1e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-031", "level": "warning", "message": { "text": "Do not use the macro definition 'LOCK_ACQUIRE'", "markdown": "**\\[Line 12\\] Do not use the macro definition 'LOCK\\_ACQUIRE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "4c1f5649-8c27-3747-a0f1-dc4c7d76fba2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_a", "level": "error", "message": { "text": "Do not use the macro definition 'LOCK_ACQUIRE'", "markdown": "**\\[Line 12\\] Do not use the macro definition 'LOCK\\_ACQUIRE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "22dc6a03-0029-3307-a5a5-21a6c2f1bdcf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-a", "level": "warning", "message": { "text": "Do not use the macro definition 'LOCK_ACQUIRE'", "markdown": "**\\[Line 12\\] Do not use the macro definition 'LOCK\\_ACQUIRE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "97ae8e0f-3fe5-3453-8504-902a310ff7cd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-01", "level": "warning", "message": { "text": "Do not use the macro definition 'LOCK_ACQUIRE'", "markdown": "**\\[Line 12\\] Do not use the macro definition 'LOCK\\_ACQUIRE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "cea2fea9-c6fb-31eb-aebd-d7f9e95b0644" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A16_0_1-d", "level": "error", "message": { "text": "Do not use the macro definition 'LOCK_ACQUIRE'", "markdown": "**\\[Line 12\\] Do not use the macro definition 'LOCK\\_ACQUIRE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "ec209cce-ff92-3b55-9d99-4f161351ef56" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_2", "level": "error", "message": { "text": "Do not define function-like macro: LOCK_ACQUIRE", "markdown": "**\\[Line 12\\] Do not define function\\-like macro: LOCK\\_ACQUIRE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "f60689c7-e801-302b-97b0-8041cdb8379f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-12", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_ACQUIRE", "markdown": "**\\[Line 12\\] Do not define function\\-like macro: LOCK\\_ACQUIRE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "a2a09ff4-fbb4-3371-988c-d6f6e7abaa50" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-14", "level": "warning", "message": { "text": "Not all body of macro 'LOCK_ACQUIRE' is enclosed in braces", "markdown": "**\\[Line 12\\] Not all body of macro 'LOCK\\_ACQUIRE' is enclosed in braces**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "9296cd85-937f-3544-9e00-93ed7ed1ce02" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-19_10", "level": "warning", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 12\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "43e21789-342e-3891-82ba-9709cdf1a505" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "MISRA2008-16_0_6", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 12\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "de315f0d-3c28-3e50-9cf4-a418bbc534c0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "MISRA2012-RULE-20_7", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 12\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "68660238-49f7-330f-961b-44cd29ae3d46" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "AUTOSAR-M16_0_6-a", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 12\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "66d4d9f6-a30d-30ef-a1fc-5e370dd115b3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "CERT_C-PRE01-a", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 12\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "9bbaad03-900e-3669-ac99-d3f515fd2a54" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "MISRAC2012-RULE_20_7-a", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 12\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-632529940", "unbViolId": "7fd9586a-f8d2-3e87-8799-09c267065657" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "MISRA2008-16_0_4", "level": "error", "message": { "text": "Do not define function-like macro: LOCK_RELEASE", "markdown": "**\\[Line 13\\] Do not define function\\-like macro: LOCK\\_RELEASE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "420397f9-a6d7-32fb-a2bf-4d42a24ab2a3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_9-a", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_RELEASE", "markdown": "**\\[Line 13\\] Do not define function\\-like macro: LOCK\\_RELEASE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "51d2e17f-1804-368b-be63-b8c5df410457" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-19_7", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_RELEASE", "markdown": "**\\[Line 13\\] Do not define function\\-like macro: LOCK\\_RELEASE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "4fae7683-b00a-3e67-b444-4cfd43a80673" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-029", "level": "error", "message": { "text": "Do not define function-like macro: LOCK_RELEASE", "markdown": "**\\[Line 13\\] Do not define function\\-like macro: LOCK\\_RELEASE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "6716f10c-6d19-3894-8215-8cf72cb47705" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2012-DIR-4_9", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_RELEASE", "markdown": "**\\[Line 13\\] Do not define function\\-like macro: LOCK\\_RELEASE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "a632b895-45cf-318b-b33d-e0ca2f04d495" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CERT_C-PRE00-a", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_RELEASE", "markdown": "**\\[Line 13\\] Do not define function\\-like macro: LOCK\\_RELEASE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "b86e2639-a88d-31a5-9fc4-68db890d575b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA-096", "level": "warning", "message": { "text": "Body of macro 'LOCK_RELEASE' is defined without parentheses", "markdown": "**\\[Line 13\\] Body of macro 'LOCK\\_RELEASE' is defined without parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "38b3a7b8-6670-36f2-9776-6fedec5a7949" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CERT_C-PRE02-a", "level": "error", "message": { "text": "Body of macro 'LOCK_RELEASE' is defined without parentheses", "markdown": "**\\[Line 13\\] Body of macro 'LOCK\\_RELEASE' is defined without parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "2b760c9d-c2a7-30dc-9c2a-400cb9762d12" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-031", "level": "warning", "message": { "text": "Do not use the macro definition 'LOCK_RELEASE'", "markdown": "**\\[Line 13\\] Do not use the macro definition 'LOCK\\_RELEASE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "9790fc50-49a4-3809-b979-c5ce3bef6536" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_a", "level": "error", "message": { "text": "Do not use the macro definition 'LOCK_RELEASE'", "markdown": "**\\[Line 13\\] Do not use the macro definition 'LOCK\\_RELEASE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "a3c49fe5-3d98-348b-9874-2d87aa78c28b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-a", "level": "warning", "message": { "text": "Do not use the macro definition 'LOCK_RELEASE'", "markdown": "**\\[Line 13\\] Do not use the macro definition 'LOCK\\_RELEASE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "5a130220-baf5-34cc-bee7-8073e7685022" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-01", "level": "warning", "message": { "text": "Do not use the macro definition 'LOCK_RELEASE'", "markdown": "**\\[Line 13\\] Do not use the macro definition 'LOCK\\_RELEASE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "7c09cb48-aa43-3053-9eeb-9bfed5555add" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A16_0_1-d", "level": "error", "message": { "text": "Do not use the macro definition 'LOCK_RELEASE'", "markdown": "**\\[Line 13\\] Do not use the macro definition 'LOCK\\_RELEASE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "4b497ade-e692-3431-86ea-abd901ddff75" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_2", "level": "error", "message": { "text": "Do not define function-like macro: LOCK_RELEASE", "markdown": "**\\[Line 13\\] Do not define function\\-like macro: LOCK\\_RELEASE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "656287d8-d429-3a57-a42f-fcec850d7d54" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-12", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_RELEASE", "markdown": "**\\[Line 13\\] Do not define function\\-like macro: LOCK\\_RELEASE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "cac9840a-3f53-3fd2-96fc-5dda7b32fe09" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-14", "level": "warning", "message": { "text": "Not all body of macro 'LOCK_RELEASE' is enclosed in braces", "markdown": "**\\[Line 13\\] Not all body of macro 'LOCK\\_RELEASE' is enclosed in braces**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "503c262a-84c9-34f3-b7c0-533c0b0f4cbd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-19_10", "level": "warning", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 13\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "967c202d-faa4-3446-a07e-9bf22fecd3e9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "MISRA2008-16_0_6", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 13\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "1d9c4252-97a3-3c44-b386-eb3e30b4edf2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "MISRA2012-RULE-20_7", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 13\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "2c9b1766-e7b9-3379-96e4-b334619ae1b3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "AUTOSAR-M16_0_6-a", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 13\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "a7ef1df4-46b1-36fa-9748-a184525775e7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "CERT_C-PRE01-a", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 13\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "2b5f4e30-5f36-3a1a-9c60-db9764485417" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "MISRAC2012-RULE_20_7-a", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 13\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1552981372", "unbViolId": "eef0bec9-8579-3597-b23d-aed2407a9a65" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "MISRA2008-16_0_4", "level": "error", "message": { "text": "Do not define function-like macro: SLEEP", "markdown": "**\\[Line 15\\] Do not define function\\-like macro: SLEEP**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-477159842", "unbViolId": "b7b7ee66-91db-3b5b-86a7-42eafa54df3d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_9-a", "level": "warning", "message": { "text": "Do not define function-like macro: SLEEP", "markdown": "**\\[Line 15\\] Do not define function\\-like macro: SLEEP**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-477159842", "unbViolId": "01848b2d-196f-3e1f-b178-f8a251d79fb0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-19_7", "level": "warning", "message": { "text": "Do not define function-like macro: SLEEP", "markdown": "**\\[Line 15\\] Do not define function\\-like macro: SLEEP**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-477159842", "unbViolId": "49a256be-3659-302d-bdea-6e097389eca6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-029", "level": "error", "message": { "text": "Do not define function-like macro: SLEEP", "markdown": "**\\[Line 15\\] Do not define function\\-like macro: SLEEP**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-477159842", "unbViolId": "bf44f27f-0705-3ec4-9024-b1d0a259c33e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2012-DIR-4_9", "level": "warning", "message": { "text": "Do not define function-like macro: SLEEP", "markdown": "**\\[Line 15\\] Do not define function\\-like macro: SLEEP**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-477159842", "unbViolId": "22343358-85f7-3079-8ef1-ced88b138238" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CERT_C-PRE00-a", "level": "warning", "message": { "text": "Do not define function-like macro: SLEEP", "markdown": "**\\[Line 15\\] Do not define function\\-like macro: SLEEP**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-477159842", "unbViolId": "4262c40d-4c89-3015-813d-2428d95d8206" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA-096", "level": "warning", "message": { "text": "Body of macro 'SLEEP' is defined without parentheses", "markdown": "**\\[Line 15\\] Body of macro 'SLEEP' is defined without parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-477159842", "unbViolId": "97f38fb9-7429-31fd-8060-537b49948f64" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CERT_C-PRE02-a", "level": "error", "message": { "text": "Body of macro 'SLEEP' is defined without parentheses", "markdown": "**\\[Line 15\\] Body of macro 'SLEEP' is defined without parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-477159842", "unbViolId": "09b29942-0c67-3c52-a94d-786565314f7e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-031", "level": "warning", "message": { "text": "Do not use the macro definition 'SLEEP'", "markdown": "**\\[Line 15\\] Do not use the macro definition 'SLEEP'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-477159842", "unbViolId": "19d0c04d-b61e-37e6-a999-66f01c80f1d2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_a", "level": "error", "message": { "text": "Do not use the macro definition 'SLEEP'", "markdown": "**\\[Line 15\\] Do not use the macro definition 'SLEEP'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-477159842", "unbViolId": "4e6c2b0f-c548-3884-8200-48508bbb1c8f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-a", "level": "warning", "message": { "text": "Do not use the macro definition 'SLEEP'", "markdown": "**\\[Line 15\\] Do not use the macro definition 'SLEEP'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-477159842", "unbViolId": "615834bb-4860-388b-a27e-b7545547a87f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-01", "level": "warning", "message": { "text": "Do not use the macro definition 'SLEEP'", "markdown": "**\\[Line 15\\] Do not use the macro definition 'SLEEP'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-477159842", "unbViolId": "9385aff8-9ffa-34e3-ae2a-2fdf6d36f695" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A16_0_1-d", "level": "error", "message": { "text": "Do not use the macro definition 'SLEEP'", "markdown": "**\\[Line 15\\] Do not use the macro definition 'SLEEP'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-477159842", "unbViolId": "9b59b88a-dfd3-35d2-9244-dc96bf3f518a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_2", "level": "error", "message": { "text": "Do not define function-like macro: SLEEP", "markdown": "**\\[Line 15\\] Do not define function\\-like macro: SLEEP**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-477159842", "unbViolId": "ccbc4222-cf0e-38cf-8ac3-a61a8f4affb7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-12", "level": "warning", "message": { "text": "Do not define function-like macro: SLEEP", "markdown": "**\\[Line 15\\] Do not define function\\-like macro: SLEEP**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-477159842", "unbViolId": "a953cfaf-4864-317e-addf-7bf26dfc191c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-14", "level": "warning", "message": { "text": "Not all body of macro 'SLEEP' is enclosed in braces", "markdown": "**\\[Line 15\\] Not all body of macro 'SLEEP' is enclosed in braces**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-477159842", "unbViolId": "6769d21a-6c20-355c-b917-cceacf08f407" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_c", "level": "error", "message": { "text": "The #else preprocessor directive is used", "markdown": "**\\[Line 17\\] The \\#else preprocessor directive is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "35439580", "unbViolId": "f2eff2b7-3c71-3728-a683-0adb474e1753" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 17, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-c", "level": "warning", "message": { "text": "The #else preprocessor directive is used", "markdown": "**\\[Line 17\\] The \\#else preprocessor directive is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "35439580", "unbViolId": "6b167245-597f-362f-a5db-45242c6a5780" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 17, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-026", "level": "error", "message": { "text": "The #else preprocessor directive is used", "markdown": "**\\[Line 17\\] The \\#else preprocessor directive is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "35439580", "unbViolId": "66a0d50f-5d48-3a73-8509-dde317c1226d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 17, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-11", "level": "warning", "message": { "text": "The #else preprocessor directive is used", "markdown": "**\\[Line 17\\] The \\#else preprocessor directive is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "35439580", "unbViolId": "5eabb86c-5558-3cb8-972f-54c1507d7e53" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 17, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-10_c", "level": "warning", "message": { "text": "#if pre-processor directive should not be used", "markdown": "**\\[Line 19\\] \\#if pre\\-processor directive should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-343784077", "unbViolId": "ba6c1495-bb52-3049-9c0e-57bfef956bf5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_e", "level": "error", "message": { "text": "#if pre-processor directive should not be used", "markdown": "**\\[Line 19\\] \\#if pre\\-processor directive should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-343784077", "unbViolId": "b5d56ea9-7e87-32b6-b7ac-fed313ea4a0c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-f", "level": "warning", "message": { "text": "#if pre-processor directive should not be used", "markdown": "**\\[Line 19\\] \\#if pre\\-processor directive should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-343784077", "unbViolId": "662b683a-723e-32f5-bd36-120157e93188" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-11_b", "level": "warning", "message": { "text": "The #if preprocessor directive is used", "markdown": "**\\[Line 19\\] The \\#if preprocessor directive is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-343784077", "unbViolId": "865015ba-ea5e-3f6c-b411-8b03a4878620" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-026_b", "level": "error", "message": { "text": "The #if preprocessor directive is used", "markdown": "**\\[Line 19\\] The \\#if preprocessor directive is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-343784077", "unbViolId": "266c03ff-be1d-3036-823f-08d234a4fddc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-04", "level": "warning", "message": { "text": "Line has over 79 characters", "markdown": "**\\[Line 19\\] Line has over 79 characters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-343784077", "unbViolId": "9031df6f-647c-3405-b859-a971003b817c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-041", "level": "warning", "message": { "text": "Line contains more than 120 characters: 302", "markdown": "**\\[Line 19\\] Line contains more than 120 characters: 302**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-343784077", "unbViolId": "f72c08cc-4627-373e-b99b-57829fe69663" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "METRICS-26", "level": "warning", "message": { "text": "Line contains more than 120 characters: 302", "markdown": "**\\[Line 19\\] Line contains more than 120 characters: 302**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-343784077", "unbViolId": "d52d1e90-edaa-399a-a017-ce6bac666e4e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-18_1_1-a", "level": "warning", "message": { "text": "Do not use platform-specific multi-threading facilities: <pthread.h>", "markdown": "**\\[Line 21\\] Do not use platform\\-specific multi\\-threading facilities: <pthread\\.h>**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1671860853", "unbViolId": "df9bd03d-3d0e-3e6d-8290-b54fb9fc492e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 21, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_c", "level": "error", "message": { "text": "The #else preprocessor directive is used", "markdown": "**\\[Line 24\\] The \\#else preprocessor directive is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "35439580", "unbViolId": "6bcc90fe-5b88-3bae-b418-563072107cef" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 24, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-c", "level": "warning", "message": { "text": "The #else preprocessor directive is used", "markdown": "**\\[Line 24\\] The \\#else preprocessor directive is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "35439580", "unbViolId": "6de79526-1256-31bd-9cd4-0d4679d0d8b2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 24, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-026", "level": "error", "message": { "text": "The #else preprocessor directive is used", "markdown": "**\\[Line 24\\] The \\#else preprocessor directive is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "35439580", "unbViolId": "c95bedf3-ecdd-39c8-a256-0b184d0a2377" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 24, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-11", "level": "warning", "message": { "text": "The #else preprocessor directive is used", "markdown": "**\\[Line 24\\] The \\#else preprocessor directive is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "35439580", "unbViolId": "1dae89de-da2f-3b23-ac27-b3dc28013833" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 24, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-26", "level": "warning", "message": { "text": "#else pre-processor directive should not be used", "markdown": "**\\[Line 24\\] \\#else pre\\-processor directive should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "35439580", "unbViolId": "bf89afbe-8901-3e21-bd54-a960ba9f1244" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 24, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A16_0_1-a", "level": "error", "message": { "text": "#else pre-processor directive should not be used", "markdown": "**\\[Line 24\\] \\#else pre\\-processor directive should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "35439580", "unbViolId": "4e1e3ea0-ab84-37d2-8808-f486142342a0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 24, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CODSTA-223", "level": "warning", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 30\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-770959773", "unbViolId": "37f4967e-8e85-3cda-9ccb-388f5b2d7677" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 30, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A3_9_1-b", "level": "error", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 30\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-770959773", "unbViolId": "f11c1110-4b75-3b4c-bcd1-9a2a60d7720b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 30, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-7_1_6-b", "level": "warning", "message": { "text": "Do not use the 'int' standard integer type", "markdown": "**\\[Line 30\\] Do not use the 'int' standard integer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-770959773", "unbViolId": "82c8fbe2-9fa2-32fd-9d8c-82cfbbedda60" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 30, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 30\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-770959773", "unbViolId": "7c7c6e46-806b-35bc-987e-59b1ac26bed0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 30, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 30\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-770959773", "unbViolId": "4ecf8877-10d5-31bd-bb91-6c30b1df2aa6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 30, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 30\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-770959773", "unbViolId": "8278591e-670d-3bbc-aee9-59497878c944" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 30, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 30\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-770959773", "unbViolId": "a6cdc1ad-3bde-3073-b552-709aa7ace49e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 30, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 30\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-770959773", "unbViolId": "3059d206-273a-3505-ae41-562f480e3922" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 30, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 30\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-770959773", "unbViolId": "952a1286-03a0-36c8-af2b-7f6c5fa9da9b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 30, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 30\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-770959773", "unbViolId": "9aec1c6f-00ad-37ea-bd51-8b299baec9d6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 30, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 35\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1338521823", "unbViolId": "62a5eb7d-27bc-307a-9da4-a7c9d26872fc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 35, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 35\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1338521823", "unbViolId": "5fde7b4e-a87d-3374-858e-4c9abac3a018" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 35, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CODSTA-223", "level": "warning", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 35\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1338521823", "unbViolId": "8bde00af-4dc3-39d4-90ca-ee56a6b312d6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 35, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A3_9_1-b", "level": "error", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 35\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1338521823", "unbViolId": "e6ec13ce-aaf9-37f2-aa31-e1d6c35e09fe" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 35, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-7_1_6-b", "level": "warning", "message": { "text": "Do not use the 'int' standard integer type", "markdown": "**\\[Line 35\\] Do not use the 'int' standard integer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1338521823", "unbViolId": "da3fdc41-ae6b-395d-8d0d-6440ee640062" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 35, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 35\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1338521823", "unbViolId": "1d94075a-cbdb-3d0d-a316-5373e6242f31" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 35, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 35\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1338521823", "unbViolId": "86cb4aa0-9a35-37fb-b140-ccd869159d0d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 35, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 35\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1338521823", "unbViolId": "a0327b98-b36e-3160-bf70-10ca4f52a006" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 35, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 35\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1338521823", "unbViolId": "7714382b-21b8-3394-8688-3301021fc1a4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 35, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 35\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1338521823", "unbViolId": "08c070d7-f19c-3d6e-8b91-5da432b6faf0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 35, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CODSTA-223", "level": "warning", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 37\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-529470406", "unbViolId": "b98839eb-fc2d-312b-8e38-8a083cd5b28f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 37, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A3_9_1-b", "level": "error", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 37\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-529470406", "unbViolId": "88cd1b5e-caab-364c-b77f-c4ab079f8135" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 37, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-7_1_6-b", "level": "warning", "message": { "text": "Do not use the 'int' standard integer type", "markdown": "**\\[Line 37\\] Do not use the 'int' standard integer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-529470406", "unbViolId": "7e38a6a6-0e68-3e9b-90ee-8bd0745c3411" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 37, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 37\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-529470406", "unbViolId": "b185b50c-9d9b-3a35-bc83-de7c291f51ce" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 37, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 37\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-529470406", "unbViolId": "44f3e1bc-5a21-3596-b2a6-184f251abfa0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 37, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 37\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-529470406", "unbViolId": "a71589b1-c221-39d5-be71-e15bfaca2d28" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 37, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 37\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-529470406", "unbViolId": "5f3103d3-153b-3b57-8ae5-9974e4664503" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 37, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 37\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-529470406", "unbViolId": "faa213ff-b9d5-39a6-998b-0a35ad0dbee4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 37, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 37\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-529470406", "unbViolId": "bc05a675-ad87-3188-ab92-59d922fc6b3e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 37, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 37\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-529470406", "unbViolId": "4214bef1-97dc-3db7-a25c-a56ccb16a513" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 37, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 39\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-962720826", "unbViolId": "8fd874b4-88de-3803-88b1-758078a397df" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 39, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 39\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-962720826", "unbViolId": "c9ab4d5f-6028-3833-b868-35c6fce62b74" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 39, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "CODSTA-223", "level": "warning", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 39\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-962720826", "unbViolId": "fa5f02e5-c3f3-35c4-9a73-253f25e3eb85" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 39, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A3_9_1-b", "level": "error", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 39\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-962720826", "unbViolId": "5f9a9d47-933a-3e6b-b97c-c5b82ad80b21" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 39, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "HICPP-7_1_6-b", "level": "warning", "message": { "text": "Do not use the 'int' standard integer type", "markdown": "**\\[Line 39\\] Do not use the 'int' standard integer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-962720826", "unbViolId": "959e0339-167a-375a-9744-9431d4675fa9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 39, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 39\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-962720826", "unbViolId": "bf0466bf-5e88-35b2-a719-354237b4cce5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 39, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 39\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-962720826", "unbViolId": "319d5379-1cbb-3509-8a97-59b6cd1ddc0f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 39, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 39\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-962720826", "unbViolId": "b9e96081-55fb-39db-a7d4-ad750c443e93" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 39, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 39\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-962720826", "unbViolId": "7a2f71cc-f6b4-32c0-812c-568cc2d3176b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 39, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 39\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-962720826", "unbViolId": "f9479d11-71dd-3f09-a631-fa2e5c2208ba" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 39, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PREPROC-10_b", "level": "warning", "message": { "text": "#endif pre-processor directive should not be used", "markdown": "**\\[Line 41\\] \\#endif pre\\-processor directive should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1098672373", "unbViolId": "d7118e83-ac4b-3aa0-a952-bca91fc759c9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 41, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_d", "level": "error", "message": { "text": "#endif pre-processor directive should not be used", "markdown": "**\\[Line 41\\] \\#endif pre\\-processor directive should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1098672373", "unbViolId": "84fa10ef-8348-3d3c-8979-c6c6bd13ed7e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 41, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-028_b", "level": "warning", "message": { "text": "#endif pre-processor directive should not be used", "markdown": "**\\[Line 41\\] \\#endif pre\\-processor directive should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1098672373", "unbViolId": "6f2978e6-ece8-31ce-90ef-37a0c665a949" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 41, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-e", "level": "warning", "message": { "text": "#endif pre-processor directive should not be used", "markdown": "**\\[Line 41\\] \\#endif pre\\-processor directive should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1098672373", "unbViolId": "8abc9ecb-6e07-3084-9139-cf0cd83d48a5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 41, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-26", "level": "warning", "message": { "text": "#endif pre-processor directive should not be used", "markdown": "**\\[Line 41\\] \\#endif pre\\-processor directive should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1098672373", "unbViolId": "bdad8a10-fe84-3472-a04f-b834cd0628c2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 41, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A16_0_1-a", "level": "error", "message": { "text": "#endif pre-processor directive should not be used", "markdown": "**\\[Line 41\\] \\#endif pre\\-processor directive should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1098672373", "unbViolId": "509727e4-0057-3a14-ac77-9d95e8ea204c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 41, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-031", "level": "warning", "message": { "text": "Do not use the macro definition 'THREAD'", "markdown": "**\\[Line 43\\] Do not use the macro definition 'THREAD'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1234653797", "unbViolId": "1aee2bba-6f73-39e5-bcdf-bc67e3827c62" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 43, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_a", "level": "error", "message": { "text": "Do not use the macro definition 'THREAD'", "markdown": "**\\[Line 43\\] Do not use the macro definition 'THREAD'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1234653797", "unbViolId": "1ebb4c5a-a4a1-3b5b-8867-75c7a9ac138c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 43, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-a", "level": "warning", "message": { "text": "Do not use the macro definition 'THREAD'", "markdown": "**\\[Line 43\\] Do not use the macro definition 'THREAD'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1234653797", "unbViolId": "0d2fab66-bbaf-383e-84ee-cb2bd4e6ad21" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 43, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-01", "level": "warning", "message": { "text": "Do not use the macro definition 'THREAD'", "markdown": "**\\[Line 43\\] Do not use the macro definition 'THREAD'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1234653797", "unbViolId": "8349e043-2431-3100-935f-776170edff1f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 43, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A16_0_1-d", "level": "error", "message": { "text": "Do not use the macro definition 'THREAD'", "markdown": "**\\[Line 43\\] Do not use the macro definition 'THREAD'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1234653797", "unbViolId": "b1c056d1-1eab-3332-8453-46d6718c449e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 43, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_2", "level": "error", "message": { "text": "Do not use #define to define constant: 'THREAD'", "markdown": "**\\[Line 43\\] Do not use \\#define to define constant: 'THREAD'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1234653797", "unbViolId": "9e3c1c96-1157-3a18-97c4-4bd9707e78a2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 43, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-12", "level": "warning", "message": { "text": "Do not use #define to define constant: 'THREAD'", "markdown": "**\\[Line 43\\] Do not use \\#define to define constant: 'THREAD'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1234653797", "unbViolId": "ccabe87c-c96f-3572-b7a4-a47df4ef84db" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 43, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-14", "level": "warning", "message": { "text": "Not all body of macro 'THREAD' is enclosed in braces", "markdown": "**\\[Line 43\\] Not all body of macro 'THREAD' is enclosed in braces**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1234653797", "unbViolId": "4c2282b6-956a-3065-a7e3-55cb20af6786" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 43, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-031", "level": "warning", "message": { "text": "Do not use the macro definition 'THREAD_RETURN_TYPE'", "markdown": "**\\[Line 44\\] Do not use the macro definition 'THREAD\\_RETURN\\_TYPE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1590150764", "unbViolId": "20bc94a0-f823-3bed-a723-485ac1e3750b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 44, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_a", "level": "error", "message": { "text": "Do not use the macro definition 'THREAD_RETURN_TYPE'", "markdown": "**\\[Line 44\\] Do not use the macro definition 'THREAD\\_RETURN\\_TYPE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1590150764", "unbViolId": "904edd19-e3eb-3b08-9f66-619f6ed367c6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 44, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-a", "level": "warning", "message": { "text": "Do not use the macro definition 'THREAD_RETURN_TYPE'", "markdown": "**\\[Line 44\\] Do not use the macro definition 'THREAD\\_RETURN\\_TYPE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1590150764", "unbViolId": "de275bd3-f2c8-31ae-9427-e5051d9a00e5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 44, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-01", "level": "warning", "message": { "text": "Do not use the macro definition 'THREAD_RETURN_TYPE'", "markdown": "**\\[Line 44\\] Do not use the macro definition 'THREAD\\_RETURN\\_TYPE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1590150764", "unbViolId": "685f4a38-3a28-3636-9ab9-ad6b5e5355a9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 44, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A16_0_1-d", "level": "error", "message": { "text": "Do not use the macro definition 'THREAD_RETURN_TYPE'", "markdown": "**\\[Line 44\\] Do not use the macro definition 'THREAD\\_RETURN\\_TYPE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1590150764", "unbViolId": "b7f610e4-bd5a-3668-9953-2f6a52fa1cf0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 44, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-04", "level": "warning", "message": { "text": "'THREAD_RETURN_TYPE' part of statement", "markdown": "**\\[Line 44\\] 'THREAD\\_RETURN\\_TYPE' part of statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1590150764", "unbViolId": "ab6256c2-ec7f-3707-8e6e-de09b2e8c19c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 44, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_2", "level": "error", "message": { "text": "Do not use #define to define constant: 'THREAD_RETURN_TYPE'", "markdown": "**\\[Line 44\\] Do not use \\#define to define constant: 'THREAD\\_RETURN\\_TYPE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1590150764", "unbViolId": "d9bf3876-2bb0-3d90-9b62-e01d24aa97f0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 44, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-12", "level": "warning", "message": { "text": "Do not use #define to define constant: 'THREAD_RETURN_TYPE'", "markdown": "**\\[Line 44\\] Do not use \\#define to define constant: 'THREAD\\_RETURN\\_TYPE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1590150764", "unbViolId": "b4d01953-e8a5-3055-9fb4-7edd2fd02040" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 44, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-14", "level": "warning", "message": { "text": "Not all body of macro 'THREAD_RETURN_TYPE' is enclosed in braces", "markdown": "**\\[Line 44\\] Not all body of macro 'THREAD\\_RETURN\\_TYPE' is enclosed in braces**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1590150764", "unbViolId": "b898e534-39da-30da-b18c-b3421d9d5ce9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 44, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_0_4", "level": "error", "message": { "text": "Do not define function-like macro: THREAD_CREATE", "markdown": "**\\[Line 45\\] Do not define function\\-like macro: THREAD\\_CREATE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "63583890-0a52-3db8-860a-82f77c2b1c66" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_9-a", "level": "warning", "message": { "text": "Do not define function-like macro: THREAD_CREATE", "markdown": "**\\[Line 45\\] Do not define function\\-like macro: THREAD\\_CREATE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "523ffbaa-0546-3375-8ceb-a09e2f3fc668" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-19_7", "level": "warning", "message": { "text": "Do not define function-like macro: THREAD_CREATE", "markdown": "**\\[Line 45\\] Do not define function\\-like macro: THREAD\\_CREATE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "00395bfb-e8c4-3b05-a7ee-f4848ae96dc0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-029", "level": "error", "message": { "text": "Do not define function-like macro: THREAD_CREATE", "markdown": "**\\[Line 45\\] Do not define function\\-like macro: THREAD\\_CREATE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "c481ffe5-8a92-3acc-9f87-b89e4a86eafc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2012-DIR-4_9", "level": "warning", "message": { "text": "Do not define function-like macro: THREAD_CREATE", "markdown": "**\\[Line 45\\] Do not define function\\-like macro: THREAD\\_CREATE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "47ae079a-df8a-3dbb-838e-c3d443e80a32" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CERT_C-PRE00-a", "level": "warning", "message": { "text": "Do not define function-like macro: THREAD_CREATE", "markdown": "**\\[Line 45\\] Do not define function\\-like macro: THREAD\\_CREATE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "a9631846-61be-3527-8751-650a1e0ee6d5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA-096", "level": "warning", "message": { "text": "Body of macro 'THREAD_CREATE' is defined without parentheses", "markdown": "**\\[Line 45\\] Body of macro 'THREAD\\_CREATE' is defined without parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "450fc5f9-3658-333d-b7bf-55f07015867b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CERT_C-PRE02-a", "level": "error", "message": { "text": "Body of macro 'THREAD_CREATE' is defined without parentheses", "markdown": "**\\[Line 45\\] Body of macro 'THREAD\\_CREATE' is defined without parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "73e4d88b-51dd-393b-949c-2760b3081561" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-031", "level": "warning", "message": { "text": "Do not use the macro definition 'THREAD_CREATE'", "markdown": "**\\[Line 45\\] Do not use the macro definition 'THREAD\\_CREATE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "98adea9b-06eb-3dfb-bb3b-7e6536b46fe8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_a", "level": "error", "message": { "text": "Do not use the macro definition 'THREAD_CREATE'", "markdown": "**\\[Line 45\\] Do not use the macro definition 'THREAD\\_CREATE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "dc8d6edd-cf9f-3a46-bf4e-226458dd7011" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-a", "level": "warning", "message": { "text": "Do not use the macro definition 'THREAD_CREATE'", "markdown": "**\\[Line 45\\] Do not use the macro definition 'THREAD\\_CREATE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "63ca51e4-2ba7-3dcc-a1e8-a9696960aede" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-01", "level": "warning", "message": { "text": "Do not use the macro definition 'THREAD_CREATE'", "markdown": "**\\[Line 45\\] Do not use the macro definition 'THREAD\\_CREATE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "608ee5d4-0c57-33f2-b50d-7eaf508070fb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A16_0_1-d", "level": "error", "message": { "text": "Do not use the macro definition 'THREAD_CREATE'", "markdown": "**\\[Line 45\\] Do not use the macro definition 'THREAD\\_CREATE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "18f45d16-faa5-36b3-b0d6-5d1dbffcb64e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_2", "level": "error", "message": { "text": "Do not define function-like macro: THREAD_CREATE", "markdown": "**\\[Line 45\\] Do not define function\\-like macro: THREAD\\_CREATE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "26ac64c2-5a86-3836-91db-80f764154a0c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-12", "level": "warning", "message": { "text": "Do not define function-like macro: THREAD_CREATE", "markdown": "**\\[Line 45\\] Do not define function\\-like macro: THREAD\\_CREATE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "3256d17c-8d4f-3b02-9247-1908cf516dd2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-14", "level": "warning", "message": { "text": "Not all body of macro 'THREAD_CREATE' is enclosed in braces", "markdown": "**\\[Line 45\\] Not all body of macro 'THREAD\\_CREATE' is enclosed in braces**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "a8f2b84c-1ea7-343d-8bfd-9a4747946a75" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-19_10", "level": "warning", "message": { "text": "Each instance of parameter: 'thread' should be enclosed in parentheses", "markdown": "**\\[Line 45\\] Each instance of parameter: 'thread' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "05388c70-ae8f-3476-b836-dc757eb90085" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 53, "endColumn": 54 } } } ] }, { "ruleId": "MISRA2008-16_0_6", "level": "error", "message": { "text": "Each instance of parameter: 'thread' should be enclosed in parentheses", "markdown": "**\\[Line 45\\] Each instance of parameter: 'thread' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "a6fce23e-1c66-39ef-a847-e751ef7240b5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 53, "endColumn": 54 } } } ] }, { "ruleId": "MISRA2012-RULE-20_7", "level": "error", "message": { "text": "Each instance of parameter: 'thread' should be enclosed in parentheses", "markdown": "**\\[Line 45\\] Each instance of parameter: 'thread' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "c6e38e36-72f5-3f3a-8926-9c0cfc94fc0b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 53, "endColumn": 54 } } } ] }, { "ruleId": "AUTOSAR-M16_0_6-a", "level": "error", "message": { "text": "Each instance of parameter: 'thread' should be enclosed in parentheses", "markdown": "**\\[Line 45\\] Each instance of parameter: 'thread' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "5d3c8a03-240d-33b5-82f4-43e6d1811d4e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 53, "endColumn": 54 } } } ] }, { "ruleId": "CERT_C-PRE01-a", "level": "error", "message": { "text": "Each instance of parameter: 'thread' should be enclosed in parentheses", "markdown": "**\\[Line 45\\] Each instance of parameter: 'thread' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "48e1433d-9f39-3c2a-80d0-3bb6af32ce86" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 53, "endColumn": 54 } } } ] }, { "ruleId": "MISRAC2012-RULE_20_7-a", "level": "error", "message": { "text": "Each instance of parameter: 'thread' should be enclosed in parentheses", "markdown": "**\\[Line 45\\] Each instance of parameter: 'thread' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "052acd50-a4e6-313c-a7a3-f4113adf2bd8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 53, "endColumn": 54 } } } ] }, { "ruleId": "MISRA2004-19_10", "level": "warning", "message": { "text": "Each instance of parameter: 'func' should be enclosed in parentheses", "markdown": "**\\[Line 45\\] Each instance of parameter: 'func' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "bd500d0c-9609-3652-8992-51708305c070" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 65, "endColumn": 66 } } } ] }, { "ruleId": "MISRA2008-16_0_6", "level": "error", "message": { "text": "Each instance of parameter: 'func' should be enclosed in parentheses", "markdown": "**\\[Line 45\\] Each instance of parameter: 'func' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "8e3b7357-87a4-36ee-abb6-37817444f67d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 65, "endColumn": 66 } } } ] }, { "ruleId": "MISRA2012-RULE-20_7", "level": "error", "message": { "text": "Each instance of parameter: 'func' should be enclosed in parentheses", "markdown": "**\\[Line 45\\] Each instance of parameter: 'func' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "dcb94348-b815-37a1-a74e-c9cb8848d548" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 65, "endColumn": 66 } } } ] }, { "ruleId": "AUTOSAR-M16_0_6-a", "level": "error", "message": { "text": "Each instance of parameter: 'func' should be enclosed in parentheses", "markdown": "**\\[Line 45\\] Each instance of parameter: 'func' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "cd552e6d-1dd3-345e-bd2d-af556970514b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 65, "endColumn": 66 } } } ] }, { "ruleId": "CERT_C-PRE01-a", "level": "error", "message": { "text": "Each instance of parameter: 'func' should be enclosed in parentheses", "markdown": "**\\[Line 45\\] Each instance of parameter: 'func' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "4058a8b6-75fd-380d-b16f-1120be73c687" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 65, "endColumn": 66 } } } ] }, { "ruleId": "MISRAC2012-RULE_20_7-a", "level": "error", "message": { "text": "Each instance of parameter: 'func' should be enclosed in parentheses", "markdown": "**\\[Line 45\\] Each instance of parameter: 'func' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1763822430", "unbViolId": "812d6c5b-c96d-3a00-ad25-a7c613dadc8b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 45, "startColumn": 65, "endColumn": 66 } } } ] }, { "ruleId": "JSF-031", "level": "warning", "message": { "text": "Do not use the macro definition 'LOCK'", "markdown": "**\\[Line 47\\] Do not use the macro definition 'LOCK'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "810266428", "unbViolId": "ab108dd5-6414-3ca8-b90d-635b8f8f71c6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 47, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_a", "level": "error", "message": { "text": "Do not use the macro definition 'LOCK'", "markdown": "**\\[Line 47\\] Do not use the macro definition 'LOCK'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "810266428", "unbViolId": "c72c18f1-d314-3994-9976-c03d62fec973" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 47, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-a", "level": "warning", "message": { "text": "Do not use the macro definition 'LOCK'", "markdown": "**\\[Line 47\\] Do not use the macro definition 'LOCK'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "810266428", "unbViolId": "6659e759-733a-3d4e-99ce-761a46f8a1de" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 47, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-01", "level": "warning", "message": { "text": "Do not use the macro definition 'LOCK'", "markdown": "**\\[Line 47\\] Do not use the macro definition 'LOCK'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "810266428", "unbViolId": "bdd00b43-0f60-3563-bf6a-42c06e4c4841" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 47, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A16_0_1-d", "level": "error", "message": { "text": "Do not use the macro definition 'LOCK'", "markdown": "**\\[Line 47\\] Do not use the macro definition 'LOCK'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "810266428", "unbViolId": "40e6cca5-2dc8-3680-815d-8186a92b3e91" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 47, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_2", "level": "error", "message": { "text": "Do not use #define to define constant: 'LOCK'", "markdown": "**\\[Line 47\\] Do not use \\#define to define constant: 'LOCK'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "810266428", "unbViolId": "b1805a73-6874-3205-b4cb-e73031a53379" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 47, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-12", "level": "warning", "message": { "text": "Do not use #define to define constant: 'LOCK'", "markdown": "**\\[Line 47\\] Do not use \\#define to define constant: 'LOCK'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "810266428", "unbViolId": "6dfe7695-3169-38f5-a521-9bde14fef635" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 47, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-14", "level": "warning", "message": { "text": "Not all body of macro 'LOCK' is enclosed in braces", "markdown": "**\\[Line 47\\] Not all body of macro 'LOCK' is enclosed in braces**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "810266428", "unbViolId": "84ec684a-5ea6-30bf-bf98-b289cd7a7713" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 47, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_0_4", "level": "error", "message": { "text": "Do not define function-like macro: LOCK_ACQUIRE", "markdown": "**\\[Line 48\\] Do not define function\\-like macro: LOCK\\_ACQUIRE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "7b1e3edb-0159-316c-bac1-833b251855d8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_9-a", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_ACQUIRE", "markdown": "**\\[Line 48\\] Do not define function\\-like macro: LOCK\\_ACQUIRE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "d59c6ca8-8d24-37be-82ab-ac344a128fc4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-19_7", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_ACQUIRE", "markdown": "**\\[Line 48\\] Do not define function\\-like macro: LOCK\\_ACQUIRE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "3e79ad0c-af73-3dc8-b0d2-c055a37e15de" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-029", "level": "error", "message": { "text": "Do not define function-like macro: LOCK_ACQUIRE", "markdown": "**\\[Line 48\\] Do not define function\\-like macro: LOCK\\_ACQUIRE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "9335c8c8-c6bb-378e-baaf-e9fff30a9ed9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2012-DIR-4_9", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_ACQUIRE", "markdown": "**\\[Line 48\\] Do not define function\\-like macro: LOCK\\_ACQUIRE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "cae15b7f-0c3f-3867-8220-6c8f5d7d4d4f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CERT_C-PRE00-a", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_ACQUIRE", "markdown": "**\\[Line 48\\] Do not define function\\-like macro: LOCK\\_ACQUIRE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "a2a59dcc-0b45-3d37-aa06-67529830bc80" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA-096", "level": "warning", "message": { "text": "Body of macro 'LOCK_ACQUIRE' is defined without parentheses", "markdown": "**\\[Line 48\\] Body of macro 'LOCK\\_ACQUIRE' is defined without parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "9df6709a-91a3-3487-a52d-c44fb0782492" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CERT_C-PRE02-a", "level": "error", "message": { "text": "Body of macro 'LOCK_ACQUIRE' is defined without parentheses", "markdown": "**\\[Line 48\\] Body of macro 'LOCK\\_ACQUIRE' is defined without parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "5dc77046-9b2c-3f1c-9a46-6e3ff65dbce2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-031", "level": "warning", "message": { "text": "Do not use the macro definition 'LOCK_ACQUIRE'", "markdown": "**\\[Line 48\\] Do not use the macro definition 'LOCK\\_ACQUIRE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "00bd93d4-e37d-3f7b-a2fc-57980a3a7b6a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_a", "level": "error", "message": { "text": "Do not use the macro definition 'LOCK_ACQUIRE'", "markdown": "**\\[Line 48\\] Do not use the macro definition 'LOCK\\_ACQUIRE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "e5b3d403-5b74-38ae-b611-f1cf0fcf9659" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-a", "level": "warning", "message": { "text": "Do not use the macro definition 'LOCK_ACQUIRE'", "markdown": "**\\[Line 48\\] Do not use the macro definition 'LOCK\\_ACQUIRE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "4a8c8220-bee4-3431-b5c3-22cf1829aca9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-01", "level": "warning", "message": { "text": "Do not use the macro definition 'LOCK_ACQUIRE'", "markdown": "**\\[Line 48\\] Do not use the macro definition 'LOCK\\_ACQUIRE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "2d953774-f325-3f1b-a543-a6d4e0663158" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A16_0_1-d", "level": "error", "message": { "text": "Do not use the macro definition 'LOCK_ACQUIRE'", "markdown": "**\\[Line 48\\] Do not use the macro definition 'LOCK\\_ACQUIRE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "2f5e937c-dbca-3c95-b4a0-4a7025e7eff9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_2", "level": "error", "message": { "text": "Do not define function-like macro: LOCK_ACQUIRE", "markdown": "**\\[Line 48\\] Do not define function\\-like macro: LOCK\\_ACQUIRE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "f9106735-cd12-35ee-99bc-49ffd612a97b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-12", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_ACQUIRE", "markdown": "**\\[Line 48\\] Do not define function\\-like macro: LOCK\\_ACQUIRE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "fe2037c6-686c-368a-85aa-736f225a13fb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-14", "level": "warning", "message": { "text": "Not all body of macro 'LOCK_ACQUIRE' is enclosed in braces", "markdown": "**\\[Line 48\\] Not all body of macro 'LOCK\\_ACQUIRE' is enclosed in braces**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "f7a003fc-d185-3f87-b172-cf30e4695f36" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-19_10", "level": "warning", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 48\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "4ecbec94-9f82-31a4-9fac-320138f68dd1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 48, "endColumn": 49 } } } ] }, { "ruleId": "MISRA2008-16_0_6", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 48\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "9ec09bdd-d020-390c-948b-e5969607fa45" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 48, "endColumn": 49 } } } ] }, { "ruleId": "MISRA2012-RULE-20_7", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 48\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "8503f11c-26fe-33ce-af8e-2ff87c79bd45" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 48, "endColumn": 49 } } } ] }, { "ruleId": "AUTOSAR-M16_0_6-a", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 48\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "d930a0b8-02af-3d7c-8bd7-25c2fd8e35f6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 48, "endColumn": 49 } } } ] }, { "ruleId": "CERT_C-PRE01-a", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 48\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "29699669-6512-3fea-9df0-3a1d7fba845a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 48, "endColumn": 49 } } } ] }, { "ruleId": "MISRAC2012-RULE_20_7-a", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 48\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "865954250", "unbViolId": "9bebdd95-0393-3222-8e32-10531ee12b97" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 48, "startColumn": 48, "endColumn": 49 } } } ] }, { "ruleId": "MISRA2008-16_0_4", "level": "error", "message": { "text": "Do not define function-like macro: LOCK_RELEASE", "markdown": "**\\[Line 49\\] Do not define function\\-like macro: LOCK\\_RELEASE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "a4fc44c9-1ce3-3c7b-a871-ba710a590344" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_9-a", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_RELEASE", "markdown": "**\\[Line 49\\] Do not define function\\-like macro: LOCK\\_RELEASE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "6563e8f4-4426-3b06-8098-ad8376946210" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-19_7", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_RELEASE", "markdown": "**\\[Line 49\\] Do not define function\\-like macro: LOCK\\_RELEASE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "07d65f1f-70fc-3be9-b1e8-221dcb2bd9c6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-029", "level": "error", "message": { "text": "Do not define function-like macro: LOCK_RELEASE", "markdown": "**\\[Line 49\\] Do not define function\\-like macro: LOCK\\_RELEASE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "7cb82109-111a-3f53-a8d3-ef48ce5c2d02" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2012-DIR-4_9", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_RELEASE", "markdown": "**\\[Line 49\\] Do not define function\\-like macro: LOCK\\_RELEASE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "c7b0874f-bd32-30d7-b2ca-b911573479c9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CERT_C-PRE00-a", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_RELEASE", "markdown": "**\\[Line 49\\] Do not define function\\-like macro: LOCK\\_RELEASE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "6dfef6d8-dcfa-366a-8634-ed1e043b6949" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA-096", "level": "warning", "message": { "text": "Body of macro 'LOCK_RELEASE' is defined without parentheses", "markdown": "**\\[Line 49\\] Body of macro 'LOCK\\_RELEASE' is defined without parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "ca3ffe80-37df-3d46-8bb4-205b620c2c79" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CERT_C-PRE02-a", "level": "error", "message": { "text": "Body of macro 'LOCK_RELEASE' is defined without parentheses", "markdown": "**\\[Line 49\\] Body of macro 'LOCK\\_RELEASE' is defined without parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "18203bde-08a2-343f-b007-7a37fdd512ab" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-031", "level": "warning", "message": { "text": "Do not use the macro definition 'LOCK_RELEASE'", "markdown": "**\\[Line 49\\] Do not use the macro definition 'LOCK\\_RELEASE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "3fe0ad2e-66fe-31a3-8e63-1d5dca8b4892" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_a", "level": "error", "message": { "text": "Do not use the macro definition 'LOCK_RELEASE'", "markdown": "**\\[Line 49\\] Do not use the macro definition 'LOCK\\_RELEASE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "1f9fe037-883c-3e87-96c7-f5ae2db488b0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-a", "level": "warning", "message": { "text": "Do not use the macro definition 'LOCK_RELEASE'", "markdown": "**\\[Line 49\\] Do not use the macro definition 'LOCK\\_RELEASE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "911c525d-0891-344f-9e7a-9fd6724f29cd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-01", "level": "warning", "message": { "text": "Do not use the macro definition 'LOCK_RELEASE'", "markdown": "**\\[Line 49\\] Do not use the macro definition 'LOCK\\_RELEASE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "f9cbe9c5-d67b-3fc1-a286-f45c5ca0e3c4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A16_0_1-d", "level": "error", "message": { "text": "Do not use the macro definition 'LOCK_RELEASE'", "markdown": "**\\[Line 49\\] Do not use the macro definition 'LOCK\\_RELEASE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "035fa2bb-172c-3b54-a950-84234685993c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_2", "level": "error", "message": { "text": "Do not define function-like macro: LOCK_RELEASE", "markdown": "**\\[Line 49\\] Do not define function\\-like macro: LOCK\\_RELEASE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "f2df6ab8-c665-30d9-a243-31efb3fa7d1f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-12", "level": "warning", "message": { "text": "Do not define function-like macro: LOCK_RELEASE", "markdown": "**\\[Line 49\\] Do not define function\\-like macro: LOCK\\_RELEASE**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "220cff91-959d-3b2f-9250-d6b77c4937d5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-14", "level": "warning", "message": { "text": "Not all body of macro 'LOCK_RELEASE' is enclosed in braces", "markdown": "**\\[Line 49\\] Not all body of macro 'LOCK\\_RELEASE' is enclosed in braces**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "4b341986-7894-303f-b80a-d2b1f1997cfe" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-19_10", "level": "warning", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 49\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "4a9b9af5-31a0-3ba9-8968-a99a91f8265d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "MISRA2008-16_0_6", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 49\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "af34f548-c3be-37ba-ae4a-fb78724ba759" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "MISRA2012-RULE-20_7", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 49\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "ebd1248a-ae74-3e86-bbe8-4aae22e8aa71" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "AUTOSAR-M16_0_6-a", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 49\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "53ab7b26-c80b-3cf4-a644-d6d67949a914" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "CERT_C-PRE01-a", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 49\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "4de7f4b4-7900-3ad6-9a2b-73f66b0948a7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "MISRAC2012-RULE_20_7-a", "level": "error", "message": { "text": "Each instance of parameter: 'lock' should be enclosed in parentheses", "markdown": "**\\[Line 49\\] Each instance of parameter: 'lock' should be enclosed in parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1510788286", "unbViolId": "61ede0f7-b440-3945-ac2a-ea930031afb4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 49, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "MISRA2008-16_0_4", "level": "error", "message": { "text": "Do not define function-like macro: SLEEP", "markdown": "**\\[Line 51\\] Do not define function\\-like macro: SLEEP**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541803970", "unbViolId": "75000a90-a267-351b-a513-409118597ffa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 51, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_9-a", "level": "warning", "message": { "text": "Do not define function-like macro: SLEEP", "markdown": "**\\[Line 51\\] Do not define function\\-like macro: SLEEP**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541803970", "unbViolId": "39c9e219-bd5f-3eb0-997c-9bae016f3fdd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 51, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-19_7", "level": "warning", "message": { "text": "Do not define function-like macro: SLEEP", "markdown": "**\\[Line 51\\] Do not define function\\-like macro: SLEEP**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541803970", "unbViolId": "582e711f-5929-3ee1-8c39-8097b2283bc2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 51, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-029", "level": "error", "message": { "text": "Do not define function-like macro: SLEEP", "markdown": "**\\[Line 51\\] Do not define function\\-like macro: SLEEP**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541803970", "unbViolId": "86bcb480-b2b9-33c4-a962-c688cdc88098" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 51, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2012-DIR-4_9", "level": "warning", "message": { "text": "Do not define function-like macro: SLEEP", "markdown": "**\\[Line 51\\] Do not define function\\-like macro: SLEEP**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541803970", "unbViolId": "ecdb5497-6537-387c-be0b-7b640c26d6cd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 51, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CERT_C-PRE00-a", "level": "warning", "message": { "text": "Do not define function-like macro: SLEEP", "markdown": "**\\[Line 51\\] Do not define function\\-like macro: SLEEP**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541803970", "unbViolId": "1e21e075-c48a-382c-9c3d-870952fa0021" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 51, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA-096", "level": "warning", "message": { "text": "Body of macro 'SLEEP' is defined without parentheses", "markdown": "**\\[Line 51\\] Body of macro 'SLEEP' is defined without parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541803970", "unbViolId": "b49e54e8-0663-3606-84f5-9596fc436790" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 51, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CERT_C-PRE02-a", "level": "error", "message": { "text": "Body of macro 'SLEEP' is defined without parentheses", "markdown": "**\\[Line 51\\] Body of macro 'SLEEP' is defined without parentheses**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541803970", "unbViolId": "2f47e9c2-c5c2-36e7-96c4-b669209652df" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 51, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-031", "level": "warning", "message": { "text": "Do not use the macro definition 'SLEEP'", "markdown": "**\\[Line 51\\] Do not use the macro definition 'SLEEP'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541803970", "unbViolId": "1404a7a6-d562-3966-8589-ec976fc2e61e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 51, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_a", "level": "error", "message": { "text": "Do not use the macro definition 'SLEEP'", "markdown": "**\\[Line 51\\] Do not use the macro definition 'SLEEP'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541803970", "unbViolId": "03dedb3a-2df9-322f-8e02-213d9565214f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 51, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-a", "level": "warning", "message": { "text": "Do not use the macro definition 'SLEEP'", "markdown": "**\\[Line 51\\] Do not use the macro definition 'SLEEP'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541803970", "unbViolId": "87110de7-cf58-3b1a-bf89-28a8c7846008" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 51, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-01", "level": "warning", "message": { "text": "Do not use the macro definition 'SLEEP'", "markdown": "**\\[Line 51\\] Do not use the macro definition 'SLEEP'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541803970", "unbViolId": "aed8a745-e6fe-378c-8629-da34a6d10cc6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 51, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A16_0_1-d", "level": "error", "message": { "text": "Do not use the macro definition 'SLEEP'", "markdown": "**\\[Line 51\\] Do not use the macro definition 'SLEEP'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541803970", "unbViolId": "281c3ccf-47c5-36ce-9d6f-337ec9590b4c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 51, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_2", "level": "error", "message": { "text": "Do not define function-like macro: SLEEP", "markdown": "**\\[Line 51\\] Do not define function\\-like macro: SLEEP**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541803970", "unbViolId": "2133a2c6-188b-3a53-84a2-23d26d849f20" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 51, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-12", "level": "warning", "message": { "text": "Do not define function-like macro: SLEEP", "markdown": "**\\[Line 51\\] Do not define function\\-like macro: SLEEP**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541803970", "unbViolId": "7e75bf70-87d5-32cf-8aaf-fecde4d7dee4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 51, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-14", "level": "warning", "message": { "text": "Not all body of macro 'SLEEP' is enclosed in braces", "markdown": "**\\[Line 51\\] Not all body of macro 'SLEEP' is enclosed in braces**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541803970", "unbViolId": "f5302603-f126-3bd3-ba4d-1a066db3236a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 51, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-10_b", "level": "warning", "message": { "text": "#endif pre-processor directive should not be used", "markdown": "**\\[Line 53\\] \\#endif pre\\-processor directive should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1098672373", "unbViolId": "abbc4a2a-949f-3afd-9821-1f14af7bbeb8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 53, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_d", "level": "error", "message": { "text": "#endif pre-processor directive should not be used", "markdown": "**\\[Line 53\\] \\#endif pre\\-processor directive should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1098672373", "unbViolId": "b3e11f53-1ff8-385f-bd73-c985e04f9fde" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 53, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-028_b", "level": "warning", "message": { "text": "#endif pre-processor directive should not be used", "markdown": "**\\[Line 53\\] \\#endif pre\\-processor directive should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1098672373", "unbViolId": "fb7cee9b-3e8d-3f84-a257-421a4d8076e6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 53, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-e", "level": "warning", "message": { "text": "#endif pre-processor directive should not be used", "markdown": "**\\[Line 53\\] \\#endif pre\\-processor directive should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1098672373", "unbViolId": "cc157e05-8b13-36a4-94b6-16bfb940fefc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 53, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CODSTA-37", "level": "warning", "message": { "text": "Replace the 'MAX_OBJECTS' macro with a constant variable", "markdown": "**\\[Line 55\\] Replace the 'MAX\\_OBJECTS' macro with a constant variable**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "941979080", "unbViolId": "cd72786f-5281-3e3c-8c3a-85e2e0857bac" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 55, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-030", "level": "error", "message": { "text": "Define constant 'MAX_OBJECTS' using 'const' or 'enum' instead of '#define'", "markdown": "**\\[Line 55\\] Define constant 'MAX\\_OBJECTS' using 'const' or 'enum' instead of '\\#define'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "941979080", "unbViolId": "7444641f-a792-3c73-8169-3e7acfab3bbb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 55, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CODSTA-03", "level": "warning", "message": { "text": "Define constant 'MAX_OBJECTS' using 'const' or 'enum' instead of '#define'", "markdown": "**\\[Line 55\\] Define constant 'MAX\\_OBJECTS' using 'const' or 'enum' instead of '\\#define'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "941979080", "unbViolId": "f5a3fdeb-f141-3e56-9cf3-e8b307dfc41d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 55, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-031", "level": "warning", "message": { "text": "Do not use the macro definition 'MAX_OBJECTS'", "markdown": "**\\[Line 55\\] Do not use the macro definition 'MAX\\_OBJECTS'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "941979080", "unbViolId": "626329cc-c563-3963-8f56-58f2e2c9f111" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 55, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_a", "level": "error", "message": { "text": "Do not use the macro definition 'MAX_OBJECTS'", "markdown": "**\\[Line 55\\] Do not use the macro definition 'MAX\\_OBJECTS'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "941979080", "unbViolId": "891c5870-507b-3571-8fc0-f6a03702fe2b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 55, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-a", "level": "warning", "message": { "text": "Do not use the macro definition 'MAX_OBJECTS'", "markdown": "**\\[Line 55\\] Do not use the macro definition 'MAX\\_OBJECTS'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "941979080", "unbViolId": "055400d1-82ff-3422-b683-54b056e6dce7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 55, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-01", "level": "warning", "message": { "text": "Do not use the macro definition 'MAX_OBJECTS'", "markdown": "**\\[Line 55\\] Do not use the macro definition 'MAX\\_OBJECTS'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "941979080", "unbViolId": "b25c4925-3108-35b7-a9c1-92ffd10d0c86" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 55, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A16_0_1-d", "level": "error", "message": { "text": "Do not use the macro definition 'MAX_OBJECTS'", "markdown": "**\\[Line 55\\] Do not use the macro definition 'MAX\\_OBJECTS'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "941979080", "unbViolId": "a893b577-6369-31ee-a518-fe238c1740ba" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 55, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_2", "level": "error", "message": { "text": "Do not use #define to define constant: 'MAX_OBJECTS'", "markdown": "**\\[Line 55\\] Do not use \\#define to define constant: 'MAX\\_OBJECTS'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "941979080", "unbViolId": "9af32f72-8856-3ea2-9b98-760fbc7f7051" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 55, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-12", "level": "warning", "message": { "text": "Do not use #define to define constant: 'MAX_OBJECTS'", "markdown": "**\\[Line 55\\] Do not use \\#define to define constant: 'MAX\\_OBJECTS'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "941979080", "unbViolId": "1ee754a9-7d2d-3d32-bf7c-c4c837466281" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 55, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-030", "level": "error", "message": { "text": "Define constant 'STEP' using 'const' or 'enum' instead of '#define'", "markdown": "**\\[Line 56\\] Define constant 'STEP' using 'const' or 'enum' instead of '\\#define'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-326464112", "unbViolId": "366d2feb-365e-38eb-9463-0c19496bb7a2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 56, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CODSTA-03", "level": "warning", "message": { "text": "Define constant 'STEP' using 'const' or 'enum' instead of '#define'", "markdown": "**\\[Line 56\\] Define constant 'STEP' using 'const' or 'enum' instead of '\\#define'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-326464112", "unbViolId": "96d89b65-17eb-3788-8f52-25bcbf791086" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 56, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-031", "level": "warning", "message": { "text": "Do not use the macro definition 'STEP'", "markdown": "**\\[Line 56\\] Do not use the macro definition 'STEP'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-326464112", "unbViolId": "a978adc0-90b9-368c-97f4-b9cfba0af833" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 56, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_1_a", "level": "error", "message": { "text": "Do not use the macro definition 'STEP'", "markdown": "**\\[Line 56\\] Do not use the macro definition 'STEP'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-326464112", "unbViolId": "e735a599-322d-3fc4-a413-248ba74d4d9b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 56, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-16_1_1-a", "level": "warning", "message": { "text": "Do not use the macro definition 'STEP'", "markdown": "**\\[Line 56\\] Do not use the macro definition 'STEP'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-326464112", "unbViolId": "4387d7e3-a64b-3f8d-bb4b-e217a8fac4b4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 56, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-01", "level": "warning", "message": { "text": "Do not use the macro definition 'STEP'", "markdown": "**\\[Line 56\\] Do not use the macro definition 'STEP'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-326464112", "unbViolId": "fe06b885-94d7-30f7-a4f8-1d2aee4138ee" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 56, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A16_0_1-d", "level": "error", "message": { "text": "Do not use the macro definition 'STEP'", "markdown": "**\\[Line 56\\] Do not use the macro definition 'STEP'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-326464112", "unbViolId": "6a610aff-02f0-3981-8100-7a8f03071daf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 56, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-16_2_2", "level": "error", "message": { "text": "Do not use #define to define constant: 'STEP'", "markdown": "**\\[Line 56\\] Do not use \\#define to define constant: 'STEP'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-326464112", "unbViolId": "255ded93-fe00-3e4b-ac5d-919576c9a13b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 56, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-12", "level": "warning", "message": { "text": "Do not use #define to define constant: 'STEP'", "markdown": "**\\[Line 56\\] Do not use \\#define to define constant: 'STEP'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-326464112", "unbViolId": "6488122e-82b8-3bc5-9cea-353c39a2dd77" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 56, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CODSTA-37", "level": "warning", "message": { "text": "Replace the 'STEP' macro with a constant variable", "markdown": "**\\[Line 56\\] Replace the 'STEP' macro with a constant variable**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-326464112", "unbViolId": "38ee21fe-3c3e-3d38-bf80-1e7b466e8bfb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 56, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'assertion' function is not preceded by a comment", "markdown": "**\\[Line 58\\] The definition of the 'assertion' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "c28679f0-6852-3885-b9bb-9237c60ce9a8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'assertion' function is not preceded by a comment", "markdown": "**\\[Line 58\\] The definition of the 'assertion' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "5bef2fa7-b9e8-3856-90ee-76154e8e400f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "OWASP2019-API9-e", "level": "warning", "message": { "text": "Function 'assertion' has external linkage and is not declared in the header", "markdown": "**\\[Line 58\\] Function 'assertion' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "91817c97-82d7-3834-8242-9bfb61e3c20a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-A3_3_1-a", "level": "error", "message": { "text": "Function 'assertion' has external linkage and is not declared in the header", "markdown": "**\\[Line 58\\] Function 'assertion' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "1766ad49-f315-398d-89ae-2f5a74d6e7ed" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "JSF-137", "level": "warning", "message": { "text": "Function 'assertion' has external linkage and is not declared in the header", "markdown": "**\\[Line 58\\] Function 'assertion' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "ffdc1782-6a15-3647-8fb3-7c18e81330fd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA-023", "level": "warning", "message": { "text": "Function 'assertion' has external linkage and is not declared in the header", "markdown": "**\\[Line 58\\] Function 'assertion' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "6d58e34e-124b-319f-a5eb-713561e23b4d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA2008-3_3_1", "level": "error", "message": { "text": "Function 'assertion' has external linkage and is not declared in the header", "markdown": "**\\[Line 58\\] Function 'assertion' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "b511b035-6831-30e7-ae71-2b663ab6841d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "CERT_C-DCL15-a", "level": "warning", "message": { "text": "Function 'assertion' has external linkage and is not declared in the header", "markdown": "**\\[Line 58\\] Function 'assertion' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "3aeb41c1-10c4-36cd-82e2-9d3c7aebd2d3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA2004-8_10", "level": "warning", "message": { "text": "Function 'assertion' has external linkage and is not declared in the header", "markdown": "**\\[Line 58\\] Function 'assertion' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "480ebd18-ecba-3377-8c76-63973d184679" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "JSF-098", "level": "warning", "message": { "text": "Do not declare the 'assertion' function in the global namespace", "markdown": "**\\[Line 58\\] Do not declare the 'assertion' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "46932a58-6cff-33b8-a098-04ce1d20d39a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-M7_3_1-a", "level": "error", "message": { "text": "Do not declare the 'assertion' function in the global namespace", "markdown": "**\\[Line 58\\] Do not declare the 'assertion' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "378f5525-d147-3a55-8eed-75da7aee59f6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "CODSTA-CPP-36", "level": "warning", "message": { "text": "Do not declare the 'assertion' function in the global namespace", "markdown": "**\\[Line 58\\] Do not declare the 'assertion' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "d2b37352-1117-3e19-9e5b-d1d8bc907485" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA2008-7_3_1", "level": "error", "message": { "text": "Do not declare the 'assertion' function in the global namespace", "markdown": "**\\[Line 58\\] Do not declare the 'assertion' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "fc7112f6-da36-3817-8b3a-65c5c82879d0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'assertion' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 58\\] The 'assertion' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "b155801b-5597-363b-9b97-b369d24c03f0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'assertion' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 58\\] The 'assertion' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "6c323bcd-a94a-339e-ae5e-1e6b628b0559" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'condition' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 58\\] The 'condition' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "3bfa43fd-d330-3df5-add9-e3ffce35f5b2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'condition' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 58\\] The 'condition' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "b60b966d-d570-3020-b475-00898cd805c4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'message' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 58\\] The 'message' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "f49461f7-cf82-3c30-8e8e-6f3667db443b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'message' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 58\\] The 'message' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "61272bae-06f1-3d47-b7c4-04b62601d7ed" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "FORMAT-28", "level": "warning", "message": { "text": "Return type is not placed in line before function 'assertion'", "markdown": "**\\[Line 58\\] Return type is not placed in line before function 'assertion'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "a74646b0-0d53-3093-a254-63c681b2e1ca" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'assertion' has Cyclomatic Complexity value: 2", "markdown": "**\\[Line 58\\] Function 'assertion' has Cyclomatic Complexity value: 2**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "3c7928ea-26ec-3262-a015-8504523f431c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'assertion' has Essential Complexity value: 1", "markdown": "**\\[Line 58\\] Function 'assertion' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "35c053a4-7ac8-3d86-a4f1-a5ff3edf467c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "NAMING-17", "level": "warning", "message": { "text": "Naming convention not followed: assertion", "markdown": "**\\[Line 58\\] Naming convention not followed: assertion**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "4a73985c-2975-3ed1-afac-00f3e15e3970" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 58\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "c5426621-8359-3810-861b-9e4f9bc8f3ed" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 16, "endColumn": 17 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 58\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "2b8d3196-d534-3203-88a1-a0306ed2234b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 16, "endColumn": 17 } } } ] }, { "ruleId": "CODSTA-223", "level": "warning", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 58\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "f3cc8efe-4d6f-37b6-9429-3b16178ea6cb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 16, "endColumn": 17 } } } ] }, { "ruleId": "AUTOSAR-A3_9_1-b", "level": "error", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 58\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "08a72c55-1da4-3324-8efd-dc0a71a1e7ce" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 16, "endColumn": 17 } } } ] }, { "ruleId": "HICPP-7_1_6-b", "level": "warning", "message": { "text": "Do not use the 'int' standard integer type", "markdown": "**\\[Line 58\\] Do not use the 'int' standard integer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "2ae5ec15-b534-30b8-8e2f-a02b2da7754e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 16, "endColumn": 17 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 58\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "99982eac-9a57-3297-a503-deec314a3678" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 16, "endColumn": 17 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 58\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "93ed7e1e-87d6-3449-8306-d257e3852282" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 16, "endColumn": 17 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 58\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "89e173a5-6d35-385e-90c8-1ba05342ea04" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 16, "endColumn": 17 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 58\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "ba2b815b-cd54-367d-a9ed-9f6365a3c06e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 16, "endColumn": 17 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 58\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "227a8361-5db8-3fb7-8b6d-ad96a2c56990" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 16, "endColumn": 17 } } } ] }, { "ruleId": "PORT-13", "level": "warning", "message": { "text": "'condition' shall be declared as unsigned int or signed int", "markdown": "**\\[Line 58\\] 'condition' shall be declared as unsigned int or signed int**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "a70fab82-8a37-33fd-bba6-8d6511ea9212" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "NAMING-HN-22", "level": "warning", "message": { "text": "The 'condition' identifier should have the 'i' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 58\\] The 'condition' identifier should have the 'i' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "404901c7-b3d4-39f8-927b-528061fc5b77" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "NAMING-HN-30", "level": "warning", "message": { "text": "The 'condition' identifier should have the 'n' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 58\\] The 'condition' identifier should have the 'n' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "0384b2f4-1ff1-323f-8b89-a1ac10546f72" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "NAMING-HN-43", "level": "warning", "message": { "text": "The 'condition' identifier should have the 'i' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 58\\] The 'condition' identifier should have the 'i' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "1e0bf590-6304-338b-b3cc-9ae5bbb2914c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "FORMAT-47_a", "level": "warning", "message": { "text": "The 'const' qualifier should be placed on the right hand side of the type", "markdown": "**\\[Line 58\\] The 'const' qualifier should be placed on the right hand side of the type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "ec62263e-0bfa-3f23-9165-6490447abdea" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "HICPP-7_1_4-a", "level": "warning", "message": { "text": "The 'const' qualifier should be placed on the right hand side of the type", "markdown": "**\\[Line 58\\] The 'const' qualifier should be placed on the right hand side of the type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "3c921409-4d07-33dc-99e6-499d45e8cbbd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'char' should not be used", "markdown": "**\\[Line 58\\] The basic numerical type 'char' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "4dab25eb-de2e-35f0-9433-aba8b2bcdaa0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 37, "endColumn": 38 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'char' should not be used", "markdown": "**\\[Line 58\\] The basic numerical type 'char' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "dc21574e-7059-3ad1-9958-1ee01fac8863" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 37, "endColumn": 38 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The parameter of pointer or array type is declared: message", "markdown": "**\\[Line 58\\] The parameter of pointer or array type is declared: message**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "47ee5345-6a9e-32f0-bd96-7ff3538fac20" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The parameter of pointer type is declared: message", "markdown": "**\\[Line 58\\] The parameter of pointer type is declared: message**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "77c50ddb-ac66-3a38-89e3-2d3bceafbdb6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "CERT_C-API00-a", "level": "warning", "message": { "text": "Parameter 'message' is not validated before use", "markdown": "**\\[Line 58\\] Parameter 'message' is not validated before use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "fab6ffef-5a0a-3c37-8ee2-819e440bcbc3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "CODSTA-86", "level": "warning", "message": { "text": "Parameter 'message' is not validated before use", "markdown": "**\\[Line 58\\] Parameter 'message' is not validated before use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "b924f115-91a7-356f-bcd3-8e50dd0f7cae" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "NAMING-HN-05", "level": "warning", "message": { "text": "The 'message' identifier should have the 'c' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 58\\] The 'message' identifier should have the 'c' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "e5fb1955-5037-3a82-8c99-dd5d05236c33" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "NAMING-HN-09", "level": "warning", "message": { "text": "The 'message' identifier should have the 'c' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 58\\] The 'message' identifier should have the 'c' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "ed15cea7-c63b-376a-866b-7d1570dc46c9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "NAMING-HN-10", "level": "warning", "message": { "text": "The 'message' identifier should have the 'c' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 58\\] The 'message' identifier should have the 'c' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "f1259e86-8fe6-38eb-9bed-53b037cbc0ee" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "NAMING-HN-34", "level": "warning", "message": { "text": "The 'message' identifier should have the 'p' prefix", "markdown": "**\\[Line 58\\] The 'message' identifier should have the 'p' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1429237719", "unbViolId": "85260181-e952-33c9-bdfd-49dbdc63f6a0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 58, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "METRICS-19", "level": "warning", "message": { "text": "Percentage of comment lines vs. all method's lines is: 0", "markdown": "**\\[Line 59\\] Percentage of comment lines vs\\. all method's lines is: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "123", "unbViolId": "844fa429-8476-3947-a9e8-4159e1657d7e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 59, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 60\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-600547524", "unbViolId": "5f55b8ec-70d3-320c-b959-e920f483c4e3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 60\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-600547524", "unbViolId": "e33c5fcf-f7d1-3f42-9980-b718c4725e1b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 60\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-600547524", "unbViolId": "06bd9b78-e5ce-3eb8-9468-e036650dcf34" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-43", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 60\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-600547524", "unbViolId": "e0a159a4-5518-3f25-8512-3d61409ba2f8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_b", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 60\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-600547524", "unbViolId": "2c516c54-20cf-3337-a44b-4c49e6a0dc7e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-02", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 60\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-600547524", "unbViolId": "3d2cb6ce-7ddc-38f2-981c-c1c9f94a47ab" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 60\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-600547524", "unbViolId": "762b30aa-6598-303e-8197-276d2ccad0cf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 60\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-600547524", "unbViolId": "e4902a83-f64c-375e-b894-2e43977d162f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 60\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-600547524", "unbViolId": "7d8107e9-74e5-3867-9d64-6e62f14fd359" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CODSTA-23", "level": "warning", "message": { "text": "The 'if' statement doesn't have an 'else' clause", "markdown": "**\\[Line 60\\] The 'if' statement doesn't have an 'else' clause**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-600547524", "unbViolId": "ddce8fcb-7951-3d36-bc23-1c361384c1d3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "AUTOSAR-M5_3_1-a", "level": "error", "message": { "text": "The operand of logical operator '!' has 'int' type instead of 'bool' type", "markdown": "**\\[Line 60\\] The operand of logical operator '\\!' has 'int' type instead of 'bool' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-600547524", "unbViolId": "b90815ef-8d64-33c3-8260-e71d3eb10713" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "CODSTA-CPP-67", "level": "warning", "message": { "text": "The operand of logical operator '!' has 'int' type instead of 'bool' type", "markdown": "**\\[Line 60\\] The operand of logical operator '\\!' has 'int' type instead of 'bool' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-600547524", "unbViolId": "5047db38-f4b2-3ddd-8089-1e9b8538c0f1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA2008-5_3_1", "level": "error", "message": { "text": "The operand of logical operator '!' has 'int' type instead of 'bool' type", "markdown": "**\\[Line 60\\] The operand of logical operator '\\!' has 'int' type instead of 'bool' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-600547524", "unbViolId": "24a1e5f0-ff2d-33b6-b71c-b504b67a63d2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "CODSTA-46", "level": "note", "message": { "text": "In 'assertion' function use positive logic rather than negative logic whenever possible", "markdown": "**\\[Line 60\\] In 'assertion' function use positive logic rather than negative logic whenever possible**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-600547524", "unbViolId": "66ea4e64-e6c7-3525-b610-4d09fe780789" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA2004-12_6_a", "level": "warning", "message": { "text": "The operand of logical operator '!' is not 'effectively Boolean'", "markdown": "**\\[Line 60\\] The operand of logical operator '\\!' is not 'effectively Boolean'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-600547524", "unbViolId": "fc4f6295-15bb-3326-ae77-6e9b159fb6a2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 61\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1274881582", "unbViolId": "014592b1-4069-3d9d-bbd2-31eeb9bbdb29" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 61, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 61\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1274881582", "unbViolId": "669e0fe8-da91-34e3-b95e-c517695c4174" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 61, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 61\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1274881582", "unbViolId": "72fae4dd-f0f2-3fb8-bfbe-b22b15e7ce9d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 61, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 61\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1274881582", "unbViolId": "867edef8-1118-31fe-aad4-fbf6e97e7a67" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 61, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 61\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1274881582", "unbViolId": "938e8d74-079b-387b-94e9-7c55bf9c63f1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 61, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 61\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1274881582", "unbViolId": "f7019647-7eb9-300a-8902-038bd355917f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 61, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "AUTOSAR-A15_1_1-a", "level": "warning", "message": { "text": "Throw only instances of std::exception", "markdown": "**\\[Line 61\\] Throw only instances of std::exception**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1274881582", "unbViolId": "fab9d9b8-ec84-309e-85fd-a14d35fa5876" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 61, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-15_1_1-a", "level": "warning", "message": { "text": "Throw only instances of std::exception", "markdown": "**\\[Line 61\\] Throw only instances of std::exception**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1274881582", "unbViolId": "7b626527-de60-384b-b2a7-cefdf830dba2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 61, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "JSF-208", "level": "error", "message": { "text": "c++ exception handling structure is used in function 'assertion'", "markdown": "**\\[Line 61\\] c\\+\\+ exception handling structure is used in function 'assertion'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1274881582", "unbViolId": "7cb1fead-3000-3b3a-8738-3beef2d0ac6a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 61, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "EXCEPT-05", "level": "error", "message": { "text": "c++ exception handling structure is used in function 'assertion'", "markdown": "**\\[Line 61\\] c\\+\\+ exception handling structure is used in function 'assertion'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1274881582", "unbViolId": "8edfa242-94fa-3df1-8715-013f17e0b321" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 61, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "MISRA2008-15_0_2", "level": "warning", "message": { "text": "Exception of type 'const char *' is thrown by pointer; throw by value instead", "markdown": "**\\[Line 61\\] Exception of type 'const char \\*' is thrown by pointer; throw by value instead**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1274881582", "unbViolId": "22404e98-712b-385f-b80e-4a3974d30733" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 61, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "AUTOSAR-A15_1_2-a", "level": "error", "message": { "text": "Exception of type 'const char *' is thrown by pointer; throw by value instead", "markdown": "**\\[Line 61\\] Exception of type 'const char \\*' is thrown by pointer; throw by value instead**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1274881582", "unbViolId": "cbe2fa92-d311-3953-8c93-b7f74bc9233d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 61, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "EXCEPT-09", "level": "warning", "message": { "text": "Exception of type 'const char *' is thrown by pointer; throw by value instead", "markdown": "**\\[Line 61\\] Exception of type 'const char \\*' is thrown by pointer; throw by value instead**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1274881582", "unbViolId": "55b5c6a1-84f5-39a3-a15d-3240e2475655" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 61, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 62\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "404", "unbViolId": "4df005a4-b224-3105-8974-4ef5fef67d9d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 62, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 62\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "404", "unbViolId": "2402ea00-4558-3764-8ee9-8d6c83a9b726" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 62, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 62\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "404", "unbViolId": "161310c0-0c20-3d91-b5aa-141805bca36e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 62, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-051", "level": "warning", "message": { "text": "The name 'changePositionMutex' should be composed only of lowercase letters", "markdown": "**\\[Line 65\\] The name 'changePositionMutex' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "136478104", "unbViolId": "834f7d68-80ce-3716-bea8-01bee8e23197" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 65, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "NAMING-44", "level": "warning", "message": { "text": "The name 'changePositionMutex' should be composed only of lowercase letters", "markdown": "**\\[Line 65\\] The name 'changePositionMutex' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "136478104", "unbViolId": "aac78ce1-effd-30d3-90d3-00807f26f497" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 65, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "JSF-098", "level": "warning", "message": { "text": "Do not declare the 'changePositionMutex' variable in the global namespace", "markdown": "**\\[Line 65\\] Do not declare the 'changePositionMutex' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "136478104", "unbViolId": "f935a5ef-c617-3702-b374-637865091340" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 65, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "AUTOSAR-M7_3_1-a", "level": "error", "message": { "text": "Do not declare the 'changePositionMutex' variable in the global namespace", "markdown": "**\\[Line 65\\] Do not declare the 'changePositionMutex' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "136478104", "unbViolId": "0f670069-e2ff-3dfa-a9a5-3ec351ae4e05" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 65, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-CPP-36", "level": "warning", "message": { "text": "Do not declare the 'changePositionMutex' variable in the global namespace", "markdown": "**\\[Line 65\\] Do not declare the 'changePositionMutex' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "136478104", "unbViolId": "2f44913d-069a-33fc-a528-4ecf972e2c46" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 65, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA2008-7_3_1", "level": "error", "message": { "text": "Do not declare the 'changePositionMutex' variable in the global namespace", "markdown": "**\\[Line 65\\] Do not declare the 'changePositionMutex' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "136478104", "unbViolId": "8624c459-b945-32be-9b9b-cb804da340c4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 65, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-CPP-18", "level": "note", "message": { "text": "'changePositionMutex' should be encapsulated in a class", "markdown": "**\\[Line 65\\] 'changePositionMutex' should be encapsulated in a class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "136478104", "unbViolId": "39b4bfe6-d6a3-3c1e-bc67-2d7e4c035d51" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 65, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "HICPP-7_4_1-a", "level": "warning", "message": { "text": "The 'static' keyword is used in 'changePositionMutex' variable declaration", "markdown": "**\\[Line 65\\] The 'static' keyword is used in 'changePositionMutex' variable declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "136478104", "unbViolId": "1131cc64-ac7d-3f90-a72b-d085daec35b5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 65, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-CPP-50", "level": "warning", "message": { "text": "The 'static' keyword is used in 'changePositionMutex' variable declaration", "markdown": "**\\[Line 65\\] The 'static' keyword is used in 'changePositionMutex' variable declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "136478104", "unbViolId": "483f75eb-ccba-36f8-ba09-390e59efb968" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 65, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "JSF-207", "level": "warning", "message": { "text": "Do not define the 'changePositionMutex' global variable", "markdown": "**\\[Line 65\\] Do not define the 'changePositionMutex' global variable**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "136478104", "unbViolId": "53cdddac-a41a-3249-b447-e4ce17640a65" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 65, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-CPP-82", "level": "warning", "message": { "text": "Do not define the 'changePositionMutex' global variable", "markdown": "**\\[Line 65\\] Do not define the 'changePositionMutex' global variable**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "136478104", "unbViolId": "072e71ab-3616-3b99-ad99-fc1cdf74a124" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 65, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'changePositionMutex' variable should be commented", "markdown": "**\\[Line 65\\] The 'changePositionMutex' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "136478104", "unbViolId": "15bc4246-2e7e-3b1f-bb57-00568bc09686" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 65, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'changePositionMutex' variable should be commented", "markdown": "**\\[Line 65\\] The 'changePositionMutex' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "136478104", "unbViolId": "e1885115-3ad3-376a-875b-aa6b2cb4b253" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 65, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "HICPP-3_3_1-a", "level": "warning", "message": { "text": "Use of variable \"changePositionMutex\" with static storage duration is not allowed", "markdown": "**\\[Line 65\\] Use of variable \"changePositionMutex\" with static storage duration is not allowed**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "136478104", "unbViolId": "fe9db76d-0fce-3a3f-9fc3-8da3024f254b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 65, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA-022", "level": "note", "message": { "text": "Global variable 'changePositionMutex' is declared", "markdown": "**\\[Line 65\\] Global variable 'changePositionMutex' is declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "136478104", "unbViolId": "f8abfe26-ed51-3c0a-af88-aef193d7ece5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 65, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "NAMING-18", "level": "warning", "message": { "text": "Naming convention not followed: changePositionMutex", "markdown": "**\\[Line 65\\] Naming convention not followed: changePositionMutex**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "136478104", "unbViolId": "06d8629f-585b-377b-bbe7-87795dfef84e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 65, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "NAMING-HN-38", "level": "warning", "message": { "text": "The 'changePositionMutex' identifier should have the 's' prefix", "markdown": "**\\[Line 65\\] The 'changePositionMutex' identifier should have the 's' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "136478104", "unbViolId": "639a4b0a-a608-3662-8b9d-1a3226e1eb04" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 65, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "AUTOSAR-A3_3_2-a", "level": "error", "message": { "text": "The declaration of variable 'ring' contains a non-constant initializer", "markdown": "**\\[Line 67\\] The declaration of variable 'ring' contains a non\\-constant initializer**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "8ae10b78-2bcb-3843-a486-f55b6913caa2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CODSTA-MCPP-32", "level": "warning", "message": { "text": "The declaration of variable 'ring' contains a non-constant initializer", "markdown": "**\\[Line 67\\] The declaration of variable 'ring' contains a non\\-constant initializer**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "bbf2a7da-fea6-3cd4-9d1a-365fe3df9f22" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A8_5_2-a", "level": "error", "message": { "text": "The definition of the 'ring' variable should contain a braced initializer", "markdown": "**\\[Line 67\\] The definition of the 'ring' variable should contain a braced initializer**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "c04375e1-ac93-3e41-ab89-bd702e845eac" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CODSTA-MCPP-38", "level": "warning", "message": { "text": "The definition of the 'ring' variable should contain a braced initializer", "markdown": "**\\[Line 67\\] The definition of the 'ring' variable should contain a braced initializer**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "b45dd437-e75a-3f49-95eb-29ba29110669" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "OWASP2019-API9-e", "level": "warning", "message": { "text": "Global variable 'ring' has external linkage and is not declared in the header", "markdown": "**\\[Line 67\\] Global variable 'ring' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "6dcce7d7-a422-3d8f-8912-8b4c70682d84" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A3_3_1-a", "level": "error", "message": { "text": "Global variable 'ring' has external linkage and is not declared in the header", "markdown": "**\\[Line 67\\] Global variable 'ring' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "47394a19-868d-3f85-9b0d-c5d05a2098a3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-137", "level": "warning", "message": { "text": "Global variable 'ring' has external linkage and is not declared in the header", "markdown": "**\\[Line 67\\] Global variable 'ring' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "0350cd62-49f7-3eac-b356-21bc29eb1154" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA-023", "level": "warning", "message": { "text": "Global variable 'ring' has external linkage and is not declared in the header", "markdown": "**\\[Line 67\\] Global variable 'ring' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "24e19ab0-f861-3dff-9379-3ee4c0d595b7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2008-3_3_1", "level": "error", "message": { "text": "Global variable 'ring' has external linkage and is not declared in the header", "markdown": "**\\[Line 67\\] Global variable 'ring' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "919a26d0-ce29-32ac-8715-4653f496e62b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CERT_C-DCL15-a", "level": "warning", "message": { "text": "Global variable 'ring' has external linkage and is not declared in the header", "markdown": "**\\[Line 67\\] Global variable 'ring' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "e259f070-e7ab-3640-8469-364ae10dbf52" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2004-8_10", "level": "warning", "message": { "text": "Global variable 'ring' has external linkage and is not declared in the header", "markdown": "**\\[Line 67\\] Global variable 'ring' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "af94f057-90a4-3024-8be7-bfa92ef614fa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-098", "level": "warning", "message": { "text": "Do not declare the 'ring' variable in the global namespace", "markdown": "**\\[Line 67\\] Do not declare the 'ring' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "e596df9b-3e0f-3909-bedf-76fec95b194e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-M7_3_1-a", "level": "error", "message": { "text": "Do not declare the 'ring' variable in the global namespace", "markdown": "**\\[Line 67\\] Do not declare the 'ring' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "0a1aa7ff-30d6-3192-9065-01c59a3222ca" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CODSTA-CPP-36", "level": "warning", "message": { "text": "Do not declare the 'ring' variable in the global namespace", "markdown": "**\\[Line 67\\] Do not declare the 'ring' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "951673c0-4400-3184-8a5e-b1aa6bbad0bf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2008-7_3_1", "level": "error", "message": { "text": "Do not declare the 'ring' variable in the global namespace", "markdown": "**\\[Line 67\\] Do not declare the 'ring' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "444a1cd4-0130-3386-8b83-5d3023333faa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CODSTA-CPP-18", "level": "note", "message": { "text": "'ring' should be encapsulated in a class", "markdown": "**\\[Line 67\\] 'ring' should be encapsulated in a class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "2539005d-3fc3-3e3c-b4dd-b34218a0234a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-207", "level": "warning", "message": { "text": "Do not define the 'ring' global variable", "markdown": "**\\[Line 67\\] Do not define the 'ring' global variable**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "3ac84630-5935-3b11-9929-4534f9e8ceaa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CODSTA-CPP-82", "level": "warning", "message": { "text": "Do not define the 'ring' global variable", "markdown": "**\\[Line 67\\] Do not define the 'ring' global variable**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "d48a9394-badc-36e8-a3d1-fceba202c7a4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'ring' variable should be commented", "markdown": "**\\[Line 67\\] The 'ring' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "518834e6-d389-32a4-9414-381ec5dc9d4c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'ring' variable should be commented", "markdown": "**\\[Line 67\\] The 'ring' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "997ff6d4-12af-3a93-887f-2aeacdb74290" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-M15_3_1-a", "level": "error", "message": { "text": "The 'Point' constructor called during the creation of the 'ring' object should be declared as exception-safe", "markdown": "**\\[Line 67\\] The 'Point' constructor called during the creation of the 'ring' object should be declared as exception\\-safe**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "40ee00c4-0d52-3e76-b87a-d8f6b77794fe" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CERT_CPP-ERR58-a", "level": "error", "message": { "text": "The 'Point' constructor called during the creation of the 'ring' object should be declared as exception-safe", "markdown": "**\\[Line 67\\] The 'Point' constructor called during the creation of the 'ring' object should be declared as exception\\-safe**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "d80017a8-03a3-3810-b6ef-7e175d580931" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2008-15_3_1", "level": "error", "message": { "text": "The 'Point' constructor called during the creation of the 'ring' object should be declared as exception-safe", "markdown": "**\\[Line 67\\] The 'Point' constructor called during the creation of the 'ring' object should be declared as exception\\-safe**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "c2477be6-4009-3fd8-9400-39841594cad6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A15_5_3-f", "level": "error", "message": { "text": "The 'Point' constructor called during the creation of the 'ring' object should be declared as exception-safe", "markdown": "**\\[Line 67\\] The 'Point' constructor called during the creation of the 'ring' object should be declared as exception\\-safe**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "c64b8563-0d81-3c35-9f74-517ee21f031a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CERT_CPP-ERR50-f", "level": "warning", "message": { "text": "The 'Point' constructor called during the creation of the 'ring' object should be declared as exception-safe", "markdown": "**\\[Line 67\\] The 'Point' constructor called during the creation of the 'ring' object should be declared as exception\\-safe**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "82350a8f-2156-3db3-9e21-0c62c9197f39" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "EXCEPT-08", "level": "warning", "message": { "text": "The 'Point' constructor called during the creation of the 'ring' object should be declared as exception-safe", "markdown": "**\\[Line 67\\] The 'Point' constructor called during the creation of the 'ring' object should be declared as exception\\-safe**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "6700818c-113a-3b68-9a48-9291eb4cb6b6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2008-15_5_3_f", "level": "error", "message": { "text": "The 'Point' constructor called during the creation of the 'ring' object should be declared as exception-safe", "markdown": "**\\[Line 67\\] The 'Point' constructor called during the creation of the 'ring' object should be declared as exception\\-safe**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "1b062d00-aec4-3dfa-8a9a-fba0797ea743" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "HICPP-3_3_1-a", "level": "warning", "message": { "text": "Use of variable \"ring\" with static storage duration is not allowed", "markdown": "**\\[Line 67\\] Use of variable \"ring\" with static storage duration is not allowed**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "7a0bcdac-dd2c-3c68-982d-e3361c3a449e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "HICPP-7_1_8-a", "level": "warning", "message": { "text": "Variable 'ring' should be declared using 'auto' specifier", "markdown": "**\\[Line 67\\] Variable 'ring' should be declared using 'auto' specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "a7eef6aa-d9c4-3727-83a1-a2d7c3d1924a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA-022", "level": "note", "message": { "text": "Global variable 'ring' is declared", "markdown": "**\\[Line 67\\] Global variable 'ring' is declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "7999699d-a99f-3466-a013-d9041788df67" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "NAMING-18", "level": "warning", "message": { "text": "Naming convention not followed: ring", "markdown": "**\\[Line 67\\] Naming convention not followed: ring**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "3cab53b3-c7d2-382f-bbae-09729e83aceb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'int' of function argument number '2' does not match declared type 'double'", "markdown": "**\\[Line 67\\] The type 'int' of function argument number '2' does not match declared type 'double'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "949412f3-aa23-30d7-9f72-5c8bbf7d1ca9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "PORT-16", "level": "warning", "message": { "text": "Argument type conversion from \"shorter\" type to \"longer\" type", "markdown": "**\\[Line 67\\] Argument type conversion from \"shorter\" type to \"longer\" type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "49bc5d39-24e6-3c8c-81b3-3affb6dbbef6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2008-5_0_5_b", "level": "error", "message": { "text": "Implicit conversion from integral to floating type in function's argument", "markdown": "**\\[Line 67\\] Implicit conversion from integral to floating type in function's argument**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "89af02ca-f642-3a04-9705-d564e9fc25a1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CERT_C-EXP39-a", "level": "warning", "message": { "text": "Implicit conversion from integral to floating type in function's argument", "markdown": "**\\[Line 67\\] Implicit conversion from integral to floating type in function's argument**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "87d219c9-1d5b-3c58-b8e8-3be8ffafb22f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "AUTOSAR-M5_0_5-a", "level": "error", "message": { "text": "Implicit conversion from integral to floating type in function's argument", "markdown": "**\\[Line 67\\] Implicit conversion from integral to floating type in function's argument**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "e0f88dc8-4153-3b13-b815-7b400dd9dcc4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA2004-10_1_b", "level": "warning", "message": { "text": "Implicit conversion from integral to floating type in function's argument", "markdown": "**\\[Line 67\\] Implicit conversion from integral to floating type in function's argument**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "893639642", "unbViolId": "2f814ea0-53cb-3c44-9a2f-0959b73c1beb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 67, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "JSF-062", "level": "warning", "message": { "text": "The operator '*', used for 'participants' declaration, should be directly connected with the type", "markdown": "**\\[Line 68\\] The operator '\\*', used for 'participants' declaration, should be directly connected with the type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "d893f5c7-e0f9-36fe-8de6-107d1fa77c1e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "FORMAT-32", "level": "warning", "message": { "text": "The operator '*', used for 'participants' declaration, should be directly connected with the type", "markdown": "**\\[Line 68\\] The operator '\\*', used for 'participants' declaration, should be directly connected with the type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "e94f2449-7fb1-39ae-ac45-647105d60198" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "OWASP2019-API9-e", "level": "warning", "message": { "text": "Global variable 'participants' has external linkage and is not declared in the header", "markdown": "**\\[Line 68\\] Global variable 'participants' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "d3c487ed-d763-3555-aee0-af03bc28d5a1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A3_3_1-a", "level": "error", "message": { "text": "Global variable 'participants' has external linkage and is not declared in the header", "markdown": "**\\[Line 68\\] Global variable 'participants' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "67de601b-180e-3efa-a908-c26ba7688f99" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-137", "level": "warning", "message": { "text": "Global variable 'participants' has external linkage and is not declared in the header", "markdown": "**\\[Line 68\\] Global variable 'participants' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "a654e057-03bb-3b0d-bd7c-4d5878a733cb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA-023", "level": "warning", "message": { "text": "Global variable 'participants' has external linkage and is not declared in the header", "markdown": "**\\[Line 68\\] Global variable 'participants' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "f230b368-6999-3093-a94f-adb3fb2f17d2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2008-3_3_1", "level": "error", "message": { "text": "Global variable 'participants' has external linkage and is not declared in the header", "markdown": "**\\[Line 68\\] Global variable 'participants' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "b66000b3-e817-33ff-b930-294a620c10a4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CERT_C-DCL15-a", "level": "warning", "message": { "text": "Global variable 'participants' has external linkage and is not declared in the header", "markdown": "**\\[Line 68\\] Global variable 'participants' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "e54180bd-032d-3eb9-9588-d39df394ad8e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2004-8_10", "level": "warning", "message": { "text": "Global variable 'participants' has external linkage and is not declared in the header", "markdown": "**\\[Line 68\\] Global variable 'participants' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "16023040-2b90-384c-8b99-dc08cacfa107" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "STL-37", "level": "warning", "message": { "text": "The 'participants' array should not be used", "markdown": "**\\[Line 68\\] The 'participants' array should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "f7c58ee5-1c7a-3bef-93af-653f6aa796d4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A18_1_1-a", "level": "error", "message": { "text": "The 'participants' array should not be used", "markdown": "**\\[Line 68\\] The 'participants' array should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "ff355fb3-976d-347b-8603-627a7d3293d2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-098", "level": "warning", "message": { "text": "Do not declare the 'participants' variable in the global namespace", "markdown": "**\\[Line 68\\] Do not declare the 'participants' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "bf01ffb3-e173-3735-9f5b-6a8fb4ec226d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-M7_3_1-a", "level": "error", "message": { "text": "Do not declare the 'participants' variable in the global namespace", "markdown": "**\\[Line 68\\] Do not declare the 'participants' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "fe5fa3b3-e56c-3387-938f-6283ee6ba328" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CODSTA-CPP-36", "level": "warning", "message": { "text": "Do not declare the 'participants' variable in the global namespace", "markdown": "**\\[Line 68\\] Do not declare the 'participants' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "7ec446aa-6313-3398-87c0-e188d928597b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2008-7_3_1", "level": "error", "message": { "text": "Do not declare the 'participants' variable in the global namespace", "markdown": "**\\[Line 68\\] Do not declare the 'participants' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "294cef87-fac5-37ea-8e45-3eb5b8add886" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "HICPP-8_1_1-a", "level": "warning", "message": { "text": "Declaration of variable 'participants' contains more than one level of pointer indirection", "markdown": "**\\[Line 68\\] Declaration of variable 'participants' contains more than one level of pointer indirection**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "a71efeed-4c27-38b9-a75d-c54a3ef46f39" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CODSTA-89", "level": "warning", "message": { "text": "Declaration of variable 'participants' contains more than one level of pointer indirection", "markdown": "**\\[Line 68\\] Declaration of variable 'participants' contains more than one level of pointer indirection**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "1fc41d42-db17-36ad-aa05-c75dd40e5801" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The variable of pointer or array type is declared: participants", "markdown": "**\\[Line 68\\] The variable of pointer or array type is declared: participants**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "d7583088-57ac-3342-8124-88da12c66c59" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The variable of pointer type is declared: participants", "markdown": "**\\[Line 68\\] The variable of pointer type is declared: participants**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "6eae8e94-c267-3bdf-84cc-ce8439543921" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CODSTA-CPP-18", "level": "note", "message": { "text": "'participants' should be encapsulated in a class", "markdown": "**\\[Line 68\\] 'participants' should be encapsulated in a class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "59fe111a-6241-3edb-8da4-0d8389f473c6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-207", "level": "warning", "message": { "text": "Do not define the 'participants' global variable", "markdown": "**\\[Line 68\\] Do not define the 'participants' global variable**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "257fdb11-a207-324f-86d3-8306c184b1d9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CODSTA-CPP-82", "level": "warning", "message": { "text": "Do not define the 'participants' global variable", "markdown": "**\\[Line 68\\] Do not define the 'participants' global variable**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "f203b9cd-d910-35fe-8e45-e7185acdc22b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'participants' variable should be commented", "markdown": "**\\[Line 68\\] The 'participants' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "2eedcc4c-80c7-3a4a-9880-0f83c0b732c2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'participants' variable should be commented", "markdown": "**\\[Line 68\\] The 'participants' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "8191fd32-dbe4-3242-80c4-b25286209a1d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "HICPP-3_3_1-a", "level": "warning", "message": { "text": "Use of variable \"participants\" with static storage duration is not allowed", "markdown": "**\\[Line 68\\] Use of variable \"participants\" with static storage duration is not allowed**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "d3f5f1a6-d81d-3b13-8d68-6126e91a9968" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA-022", "level": "note", "message": { "text": "Global variable 'participants' is declared", "markdown": "**\\[Line 68\\] Global variable 'participants' is declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "16bc6f8f-27d3-3666-9c4b-e66585924c06" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "NAMING-18", "level": "warning", "message": { "text": "Naming convention not followed: participants", "markdown": "**\\[Line 68\\] Naming convention not followed: participants**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "06eb3ec3-2112-3fb6-9ff9-34911278f837" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "NAMING-HN-01", "level": "warning", "message": { "text": "The 'participants' identifier should have the 'rg' prefix", "markdown": "**\\[Line 68\\] The 'participants' identifier should have the 'rg' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1054095129", "unbViolId": "2137b3b0-dd6d-3d1e-b12e-acccdc3cfe5d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 68, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 69\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "b8ed7fb8-f590-3917-9367-c8cdbe3055ce" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 69\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "08bb1a63-ab8d-3287-a8c2-95589fd726cb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CODSTA-223", "level": "warning", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 69\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "06eb5bf5-014c-31f5-9cf7-944969f4a7d2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A3_9_1-b", "level": "error", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 69\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "bd59a2cf-a14e-3694-bacd-ecb4d4030f2c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-7_1_6-b", "level": "warning", "message": { "text": "Do not use the 'int' standard integer type", "markdown": "**\\[Line 69\\] Do not use the 'int' standard integer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "56a7d0e7-15ad-33c0-b6a0-dcee4e0a0a72" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 69\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "b16ff987-0de6-34a4-8932-d15d873a801d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 69\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "a2653509-b9ea-36be-b855-aa8c821e30ea" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 69\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "b80e51b8-3fc9-3121-9e42-2c104b0579ee" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 69\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "5bc2f396-92e8-3aec-bb34-afd3258dad7b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 69\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "5660914a-e655-3bee-9eb1-c1f2632a6fc4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-142_b", "level": "error", "message": { "text": "The variable \"participantsCount\" was not initialized when declared", "markdown": "**\\[Line 69\\] The variable \"participantsCount\" was not initialized when declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "cfbf336e-4ba4-3d2e-b1d9-a9c20c6edee6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "INIT-03", "level": "warning", "message": { "text": "The variable \"participantsCount\" was not initialized when declared", "markdown": "**\\[Line 69\\] The variable \"participantsCount\" was not initialized when declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "82363d42-9402-3457-83d3-de9c256d0399" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "OWASP2019-API9-e", "level": "warning", "message": { "text": "Global variable 'participantsCount' has external linkage and is not declared in the header", "markdown": "**\\[Line 69\\] Global variable 'participantsCount' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "21dd9f55-fd1c-302e-91d0-e7a00facea86" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A3_3_1-a", "level": "error", "message": { "text": "Global variable 'participantsCount' has external linkage and is not declared in the header", "markdown": "**\\[Line 69\\] Global variable 'participantsCount' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "85e5d7a9-f2d4-362e-8471-31f8cb532a47" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-137", "level": "warning", "message": { "text": "Global variable 'participantsCount' has external linkage and is not declared in the header", "markdown": "**\\[Line 69\\] Global variable 'participantsCount' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "f78dfae0-aa42-380a-a035-b914aa65d9d8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA-023", "level": "warning", "message": { "text": "Global variable 'participantsCount' has external linkage and is not declared in the header", "markdown": "**\\[Line 69\\] Global variable 'participantsCount' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "b4509ee7-797d-3404-b8e0-a4e3d834c460" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2008-3_3_1", "level": "error", "message": { "text": "Global variable 'participantsCount' has external linkage and is not declared in the header", "markdown": "**\\[Line 69\\] Global variable 'participantsCount' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "2d6e3a33-0cbf-3a6f-b4cc-cd9729222259" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "CERT_C-DCL15-a", "level": "warning", "message": { "text": "Global variable 'participantsCount' has external linkage and is not declared in the header", "markdown": "**\\[Line 69\\] Global variable 'participantsCount' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "0412730d-e728-3189-a20d-3df0d2905156" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2004-8_10", "level": "warning", "message": { "text": "Global variable 'participantsCount' has external linkage and is not declared in the header", "markdown": "**\\[Line 69\\] Global variable 'participantsCount' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "59e8a08e-6452-338c-8d49-32dd27941150" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-051", "level": "warning", "message": { "text": "The name 'participantsCount' should be composed only of lowercase letters", "markdown": "**\\[Line 69\\] The name 'participantsCount' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "fce638e8-850a-37d7-95b4-a3d4c36b1147" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "NAMING-44", "level": "warning", "message": { "text": "The name 'participantsCount' should be composed only of lowercase letters", "markdown": "**\\[Line 69\\] The name 'participantsCount' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "565b1db8-83fd-36cf-9404-bd757a9d3862" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-098", "level": "warning", "message": { "text": "Do not declare the 'participantsCount' variable in the global namespace", "markdown": "**\\[Line 69\\] Do not declare the 'participantsCount' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "f07bc500-23a7-34be-993c-e7c33781e9df" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-M7_3_1-a", "level": "error", "message": { "text": "Do not declare the 'participantsCount' variable in the global namespace", "markdown": "**\\[Line 69\\] Do not declare the 'participantsCount' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "89e7bd20-0ce4-3d54-8d2a-a30a3d68d081" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "CODSTA-CPP-36", "level": "warning", "message": { "text": "Do not declare the 'participantsCount' variable in the global namespace", "markdown": "**\\[Line 69\\] Do not declare the 'participantsCount' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "9bcb2e2a-e46c-3b17-b971-b34391ab79fa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2008-7_3_1", "level": "error", "message": { "text": "Do not declare the 'participantsCount' variable in the global namespace", "markdown": "**\\[Line 69\\] Do not declare the 'participantsCount' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "9e1b2754-4a9e-3ed5-8c17-c4820ecad1e4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "PORT-13", "level": "warning", "message": { "text": "'participantsCount' shall be declared as unsigned int or signed int", "markdown": "**\\[Line 69\\] 'participantsCount' shall be declared as unsigned int or signed int**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "623d9d1d-95d3-3d88-bd36-d9513e31c7f0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "CODSTA-CPP-18", "level": "note", "message": { "text": "'participantsCount' should be encapsulated in a class", "markdown": "**\\[Line 69\\] 'participantsCount' should be encapsulated in a class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "811b4ee5-41a4-30f6-9d25-3857044768fb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-207", "level": "warning", "message": { "text": "Do not define the 'participantsCount' global variable", "markdown": "**\\[Line 69\\] Do not define the 'participantsCount' global variable**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "8c287753-41d5-307a-be9f-2f413b2d2402" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "CODSTA-CPP-82", "level": "warning", "message": { "text": "Do not define the 'participantsCount' global variable", "markdown": "**\\[Line 69\\] Do not define the 'participantsCount' global variable**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "d5ccc550-e9a5-30ae-925d-6adfb6a0fff0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'participantsCount' variable should be commented", "markdown": "**\\[Line 69\\] The 'participantsCount' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "9eaa1027-d358-354b-9d96-7294206b748f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'participantsCount' variable should be commented", "markdown": "**\\[Line 69\\] The 'participantsCount' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "c86a7650-3d8e-3c01-8c55-73f7571fa1ac" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "HICPP-3_3_1-a", "level": "warning", "message": { "text": "Use of variable \"participantsCount\" with static storage duration is not allowed", "markdown": "**\\[Line 69\\] Use of variable \"participantsCount\" with static storage duration is not allowed**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "068cb23e-6936-3093-b680-6a3c83cd0bed" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA-022", "level": "note", "message": { "text": "Global variable 'participantsCount' is declared", "markdown": "**\\[Line 69\\] Global variable 'participantsCount' is declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "3cf701b2-d298-3263-96b7-4a60f4b34f8a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "NAMING-18", "level": "warning", "message": { "text": "Naming convention not followed: participantsCount", "markdown": "**\\[Line 69\\] Naming convention not followed: participantsCount**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "9e2dbcca-763f-3dfc-913c-4db913d33d1d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "NAMING-19", "level": "warning", "message": { "text": "Naming convention not followed: participantsCount", "markdown": "**\\[Line 69\\] Naming convention not followed: participantsCount**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "090341ac-dd59-3f9d-a8de-aff8816ced99" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "NAMING-HN-22", "level": "warning", "message": { "text": "The 'participantsCount' identifier should have the 'i' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 69\\] The 'participantsCount' identifier should have the 'i' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "3c893b53-62a1-360d-81ac-f80ea708f866" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "NAMING-HN-30", "level": "warning", "message": { "text": "The 'participantsCount' identifier should have the 'n' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 69\\] The 'participantsCount' identifier should have the 'n' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "7b3e7c7b-bd53-3d46-90b5-db4fafbcf3f7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "NAMING-HN-43", "level": "warning", "message": { "text": "The 'participantsCount' identifier should have the 'i' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 69\\] The 'participantsCount' identifier should have the 'i' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1146363747", "unbViolId": "3f04a384-9d90-3d59-b3bc-86bd69077ab0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 69, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 70\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "31cb24af-dc97-3352-8bc0-0dade06bed9e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 70\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "71f6792e-6755-38a2-8d5f-e99e97de35c6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CODSTA-223", "level": "warning", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 70\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "bd785467-43f6-3509-a282-e8f970708e56" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A3_9_1-b", "level": "error", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 70\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "ad361e15-10c8-391c-a7a2-1f39ae936672" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-7_1_6-b", "level": "warning", "message": { "text": "Do not use the 'int' standard integer type", "markdown": "**\\[Line 70\\] Do not use the 'int' standard integer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "aee4d05d-95f1-3b80-967e-74b3b8d246ad" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 70\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "96961439-7680-38e3-af27-5ecd001441f3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 70\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "1c88674a-3ab7-3781-bd7a-47870ca29fd9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 70\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "5a3f28f1-b002-37f7-ba19-29ae44018f21" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 70\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "dcd3b031-50c2-3e1b-8ec6-956d2df566d8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 70\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "b38fd5bb-8836-3e9a-b929-25cf24674b71" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-142_b", "level": "error", "message": { "text": "The variable \"exitGame\" was not initialized when declared", "markdown": "**\\[Line 70\\] The variable \"exitGame\" was not initialized when declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "cf7c6a67-5007-3be5-9c99-0e13cea4cde8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "INIT-03", "level": "warning", "message": { "text": "The variable \"exitGame\" was not initialized when declared", "markdown": "**\\[Line 70\\] The variable \"exitGame\" was not initialized when declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "d678a743-b697-3cb1-8566-1257b4fa25c4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "OWASP2019-API9-e", "level": "warning", "message": { "text": "Global variable 'exitGame' has external linkage and is not declared in the header", "markdown": "**\\[Line 70\\] Global variable 'exitGame' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "353cd46f-8c4d-3897-8cf9-76dbc2c1b772" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A3_3_1-a", "level": "error", "message": { "text": "Global variable 'exitGame' has external linkage and is not declared in the header", "markdown": "**\\[Line 70\\] Global variable 'exitGame' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "ba0b7741-69d9-399d-8bb3-f91d32fe62df" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-137", "level": "warning", "message": { "text": "Global variable 'exitGame' has external linkage and is not declared in the header", "markdown": "**\\[Line 70\\] Global variable 'exitGame' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "65a4a5fd-f744-364e-9f78-fb76a7ea79e9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA-023", "level": "warning", "message": { "text": "Global variable 'exitGame' has external linkage and is not declared in the header", "markdown": "**\\[Line 70\\] Global variable 'exitGame' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "7b8ddbd6-df60-3ac8-9dc9-0e6d8bb87b57" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2008-3_3_1", "level": "error", "message": { "text": "Global variable 'exitGame' has external linkage and is not declared in the header", "markdown": "**\\[Line 70\\] Global variable 'exitGame' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "57a9a85c-74f6-36b1-a20d-aa3b6f8a3659" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "CERT_C-DCL15-a", "level": "warning", "message": { "text": "Global variable 'exitGame' has external linkage and is not declared in the header", "markdown": "**\\[Line 70\\] Global variable 'exitGame' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "34751415-4a08-3192-9bcf-1e9f7b807800" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2004-8_10", "level": "warning", "message": { "text": "Global variable 'exitGame' has external linkage and is not declared in the header", "markdown": "**\\[Line 70\\] Global variable 'exitGame' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "472869a9-b6bf-3296-91d0-1cbf34a6bd83" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-051", "level": "warning", "message": { "text": "The name 'exitGame' should be composed only of lowercase letters", "markdown": "**\\[Line 70\\] The name 'exitGame' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "69f1ca9a-4f6f-3ef7-9287-66b7a08d68e1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "NAMING-44", "level": "warning", "message": { "text": "The name 'exitGame' should be composed only of lowercase letters", "markdown": "**\\[Line 70\\] The name 'exitGame' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "4757c415-8712-32c8-b8af-fa19a0d4d5b0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-098", "level": "warning", "message": { "text": "Do not declare the 'exitGame' variable in the global namespace", "markdown": "**\\[Line 70\\] Do not declare the 'exitGame' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "c5bd1972-9112-3897-938c-ede7dbf09ae4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-M7_3_1-a", "level": "error", "message": { "text": "Do not declare the 'exitGame' variable in the global namespace", "markdown": "**\\[Line 70\\] Do not declare the 'exitGame' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "80821fbd-cfa5-3636-a9a7-b2ebd0281e0c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "CODSTA-CPP-36", "level": "warning", "message": { "text": "Do not declare the 'exitGame' variable in the global namespace", "markdown": "**\\[Line 70\\] Do not declare the 'exitGame' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "e47c8bc2-9b69-3580-8148-18fdcb89a9d7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2008-7_3_1", "level": "error", "message": { "text": "Do not declare the 'exitGame' variable in the global namespace", "markdown": "**\\[Line 70\\] Do not declare the 'exitGame' variable in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "04cc10a5-ccba-3fe9-894e-fc720dd97fbb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "PORT-13", "level": "warning", "message": { "text": "'exitGame' shall be declared as unsigned int or signed int", "markdown": "**\\[Line 70\\] 'exitGame' shall be declared as unsigned int or signed int**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "b60d3cb9-ff44-3966-9e1c-7187b3fffee3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "CODSTA-CPP-18", "level": "note", "message": { "text": "'exitGame' should be encapsulated in a class", "markdown": "**\\[Line 70\\] 'exitGame' should be encapsulated in a class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "6f819d37-b011-3ba6-b944-b8ec13fa8c2e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-207", "level": "warning", "message": { "text": "Do not define the 'exitGame' global variable", "markdown": "**\\[Line 70\\] Do not define the 'exitGame' global variable**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "97e876ba-11c3-32b5-8455-d7bd71e8e22d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "CODSTA-CPP-82", "level": "warning", "message": { "text": "Do not define the 'exitGame' global variable", "markdown": "**\\[Line 70\\] Do not define the 'exitGame' global variable**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "c0b419c4-b04c-37e3-9436-3f6fdb094371" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'exitGame' variable should be commented", "markdown": "**\\[Line 70\\] The 'exitGame' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "3cf256db-a4ce-39d9-8aaa-a5b6dc7dad31" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'exitGame' variable should be commented", "markdown": "**\\[Line 70\\] The 'exitGame' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "8b29d0f0-893d-3337-b951-21b2812be077" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "HICPP-3_3_1-a", "level": "warning", "message": { "text": "Use of variable \"exitGame\" with static storage duration is not allowed", "markdown": "**\\[Line 70\\] Use of variable \"exitGame\" with static storage duration is not allowed**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "09c7f556-890a-3761-8726-2c2be141dd8b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA-022", "level": "note", "message": { "text": "Global variable 'exitGame' is declared", "markdown": "**\\[Line 70\\] Global variable 'exitGame' is declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "43c59143-6967-3322-aebc-fc6952d6e052" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "NAMING-18", "level": "warning", "message": { "text": "Naming convention not followed: exitGame", "markdown": "**\\[Line 70\\] Naming convention not followed: exitGame**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "b6def690-9af2-3521-a0a2-d8b51fca1c26" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "NAMING-19", "level": "warning", "message": { "text": "Naming convention not followed: exitGame", "markdown": "**\\[Line 70\\] Naming convention not followed: exitGame**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "2ad2f161-aa27-3f90-945a-4f2799f58662" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "NAMING-HN-22", "level": "warning", "message": { "text": "The 'exitGame' identifier should have the 'i' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 70\\] The 'exitGame' identifier should have the 'i' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "d40ae2ce-7773-3560-8329-64fb5e2389ce" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "NAMING-HN-30", "level": "warning", "message": { "text": "The 'exitGame' identifier should have the 'n' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 70\\] The 'exitGame' identifier should have the 'n' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "4c1bd9ae-d950-3af1-9278-df3d2049a470" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "NAMING-HN-43", "level": "warning", "message": { "text": "The 'exitGame' identifier should have the 'i' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 70\\] The 'exitGame' identifier should have the 'i' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-807048934", "unbViolId": "b94ea473-fd88-3dff-bf46-c18d03ef6b36" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 70, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "CODSTA-MCPP-08_b", "level": "error", "message": { "text": "The return type of the 'GameLogic_Thread' function should be declared as 'auto'", "markdown": "**\\[Line 72\\] The return type of the 'GameLogic\\_Thread' function should be declared as 'auto'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "ff3b3097-9e57-34fb-969c-ad129ce8828b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'GameLogic_Thread' function is not preceded by a comment", "markdown": "**\\[Line 72\\] The definition of the 'GameLogic\\_Thread' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "bc9a4918-3a59-35f2-ada7-e751c12fbd65" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'GameLogic_Thread' function is not preceded by a comment", "markdown": "**\\[Line 72\\] The definition of the 'GameLogic\\_Thread' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "ff61a113-afa5-344d-a203-a9497efef235" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "OWASP2019-API9-e", "level": "warning", "message": { "text": "Function 'GameLogic_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 72\\] Function 'GameLogic\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "201cfe4e-6f03-3cb8-ba42-b59aa14787ac" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A3_3_1-a", "level": "error", "message": { "text": "Function 'GameLogic_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 72\\] Function 'GameLogic\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "b9bcc53d-8444-3f71-a281-1f18b3eaf96e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-137", "level": "warning", "message": { "text": "Function 'GameLogic_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 72\\] Function 'GameLogic\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "55b89649-17a3-3db9-b7f8-7a209adcc9d1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA-023", "level": "warning", "message": { "text": "Function 'GameLogic_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 72\\] Function 'GameLogic\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "54f92d53-a504-3258-91eb-909b44298194" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2008-3_3_1", "level": "error", "message": { "text": "Function 'GameLogic_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 72\\] Function 'GameLogic\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "d51cb3a9-f50e-3e08-8ce9-5fc945224dae" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CERT_C-DCL15-a", "level": "warning", "message": { "text": "Function 'GameLogic_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 72\\] Function 'GameLogic\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "6594ce6d-d267-375e-986e-a67a77846a9d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2004-8_10", "level": "warning", "message": { "text": "Function 'GameLogic_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 72\\] Function 'GameLogic\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "367e9446-1141-3981-adc2-2876d5ba1a94" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-051", "level": "warning", "message": { "text": "The name 'GameLogic_Thread' should be composed only of lowercase letters", "markdown": "**\\[Line 72\\] The name 'GameLogic\\_Thread' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "112e1d23-e58a-31fd-86ba-42b88c0f1de9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-44", "level": "warning", "message": { "text": "The name 'GameLogic_Thread' should be composed only of lowercase letters", "markdown": "**\\[Line 72\\] The name 'GameLogic\\_Thread' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "ace1af1b-0a56-3a0c-a19e-d4fdab19ad27" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-098", "level": "warning", "message": { "text": "Do not declare the 'GameLogic_Thread' function in the global namespace", "markdown": "**\\[Line 72\\] Do not declare the 'GameLogic\\_Thread' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "8c610e0f-5ef7-3c97-9136-ff9afe04ec37" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-M7_3_1-a", "level": "error", "message": { "text": "Do not declare the 'GameLogic_Thread' function in the global namespace", "markdown": "**\\[Line 72\\] Do not declare the 'GameLogic\\_Thread' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "3796e344-9c79-3987-9317-b7990a1e9159" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-CPP-36", "level": "warning", "message": { "text": "Do not declare the 'GameLogic_Thread' function in the global namespace", "markdown": "**\\[Line 72\\] Do not declare the 'GameLogic\\_Thread' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "bf7d70c3-5eea-30b8-950f-278fdeb450e7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2008-7_3_1", "level": "error", "message": { "text": "Do not declare the 'GameLogic_Thread' function in the global namespace", "markdown": "**\\[Line 72\\] Do not declare the 'GameLogic\\_Thread' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "ca0d7b87-452d-36f7-9dbf-0c91848430d0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A7_1_2-b", "level": "error", "message": { "text": "Consider using 'constexpr' for the 'GameLogic_Thread' function", "markdown": "**\\[Line 72\\] Consider using 'constexpr' for the 'GameLogic\\_Thread' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "30b69f12-0667-362c-8d7a-4adc381cb890" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-MCPP-11_b_cpp11", "level": "warning", "message": { "text": "Consider using 'constexpr' for the 'GameLogic_Thread' function", "markdown": "**\\[Line 72\\] Consider using 'constexpr' for the 'GameLogic\\_Thread' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "f2200c8b-58ab-38dd-861d-7b9ddf08eccc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'GameLogic_Thread' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 72\\] The 'GameLogic\\_Thread' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "896641af-1dab-3d69-b4bd-6d51e5cd9f30" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'GameLogic_Thread' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 72\\] The 'GameLogic\\_Thread' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "83231e7f-d0f6-3141-880e-fff859c5eaf9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'GameLogic_Thread' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 72\\] The 'GameLogic\\_Thread' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "ca356d3e-d6fb-372f-b404-8421b6de9b3b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'GameLogic_Thread' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 72\\] The 'GameLogic\\_Thread' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "01854ec3-d86b-31d5-90b6-434dac5c11de" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A15_4_4-a", "level": "error", "message": { "text": "The 'GameLogic_Thread' function should be declared 'noexcept'", "markdown": "**\\[Line 72\\] The 'GameLogic\\_Thread' function should be declared 'noexcept'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "8b9c1553-c07e-3032-a3bc-8a166484c34a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-MCPP-09", "level": "warning", "message": { "text": "The 'GameLogic_Thread' function should be declared 'noexcept'", "markdown": "**\\[Line 72\\] The 'GameLogic\\_Thread' function should be declared 'noexcept'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "1042aa63-b67c-3a6e-a696-e211d93df8f9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'GameLogic_Thread' has Cyclomatic Complexity value: 1", "markdown": "**\\[Line 72\\] Function 'GameLogic\\_Thread' has Cyclomatic Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "b6b9bf8f-ab8f-361d-b561-08051cdc2ade" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'GameLogic_Thread' has Essential Complexity value: 1", "markdown": "**\\[Line 72\\] Function 'GameLogic\\_Thread' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "a49f0af4-ab4c-3bab-9736-5aa6b0429b0b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-34", "level": "warning", "message": { "text": "The incorrect global function name GameLogic_Thread was found", "markdown": "**\\[Line 72\\] The incorrect global function name GameLogic\\_Thread was found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "24fa8bb4-9b83-3494-949c-02b0d1e3714f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The parameter of pointer or array type is declared", "markdown": "**\\[Line 72\\] The parameter of pointer or array type is declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "d5d28d03-6ef0-374a-b478-b96ac5497012" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 24, "endColumn": 25 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The parameter of pointer type is declared", "markdown": "**\\[Line 72\\] The parameter of pointer type is declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-105532398", "unbViolId": "c5215c1e-8188-3956-877d-f33f64ccabb8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 72, "startColumn": 24, "endColumn": 25 } } } ] }, { "ruleId": "CDD-DUPM", "level": "error", "message": { "text": "Duplicated function: 'THREAD_RETURN_TYPE GameLogic_Thread ( void * ) { return (...'", "markdown": "**\\[Line 73\\] Duplicated function: 'THREAD\\_RETURN\\_TYPE GameLogic\\_Thread \\( void \\* \\) \\{ return \\(\\.\\.\\.'**  \n  \nReview duplicate in:&nbsp;DeadLock.cpp&nbsp;(73)  \nReview duplicate in:&nbsp;DeadLock.cpp&nbsp;(79)" }, "partialFingerprints": { "violType": "DupViol", "lineHash": "123", "unbViolId": "a0587950-0ed2-356e-85ec-5f0b827ad5d3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 73, "startColumn": 1, "endLine": 76, "endColumn": 2 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 73, "startColumn": 1, "endLine": 76, "endColumn": 2 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 79, "startColumn": 1, "endLine": 82, "endColumn": 2 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 74\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "937420148", "unbViolId": "86f86d9f-77f8-3eb6-beb4-a7bf47afc43f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 74, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 74\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "937420148", "unbViolId": "619be2f3-6dfe-36cd-971c-f67e68dd517a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 74, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 74\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "937420148", "unbViolId": "a37a75c3-2b3f-32f2-be36-57583df018c6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 74, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 75\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "cd771953-d000-3d5f-bc0e-91b36843f0e3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 75, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 75\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "d9841a0e-9704-3c87-9c95-ad64ec709f31" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 75, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 75\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "50bb8dd1-e079-3fbb-8be9-3d6af558a40b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 75, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-25_b", "level": "warning", "message": { "text": "'return' statement should be used with parenthesis", "markdown": "**\\[Line 75\\] 'return' statement should be used with parenthesis**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "15b14f61-e624-3d26-b132-4c97b74fcdfa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 75, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "CDD-DUPC", "level": "warning", "message": { "text": "Duplicated code: 'return (THREAD_RETURN_TYPE)0;'", "markdown": "**\\[Line 75\\] Duplicated code: 'return \\(THREAD\\_RETURN\\_TYPE\\)0;'**  \n  \nReview duplicate in:&nbsp;DeadLock.cpp&nbsp;(75)  \nReview duplicate in:&nbsp;DeadLock.cpp&nbsp;(81)" }, "partialFingerprints": { "violType": "DupViol", "lineHash": "466607007", "unbViolId": "8eb8e736-fa1f-38f2-a58e-80c3b3542419" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 75, "startColumn": 2, "endColumn": 31 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 75, "startColumn": 2, "endColumn": 31 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 81, "startColumn": 2, "endColumn": 31 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "HICPP-5_4_1-a", "level": "warning", "message": { "text": "Use a C++-style cast instead of a C-style cast to the 'DWORD' type", "markdown": "**\\[Line 75\\] Use a C\\+\\+\\-style cast instead of a C\\-style cast to the 'DWORD' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "82b1099a-097f-301d-9e6b-fa879582243a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 75, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-A5_2_2-a", "level": "error", "message": { "text": "Use a C++-style cast instead of a C-style cast to the 'DWORD' type", "markdown": "**\\[Line 75\\] Use a C\\+\\+\\-style cast instead of a C\\-style cast to the 'DWORD' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "8d283df7-e7c5-32b1-824f-6c3e2795b8f4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 75, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-CPP-11", "level": "warning", "message": { "text": "Use a C++-style cast instead of a C-style cast to the 'DWORD' type", "markdown": "**\\[Line 75\\] Use a C\\+\\+\\-style cast instead of a C\\-style cast to the 'DWORD' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "3b0571f4-b30b-30cb-b4e8-317a4e575392" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 75, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-185", "level": "error", "message": { "text": "Do not use a C-style cast to the 'DWORD' type", "markdown": "**\\[Line 75\\] Do not use a C\\-style cast to the 'DWORD' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "27aa31b0-53b3-3900-b7de-1ac916681ecb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 75, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "MISRA2008-5_2_4", "level": "error", "message": { "text": "Do not use a C-style cast to the 'DWORD' type", "markdown": "**\\[Line 75\\] Do not use a C\\-style cast to the 'DWORD' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "1d59d281-03d0-3e04-9604-1b52927598af" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 75, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-CPP-66", "level": "warning", "message": { "text": "Do not use a C-style cast to the 'DWORD' type", "markdown": "**\\[Line 75\\] Do not use a C\\-style cast to the 'DWORD' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "13ec71cc-812a-3231-8555-b3c0231f21e2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 75, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "HICPP-4_2_2-b", "level": "warning", "message": { "text": "Cast to primitive type should not be used if possible", "markdown": "**\\[Line 75\\] Cast to primitive type should not be used if possible**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "d232e1e0-af82-3f12-98f9-e2d42a01cc2e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 75, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-183", "level": "warning", "message": { "text": "Cast to primitive type should not be used if possible", "markdown": "**\\[Line 75\\] Cast to primitive type should not be used if possible**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "5ed67666-bb74-3390-b7c9-2ac5cc75e565" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 75, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-31", "level": "warning", "message": { "text": "Cast to primitive type should not be used if possible", "markdown": "**\\[Line 75\\] Cast to primitive type should not be used if possible**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "b5d9e6af-6602-30fe-9f4b-db0538e27823" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 75, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-MCPP-08_b", "level": "error", "message": { "text": "The return type of the 'Controller_Thread' function should be declared as 'auto'", "markdown": "**\\[Line 78\\] The return type of the 'Controller\\_Thread' function should be declared as 'auto'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "a5644b71-4df6-3785-b7fd-161c8861f320" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'Controller_Thread' function is not preceded by a comment", "markdown": "**\\[Line 78\\] The definition of the 'Controller\\_Thread' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "8c420db7-e7ec-3b44-9bb3-e12668e8da88" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'Controller_Thread' function is not preceded by a comment", "markdown": "**\\[Line 78\\] The definition of the 'Controller\\_Thread' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "5ee9486e-1a48-3a0d-921d-5a344fdc15d3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "OWASP2019-API9-e", "level": "warning", "message": { "text": "Function 'Controller_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 78\\] Function 'Controller\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "abc3b332-569b-3fa8-b1c6-eb9321b10b37" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A3_3_1-a", "level": "error", "message": { "text": "Function 'Controller_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 78\\] Function 'Controller\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "70d7a796-063c-3907-a3ee-7aa826b9b6e8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-137", "level": "warning", "message": { "text": "Function 'Controller_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 78\\] Function 'Controller\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "e618f385-57fb-3386-9381-3938308ad78f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA-023", "level": "warning", "message": { "text": "Function 'Controller_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 78\\] Function 'Controller\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "6dc13ef6-e3b6-3a68-8e7a-758addc1b6a7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2008-3_3_1", "level": "error", "message": { "text": "Function 'Controller_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 78\\] Function 'Controller\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "80e42904-4b77-30c2-a2e6-baa62d66db66" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CERT_C-DCL15-a", "level": "warning", "message": { "text": "Function 'Controller_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 78\\] Function 'Controller\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "8b37b77c-a0ac-3a60-934d-4e4fb1d5cfd2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2004-8_10", "level": "warning", "message": { "text": "Function 'Controller_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 78\\] Function 'Controller\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "7aca112a-667a-3c77-904e-2357433e56d4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-051", "level": "warning", "message": { "text": "The name 'Controller_Thread' should be composed only of lowercase letters", "markdown": "**\\[Line 78\\] The name 'Controller\\_Thread' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "c4083c68-d2e3-347d-aa07-13f53cdf4d51" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-44", "level": "warning", "message": { "text": "The name 'Controller_Thread' should be composed only of lowercase letters", "markdown": "**\\[Line 78\\] The name 'Controller\\_Thread' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "df374ff5-757a-33cf-9f1c-c89f1b60de82" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-098", "level": "warning", "message": { "text": "Do not declare the 'Controller_Thread' function in the global namespace", "markdown": "**\\[Line 78\\] Do not declare the 'Controller\\_Thread' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "e6a17321-debd-30b9-981c-283923ce8347" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-M7_3_1-a", "level": "error", "message": { "text": "Do not declare the 'Controller_Thread' function in the global namespace", "markdown": "**\\[Line 78\\] Do not declare the 'Controller\\_Thread' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "3a80c3a8-0389-336e-bdc8-cde22a476c49" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-CPP-36", "level": "warning", "message": { "text": "Do not declare the 'Controller_Thread' function in the global namespace", "markdown": "**\\[Line 78\\] Do not declare the 'Controller\\_Thread' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "68305f85-bce9-32bf-9617-7a4048a7d99a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2008-7_3_1", "level": "error", "message": { "text": "Do not declare the 'Controller_Thread' function in the global namespace", "markdown": "**\\[Line 78\\] Do not declare the 'Controller\\_Thread' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "46417553-0f63-3a9d-8ad7-79e278d6b328" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A7_1_2-b", "level": "error", "message": { "text": "Consider using 'constexpr' for the 'Controller_Thread' function", "markdown": "**\\[Line 78\\] Consider using 'constexpr' for the 'Controller\\_Thread' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "646ca90f-6ee4-3ce4-9610-04e9b43160c2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-MCPP-11_b_cpp11", "level": "warning", "message": { "text": "Consider using 'constexpr' for the 'Controller_Thread' function", "markdown": "**\\[Line 78\\] Consider using 'constexpr' for the 'Controller\\_Thread' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "83203eda-f6c9-358a-b77f-85825524f0a5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'Controller_Thread' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 78\\] The 'Controller\\_Thread' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "fe632b2d-f1e4-3f14-91f1-ecfe87e3279f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'Controller_Thread' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 78\\] The 'Controller\\_Thread' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "dfb491a0-df22-327d-85a0-47a3c41c5e7e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'Controller_Thread' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 78\\] The 'Controller\\_Thread' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "aca50141-840a-34d9-9bfb-7b5f2ca70240" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'Controller_Thread' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 78\\] The 'Controller\\_Thread' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "3a71ec8b-f897-3d76-a8cd-e5f46b39231a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A15_4_4-a", "level": "error", "message": { "text": "The 'Controller_Thread' function should be declared 'noexcept'", "markdown": "**\\[Line 78\\] The 'Controller\\_Thread' function should be declared 'noexcept'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "0ddc89a2-d13b-33cc-8eb3-408fa193bed3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-MCPP-09", "level": "warning", "message": { "text": "The 'Controller_Thread' function should be declared 'noexcept'", "markdown": "**\\[Line 78\\] The 'Controller\\_Thread' function should be declared 'noexcept'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "71429900-785e-3314-8358-d470bf4f4560" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'Controller_Thread' has Cyclomatic Complexity value: 1", "markdown": "**\\[Line 78\\] Function 'Controller\\_Thread' has Cyclomatic Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "bd90b349-8d11-3a5f-ad67-3a1cf25b318f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'Controller_Thread' has Essential Complexity value: 1", "markdown": "**\\[Line 78\\] Function 'Controller\\_Thread' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "c66d0ceb-b740-32b4-8029-a3152dd2396c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-34", "level": "warning", "message": { "text": "The incorrect global function name Controller_Thread was found", "markdown": "**\\[Line 78\\] The incorrect global function name Controller\\_Thread was found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "190ecfc5-e191-30d5-8d71-d7ebadef70f7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The parameter of pointer or array type is declared", "markdown": "**\\[Line 78\\] The parameter of pointer or array type is declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "d2c14634-8820-3848-9f30-c1b3851c3b3f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The parameter of pointer type is declared", "markdown": "**\\[Line 78\\] The parameter of pointer type is declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-391064646", "unbViolId": "2fadece0-4dff-324e-9bfb-610189413c65" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 78, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 80\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2111304760", "unbViolId": "fb7bb36a-423a-36b2-8e64-ecfcca110e31" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 80, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 80\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2111304760", "unbViolId": "394f2e9e-fd65-389c-86ea-cb60a3ca82a5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 80, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 80\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2111304760", "unbViolId": "85d2be55-5ccc-3ff7-8483-ca84cb789b75" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 80, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 81\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "9d3639fb-0b0d-3c39-9d97-84e0782da904" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 81, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 81\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "9c4bdcc2-6c82-372a-a99a-dd378be65b8b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 81, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 81\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "3aae23a5-09f9-38af-86c4-c44f921ce7f3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 81, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-25_b", "level": "warning", "message": { "text": "'return' statement should be used with parenthesis", "markdown": "**\\[Line 81\\] 'return' statement should be used with parenthesis**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "c62d6ae3-9df3-3861-9669-72e0430e7720" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 81, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-5_4_1-a", "level": "warning", "message": { "text": "Use a C++-style cast instead of a C-style cast to the 'DWORD' type", "markdown": "**\\[Line 81\\] Use a C\\+\\+\\-style cast instead of a C\\-style cast to the 'DWORD' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "92243d41-afb6-3d13-b052-123ff0d36383" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 81, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-A5_2_2-a", "level": "error", "message": { "text": "Use a C++-style cast instead of a C-style cast to the 'DWORD' type", "markdown": "**\\[Line 81\\] Use a C\\+\\+\\-style cast instead of a C\\-style cast to the 'DWORD' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "fa4094c0-42a7-39c5-b8dd-faa27db33c0a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 81, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-CPP-11", "level": "warning", "message": { "text": "Use a C++-style cast instead of a C-style cast to the 'DWORD' type", "markdown": "**\\[Line 81\\] Use a C\\+\\+\\-style cast instead of a C\\-style cast to the 'DWORD' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "4107aacc-ee94-3647-bf26-5ec4c1177c0f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 81, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-185", "level": "error", "message": { "text": "Do not use a C-style cast to the 'DWORD' type", "markdown": "**\\[Line 81\\] Do not use a C\\-style cast to the 'DWORD' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "80cd449c-fc15-39b1-aeed-031a15a667d7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 81, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "MISRA2008-5_2_4", "level": "error", "message": { "text": "Do not use a C-style cast to the 'DWORD' type", "markdown": "**\\[Line 81\\] Do not use a C\\-style cast to the 'DWORD' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "cafa7868-6e2a-3e16-8dd6-43394b947c62" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 81, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-CPP-66", "level": "warning", "message": { "text": "Do not use a C-style cast to the 'DWORD' type", "markdown": "**\\[Line 81\\] Do not use a C\\-style cast to the 'DWORD' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "a4ef3309-4c2d-32b7-a38d-5ba3c26f1844" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 81, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "HICPP-4_2_2-b", "level": "warning", "message": { "text": "Cast to primitive type should not be used if possible", "markdown": "**\\[Line 81\\] Cast to primitive type should not be used if possible**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "cefa0408-670c-387f-a1ab-ce1e9bf858ad" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 81, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-183", "level": "warning", "message": { "text": "Cast to primitive type should not be used if possible", "markdown": "**\\[Line 81\\] Cast to primitive type should not be used if possible**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "2091af35-c0ec-306a-a853-ed596cad9107" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 81, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-31", "level": "warning", "message": { "text": "Cast to primitive type should not be used if possible", "markdown": "**\\[Line 81\\] Cast to primitive type should not be used if possible**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "466607007", "unbViolId": "666d2105-4eef-32b9-aa63-4803d6d36aee" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 81, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 86\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "f716485d-74f3-3c24-b45b-d402a1e3248c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 86\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "19f63563-a04d-3b6b-83ce-7ebfa3d3ed71" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 86\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "407fcbb2-fb1d-323f-9336-fa2609bc5148" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-062", "level": "warning", "message": { "text": "The operator '*', used for 'velocityArray' declaration, should be directly connected with the type", "markdown": "**\\[Line 86\\] The operator '\\*', used for 'velocityArray' declaration, should be directly connected with the type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "7f9fa950-8e34-3e4e-9c06-3388d542940d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "FORMAT-32", "level": "warning", "message": { "text": "The operator '*', used for 'velocityArray' declaration, should be directly connected with the type", "markdown": "**\\[Line 86\\] The operator '\\*', used for 'velocityArray' declaration, should be directly connected with the type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "ed42c126-1999-35db-bfdc-e04d8a6ce4a2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "OWASP2019-API9-e", "level": "warning", "message": { "text": "Global variable 'velocityArray' has external linkage and is not declared in the header", "markdown": "**\\[Line 86\\] Global variable 'velocityArray' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "b50397ed-d2dd-372b-87db-d21d2b96ff62" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-A3_3_1-a", "level": "error", "message": { "text": "Global variable 'velocityArray' has external linkage and is not declared in the header", "markdown": "**\\[Line 86\\] Global variable 'velocityArray' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "7eef2b69-e698-3014-967b-79046b1dc1bd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-137", "level": "warning", "message": { "text": "Global variable 'velocityArray' has external linkage and is not declared in the header", "markdown": "**\\[Line 86\\] Global variable 'velocityArray' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "de0b2d5e-3ad1-3a5a-a20a-6a827d721bf8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "MISRA-023", "level": "warning", "message": { "text": "Global variable 'velocityArray' has external linkage and is not declared in the header", "markdown": "**\\[Line 86\\] Global variable 'velocityArray' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "4b99d763-d02d-36fe-914a-9400c3057cd9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "MISRA2008-3_3_1", "level": "error", "message": { "text": "Global variable 'velocityArray' has external linkage and is not declared in the header", "markdown": "**\\[Line 86\\] Global variable 'velocityArray' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "3b78d5c9-e877-3cdb-95ad-3a1eb9bab78f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CERT_C-DCL15-a", "level": "warning", "message": { "text": "Global variable 'velocityArray' has external linkage and is not declared in the header", "markdown": "**\\[Line 86\\] Global variable 'velocityArray' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "9c4d7059-e678-3517-9c88-f82c932d6875" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "MISRA2004-8_10", "level": "warning", "message": { "text": "Global variable 'velocityArray' has external linkage and is not declared in the header", "markdown": "**\\[Line 86\\] Global variable 'velocityArray' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "1bc6d7cd-4add-36ee-8e3b-487044463415" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-051", "level": "warning", "message": { "text": "The name 'velocityArray' should be composed only of lowercase letters", "markdown": "**\\[Line 86\\] The name 'velocityArray' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "c5d499dc-9655-3750-850a-f90aa677a217" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-44", "level": "warning", "message": { "text": "The name 'velocityArray' should be composed only of lowercase letters", "markdown": "**\\[Line 86\\] The name 'velocityArray' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "0744173c-d540-3548-baf4-4d3fb9487b13" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "STL-37", "level": "warning", "message": { "text": "The 'velocityArray' array should not be used", "markdown": "**\\[Line 86\\] The 'velocityArray' array should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "d32dd0e3-f667-38ec-9a68-484c02a8e8b4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-A18_1_1-a", "level": "error", "message": { "text": "The 'velocityArray' array should not be used", "markdown": "**\\[Line 86\\] The 'velocityArray' array should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "a85379dc-e9d6-3e4b-86c8-84685c42d84f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "HICPP-8_1_1-a", "level": "warning", "message": { "text": "Declaration of variable 'velocityArray' contains more than one level of pointer indirection", "markdown": "**\\[Line 86\\] Declaration of variable 'velocityArray' contains more than one level of pointer indirection**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "ee66cb01-40f1-3850-9287-aedceb1f7b20" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-89", "level": "warning", "message": { "text": "Declaration of variable 'velocityArray' contains more than one level of pointer indirection", "markdown": "**\\[Line 86\\] Declaration of variable 'velocityArray' contains more than one level of pointer indirection**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "af6673cc-a90f-39ae-b585-a70a8a9d5370" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The variable of pointer or array type is declared: velocityArray", "markdown": "**\\[Line 86\\] The variable of pointer or array type is declared: velocityArray**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "f428a8a2-b339-3224-8a9e-9c8044d409e2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The variable of pointer type is declared: velocityArray", "markdown": "**\\[Line 86\\] The variable of pointer type is declared: velocityArray**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "9feb2424-9189-32a0-9802-0c2693e499e2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-207", "level": "warning", "message": { "text": "Do not define the 'velocityArray' global variable", "markdown": "**\\[Line 86\\] Do not define the 'velocityArray' global variable**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "b49fc321-5cca-37b2-ada7-3c78a02d326d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-CPP-82", "level": "warning", "message": { "text": "Do not define the 'velocityArray' global variable", "markdown": "**\\[Line 86\\] Do not define the 'velocityArray' global variable**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "28aec664-6e28-3b15-a5df-90816644ab5b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'velocityArray' variable should be commented", "markdown": "**\\[Line 86\\] The 'velocityArray' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "f443d52b-b5dc-3ee1-9151-fcf5b8f2c84c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'velocityArray' variable should be commented", "markdown": "**\\[Line 86\\] The 'velocityArray' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "9d413dd3-1eee-38d1-963a-d9a8c1291ee2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "HICPP-3_3_1-a", "level": "warning", "message": { "text": "Use of variable \"velocityArray\" with static storage duration is not allowed", "markdown": "**\\[Line 86\\] Use of variable \"velocityArray\" with static storage duration is not allowed**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "b1d55597-ed38-3327-a450-1c67bd566700" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "MISRA-022", "level": "note", "message": { "text": "Global variable 'velocityArray' is declared", "markdown": "**\\[Line 86\\] Global variable 'velocityArray' is declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "8702eed6-6983-3c08-8b6d-054e05423376" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-18", "level": "warning", "message": { "text": "Naming convention not followed: velocityArray", "markdown": "**\\[Line 86\\] Naming convention not followed: velocityArray**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "a2fa245c-a2d3-3e61-8022-323e07ff470b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-HN-01", "level": "warning", "message": { "text": "The 'velocityArray' identifier should have the 'rg' prefix", "markdown": "**\\[Line 86\\] The 'velocityArray' identifier should have the 'rg' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "2006fc03-aeea-3276-b9b7-7d6674ec3a01" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-M0_1_4-a", "level": "error", "message": { "text": "The 'velocityArray' variable has only one use", "markdown": "**\\[Line 86\\] The 'velocityArray' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "aebc0a6b-c745-316b-bb2d-efc30cba2dd2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "MISRA2008-0_1_4", "level": "error", "message": { "text": "The 'velocityArray' variable has only one use", "markdown": "**\\[Line 86\\] The 'velocityArray' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "62f78f19-4bb8-3e48-b068-339c73d880db" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "GLOBAL-ONEUSEVAR", "level": "warning", "message": { "text": "The 'velocityArray' variable has only one use", "markdown": "**\\[Line 86\\] The 'velocityArray' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "348867655", "unbViolId": "08feeadf-5362-3d5f-b0b9-c602e604c2f3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 86, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 88\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "eafcd9c3-3505-3366-a5f6-6a01b909114a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 88\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "c8f741b1-58c7-3217-a117-fa68f546b1ec" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 88\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "0a2469aa-43ac-3fd3-9d93-93f8425f428f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'Physics_Thread' function is not preceded by a comment", "markdown": "**\\[Line 88\\] The definition of the 'Physics\\_Thread' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "a705ff25-894b-334a-bad9-43aab8806409" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'Physics_Thread' function is not preceded by a comment", "markdown": "**\\[Line 88\\] The definition of the 'Physics\\_Thread' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "aa5f0a01-6cc0-3195-80c8-c5f84f5d7e06" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "OWASP2019-API9-e", "level": "warning", "message": { "text": "Function 'Physics_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 88\\] Function 'Physics\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "f087df8c-0a43-3680-b126-389489b2732e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A3_3_1-a", "level": "error", "message": { "text": "Function 'Physics_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 88\\] Function 'Physics\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "1fcc23c1-8ba2-3270-864d-4a091b8e6b1e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-137", "level": "warning", "message": { "text": "Function 'Physics_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 88\\] Function 'Physics\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "1a1c9027-717b-3a71-bf82-c41d185a07cc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA-023", "level": "warning", "message": { "text": "Function 'Physics_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 88\\] Function 'Physics\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "148ffdfa-c8bf-3a2c-863c-f5e5fa7ba4eb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2008-3_3_1", "level": "error", "message": { "text": "Function 'Physics_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 88\\] Function 'Physics\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "22f0f888-2dd0-3ed5-818c-c1471b3a96d7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CERT_C-DCL15-a", "level": "warning", "message": { "text": "Function 'Physics_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 88\\] Function 'Physics\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "6864d117-f13f-3a69-8ebd-5cbebe927244" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2004-8_10", "level": "warning", "message": { "text": "Function 'Physics_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 88\\] Function 'Physics\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "09d8a453-6d97-3b52-8e5d-05df491cf4b6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-051", "level": "warning", "message": { "text": "The name 'Physics_Thread' should be composed only of lowercase letters", "markdown": "**\\[Line 88\\] The name 'Physics\\_Thread' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "283c3630-9752-39c1-9c7e-f4aed23da4ba" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "NAMING-44", "level": "warning", "message": { "text": "The name 'Physics_Thread' should be composed only of lowercase letters", "markdown": "**\\[Line 88\\] The name 'Physics\\_Thread' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "151a69b1-978c-3111-806c-4bc3e1da0c9a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'Physics_Thread' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 88\\] The 'Physics\\_Thread' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "b5ff0b11-bfa6-3113-895b-0edae2e84849" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'Physics_Thread' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 88\\] The 'Physics\\_Thread' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "ce809790-18b4-35dd-b2e5-63fb052af88f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'Physics_Thread' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 88\\] The 'Physics\\_Thread' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "f6262c20-de7f-31ad-b441-a51f8636c4d9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'Physics_Thread' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 88\\] The 'Physics\\_Thread' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "afcf9a3e-51ab-34e9-80b5-867ced67f0af" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'Physics_Thread' has Cyclomatic Complexity value: 3", "markdown": "**\\[Line 88\\] Function 'Physics\\_Thread' has Cyclomatic Complexity value: 3**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "086bebbc-89a9-3968-97fb-a7c0175e5982" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'Physics_Thread' has Essential Complexity value: 1", "markdown": "**\\[Line 88\\] Function 'Physics\\_Thread' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "42551f7a-1af9-341c-8999-dd9d96806ebf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "NAMING-34", "level": "warning", "message": { "text": "The incorrect global function name Physics_Thread was found", "markdown": "**\\[Line 88\\] The incorrect global function name Physics\\_Thread was found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "9d453d45-ba29-3354-b442-0f7fcc7021f6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The parameter of pointer or array type is declared", "markdown": "**\\[Line 88\\] The parameter of pointer or array type is declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "dc932462-07b6-3d26-9420-bfd69f202e70" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 23, "endColumn": 24 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The parameter of pointer type is declared", "markdown": "**\\[Line 88\\] The parameter of pointer type is declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "465702038", "unbViolId": "caf60063-513a-385d-ba71-6f0c1c16d1e9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 88, "startColumn": 23, "endColumn": 24 } } } ] }, { "ruleId": "METRICS-19", "level": "warning", "message": { "text": "Percentage of comment lines vs. all method's lines is: 13", "markdown": "**\\[Line 89\\] Percentage of comment lines vs\\. all method's lines is: 13**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "402", "unbViolId": "71c1b92c-adaf-34b0-b3a9-c365a555e3bd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 89, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 89\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "402", "unbViolId": "8c71a8dc-c5ad-3550-b3a0-32727e5bc806" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 89, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 89\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "402", "unbViolId": "9697e790-8e1f-3164-8518-947048aa83fc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 89, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 89\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "402", "unbViolId": "2f2f2bb4-a02a-34cc-9c92-646646c8b133" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 89, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 90\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "81613b1b-e4d5-3286-9398-5fe88fb0d9d0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 90\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "be569e4e-8075-3068-b410-632c49b5bcb4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 90\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "d7e62f79-6cda-3ef5-80cb-5ab393b46598" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 90\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "253ef476-23d8-31aa-b7c3-793665fbd136" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 90\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "81418245-5f2a-3925-92e9-86c5980bf95e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 90\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "15770f4a-0aa1-3bba-9ceb-65376926cd08" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-43", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 90\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "c24f745c-4795-3118-becb-e951e789fd0f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_b", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 90\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "61ab19aa-022d-3261-ac21-dc004893b49e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-02", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 90\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "da224afe-e2a8-3fa0-916e-bd3b2e1cb85d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 90\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "2442f0c7-26a4-3f68-bcb9-dcbf85ed90df" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 90\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "0a1c31d5-9275-3ea3-93a7-11efb4920c68" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 90\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "8e8a9138-2197-30ea-9625-3f97746d5df8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "CODSTA-83", "level": "warning", "message": { "text": "A loop does not have a fixed upper nor lower bound", "markdown": "**\\[Line 90\\] A loop does not have a fixed upper nor lower bound**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "17e94f92-1954-316c-8126-2a82dfe2d2a1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "AUTOSAR-M5_3_1-a", "level": "error", "message": { "text": "The operand of logical operator '!' has 'int' type instead of 'bool' type", "markdown": "**\\[Line 90\\] The operand of logical operator '\\!' has 'int' type instead of 'bool' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "a7717b5a-da6a-3add-8ee7-ba360240798b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "CODSTA-CPP-67", "level": "warning", "message": { "text": "The operand of logical operator '!' has 'int' type instead of 'bool' type", "markdown": "**\\[Line 90\\] The operand of logical operator '\\!' has 'int' type instead of 'bool' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "56f6fa28-c937-3142-a555-2598bf572039" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "MISRA2008-5_3_1", "level": "error", "message": { "text": "The operand of logical operator '!' has 'int' type instead of 'bool' type", "markdown": "**\\[Line 90\\] The operand of logical operator '\\!' has 'int' type instead of 'bool' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "5799dadf-5681-3f06-b70b-7cfb44a51807" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "CODSTA-46", "level": "note", "message": { "text": "In 'Physics_Thread' function use positive logic rather than negative logic whenever possible", "markdown": "**\\[Line 90\\] In 'Physics\\_Thread' function use positive logic rather than negative logic whenever possible**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "369a336b-45d9-36c8-9a71-5d4ecea1d5d1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "MISRA2004-12_6_a", "level": "warning", "message": { "text": "The operand of logical operator '!' is not 'effectively Boolean'", "markdown": "**\\[Line 90\\] The operand of logical operator '\\!' is not 'effectively Boolean'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "0dbe6ecc-0459-3a76-8705-30758220492a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 91\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "a03dfb07-affa-31d5-bf03-14f2e3a723e9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 91\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "c86d4558-2fbd-38e6-93d9-008fff83f94a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 91\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "c9f321ec-df26-37e4-96b1-6228eed71fc4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-43", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 91\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "8beafa9e-bae1-3709-9be7-a9419f53b16b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_b", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 91\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "551f1ebf-81ec-3325-b807-957d76a3a619" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 91\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "06893f7e-a500-3a3d-bf14-a09b6fc36ea8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 91\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "9dcec5ad-f7a5-3a19-9791-861e53aa7caa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 91\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "60222f17-252d-3a61-ba77-dae1372daf6e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-02", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 91\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "07a06a7c-a05e-37a4-a5e4-b858cf430e9d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 91\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "f0ac2346-3591-3da3-bbca-f5d928209bbc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 91\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "939cb970-cfcc-3d91-988e-f24b4dbdb73f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 91\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "41841a79-a48f-32f4-ac63-f16e636c725d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 91\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "439ad1b3-863e-3c16-b347-0cf225b0a344" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 91\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "256081d6-6270-349f-a5d8-9fd7af1c33af" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 91\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "3c35b0f3-8fb6-3376-8a10-fd4a71558367" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-12", "level": "warning", "message": { "text": "Between conditional statement 'for' and its opening parenthesis '(' should be exactly one space", "markdown": "**\\[Line 91\\] Between conditional statement 'for' and its opening parenthesis '\\(' should be exactly one space**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "3f456468-84c1-3383-8fcd-e9098022c835" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "CDD-DUPC", "level": "warning", "message": { "text": "Duplicated code: 'for(int i = 0;'", "markdown": "**\\[Line 91\\] Duplicated code: 'for\\(int i = 0;'**  \n  \nReview duplicate in:&nbsp;DeadLock.cpp&nbsp;(91)  \nReview duplicate in:&nbsp;DeadLock.cpp&nbsp;(122)  \nReview duplicate in:&nbsp;MemoryLeak.cpp&nbsp;(9)" }, "partialFingerprints": { "violType": "DupViol", "lineHash": "1544355218", "unbViolId": "e0870911-a1b7-3e03-b0ee-aad7b0aa80fc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 4, "endColumn": 18 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 4, "endColumn": 18 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 4, "endColumn": 18 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 2, "endColumn": 17 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CODSTA-83", "level": "warning", "message": { "text": "A loop does not have a fixed upper nor lower bound", "markdown": "**\\[Line 91\\] A loop does not have a fixed upper nor lower bound**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "8f7218de-91fd-3f0b-8b63-f164b2db419e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 91\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "b3feb7f9-060f-3fe0-b6a1-35e6851cc959" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 91\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "3e5f0edf-a857-3748-a439-5bfd443e658f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CODSTA-223", "level": "warning", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 91\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "f6d884a8-8704-329a-abc4-4c2b29110b93" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A3_9_1-b", "level": "error", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 91\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "96f0f3f4-d564-30ea-a331-d9febaff2806" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "HICPP-7_1_6-b", "level": "warning", "message": { "text": "Do not use the 'int' standard integer type", "markdown": "**\\[Line 91\\] Do not use the 'int' standard integer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "f004e31c-34d7-30b0-8f22-cd73111abcb2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 91\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "8f188d20-2dcd-3784-acb4-c9cc20a2f8b4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 91\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "494824ee-0fc8-303d-b0cd-6617624dfd5a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 91\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "b19eed28-e45d-39df-af1a-587468e20715" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 91\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "1bc4eec8-d046-3693-91b8-c4344f624823" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 91\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "411a92ec-c4bc-3731-b68d-a3f2e01349f6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A8_5_2-a", "level": "error", "message": { "text": "The definition of the 'i' variable should contain a braced initializer", "markdown": "**\\[Line 91\\] The definition of the 'i' variable should contain a braced initializer**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "e408da32-2482-3d6b-9ebe-1f68c0787ded" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "CODSTA-MCPP-38", "level": "warning", "message": { "text": "The definition of the 'i' variable should contain a braced initializer", "markdown": "**\\[Line 91\\] The definition of the 'i' variable should contain a braced initializer**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "1583c845-e796-356b-b3e5-c213b5542ba7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PORT-13", "level": "warning", "message": { "text": "'i' shall be declared as unsigned int or signed int", "markdown": "**\\[Line 91\\] 'i' shall be declared as unsigned int or signed int**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "4485193a-5179-3da3-85fb-02a3cd3db2e2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "OPT-10", "level": "warning", "message": { "text": "Variable \"i\" declaration was found in control statement", "markdown": "**\\[Line 91\\] Variable \"i\" declaration was found in control statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "d61db1b7-9afe-3f41-b4ac-ef0424cdb16b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'i' variable should be commented", "markdown": "**\\[Line 91\\] The 'i' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "13d20fd0-6c9a-3dd9-8f76-6bf98d57d48d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'i' variable should be commented", "markdown": "**\\[Line 91\\] The 'i' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "59f940c2-a907-3586-8ed4-48afd4dc26c7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "OPT-04", "level": "warning", "message": { "text": "Postfix operator applied to variable 'i'; prefer prefix type", "markdown": "**\\[Line 91\\] Postfix operator applied to variable 'i'; prefer prefix type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "a3e63bd6-ab29-358b-9112-d2c6ce548c33" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 92\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "e395b40e-e7a1-3d99-a852-ac615697c171" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 92\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "7779d3c8-f1e1-3038-8c21-773c71f33cad" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 92\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "c22a2888-e88e-31ae-a036-445b52deeeee" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 92\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "70ee020f-61f3-3fa6-835e-9ce1aab79eee" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 92\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "1134cb33-73d8-3cf6-a932-a26febee612f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 92\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "3e2669e3-6da2-3fd3-a90c-d23a54112017" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 92\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "8cc07b42-5283-3939-88c1-2bd797fffb0a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 92\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "7cdad0c3-0d61-37d8-9c5a-3b0924cacc67" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 92\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "70b7cc09-d8e1-387d-90ec-41e353f939bd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 92\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "90a5db70-5a2a-37f0-908c-9237d036d344" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 92\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "1fe20a9d-df04-3e6a-be6c-1201d9deb7f7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 92\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "d7093046-be3a-32dc-a265-6c86d7c1cd77" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "CDD-DUPC", "level": "warning", "message": { "text": "Duplicated code: 'LOCK_ACQUIRE(changePositionMutex);'", "markdown": "**\\[Line 92\\] Duplicated code: 'LOCK\\_ACQUIRE\\(changePositionMutex\\);'**  \n  \nReview duplicate in:&nbsp;DeadLock.cpp&nbsp;(92)  \nReview duplicate in:&nbsp;DeadLock.cpp&nbsp;(118)" }, "partialFingerprints": { "violType": "DupViol", "lineHash": "-251104526", "unbViolId": "09acbe23-cdd4-3eb9-a218-095f3dda7e71" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 5, "endColumn": 39 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 5, "endColumn": 39 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 118, "startColumn": 4, "endColumn": 38 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CODSTA-CPP-23", "level": "note", "message": { "text": "The global function 'EnterCriticalSection' is called without scope resolution operator '::'", "markdown": "**\\[Line 92\\] The global function 'EnterCriticalSection' is called without scope resolution operator '::'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "15705ca2-425f-3753-a00b-1f8127f62fe3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 93\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1511312469", "unbViolId": "2b1e8067-ebc0-3a4a-b20b-a3d1729a4ab8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 93\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1511312469", "unbViolId": "edd6af89-16cf-302d-bd07-aabe8e2bf79e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 93\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1511312469", "unbViolId": "2d1a5b3b-d6a8-30e5-9c6c-b2ca3394fbd3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "BD-TRS-DIFCS", "level": "error", "message": { "text": "\"participants\" is used in two critical sections in context of single method, using one critical section will improve atomicity of operation", "markdown": "**\\[Line 93\\] \"participants\" is used in two critical sections in context of single method, using one critical section will improve atomicity of operation**  \n  \nDeadLock.cpp&nbsp;(90)&nbsp;:&nbsp;while \\(\\!exitGame\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\!exitGame \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(91)&nbsp;:&nbsp;for\\(int i = 0; i < participantsCount; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < participantsCount\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(92)&nbsp;:&nbsp;LOCK\\_ACQUIRE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Locking: &changePositionMutex_  \n**Usage of \"participants\" in first critical section**  \nDeadLock.cpp&nbsp;(93)&nbsp;:&nbsp;Point& position = participants\\[i\\]\\->getPosition\\(\\);  \n        Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \nDeadLock.cpp&nbsp;(94)&nbsp;:&nbsp;position\\.translate\\(\\*velocityArray\\[i\\]\\);  \n        Point.hpp&nbsp;(15)&nbsp;:&nbsp;\\_x \\+= vector\\.\\_x;  \n        Point.hpp&nbsp;(16)&nbsp;:&nbsp;\\_y \\+= vector\\.\\_y;  \nDeadLock.cpp&nbsp;(95)&nbsp;:&nbsp;ring\\.contains\\(\\.\\.\\.\\)  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;getPosition\\(\\)  \n                Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;point\\.squareDistanceTo\\(\\.\\.\\.\\)  \n                Point.hpp&nbsp;(21)&nbsp;:&nbsp;return \\(\\(\\_x \\- point\\.\\_x\\) \\* \\(\\_x \\- point\\.\\_x\\)\\) \\+ \\(\\(\\_y \\- point\\.\\_y\\) \\* \\(\\_y \\- point\\.\\_y\\)\\);  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;return point\\.squareDistanceTo\\(getPosition\\(\\)\\) <= \\(\\_radius \\* \\_radius\\);  \nDeadLock.cpp&nbsp;(95)&nbsp;:&nbsp;assertion\\(ring\\.contains\\(position\\), \"Participant is out of ring\"\\);  \n        DeadLock.cpp&nbsp;(60)&nbsp;:&nbsp;if \\(\\!condition\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\!condition \\(assuming false\\)_  \nDeadLock.cpp&nbsp;(98)&nbsp;:&nbsp;LOCK\\_RELEASE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Unlocking: &changePositionMutex_  \nDeadLock.cpp&nbsp;(91)&nbsp;:&nbsp;for\\(int i = 0; i < participantsCount; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < participantsCount\\) \\(true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(92)&nbsp;:&nbsp;LOCK\\_ACQUIRE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Locking: &changePositionMutex_  \n**Usage of \"participants\" in second critical section**&nbsp;  \nDeadLock.cpp&nbsp;(93)&nbsp;:&nbsp;Point& position = participants\\[i\\]\\->getPosition\\(\\);" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "-1511312469", "unbViolId": "921247d8-c6c2-3403-bb20-443ebb4ba8c6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: !exitGame (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < participantsCount) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 1 } }, "message": { "text": "  *** Locking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 1 } }, "message": { "text": "Violation Cause - Usage of \"participants\" in first critical section" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 2 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 21, "startColumn": 1 } } }, "nestingLevel": 2 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: !condition (assuming false)" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 98, "startColumn": 1 } }, "message": { "text": "  *** Unlocking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < participantsCount) (true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 1 } }, "message": { "text": "  *** Locking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 1 } }, "message": { "text": "Violation Point - Usage of \"participants\" in second critical section" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 93\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1511312469", "unbViolId": "46d87775-4914-323e-b2bd-dc9380e10bc5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 93\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1511312469", "unbViolId": "a03f4590-de10-3a95-9eb7-9c79176d5c35" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 93\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1511312469", "unbViolId": "c2e940bf-6810-3fdc-9c66-c101e0c56357" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 93\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1511312469", "unbViolId": "7ee22bc8-8859-3853-bf3b-26e29035eb07" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 93\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1511312469", "unbViolId": "9a385b6f-2a55-3a9e-aa0d-830241e9feff" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 93\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1511312469", "unbViolId": "3aea3af3-1405-35bb-9796-0b016d8e58b6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 93\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1511312469", "unbViolId": "136bd706-7d3a-369b-ae9c-913ca1b8beb6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 93\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1511312469", "unbViolId": "01272adc-3db6-346e-9ada-1937bf3f52f3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 93\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1511312469", "unbViolId": "7ced4c82-0474-30ea-9702-5c623ab7a54f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "AUTOSAR-A8_5_2-a", "level": "error", "message": { "text": "The definition of the 'position' variable should contain a braced initializer", "markdown": "**\\[Line 93\\] The definition of the 'position' variable should contain a braced initializer**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1511312469", "unbViolId": "db80861c-051b-30d4-a87f-af63a8d28784" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "CODSTA-MCPP-38", "level": "warning", "message": { "text": "The definition of the 'position' variable should contain a braced initializer", "markdown": "**\\[Line 93\\] The definition of the 'position' variable should contain a braced initializer**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1511312469", "unbViolId": "8c9aa854-dd48-307a-a3d8-08205446be14" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "CODSTA-MCPP-08_a", "level": "error", "message": { "text": "The 'position' variable should be declared with the 'auto&' type specifier", "markdown": "**\\[Line 93\\] The 'position' variable should be declared with the 'auto&' type specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1511312469", "unbViolId": "8df1fbaf-e63f-3b61-a495-9c195218adc7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "OPT-10", "level": "warning", "message": { "text": "Variable \"position\" declaration was found in control statement", "markdown": "**\\[Line 93\\] Variable \"position\" declaration was found in control statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1511312469", "unbViolId": "36da3c7c-145e-3561-b822-714f02727c92" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'position' variable should be commented", "markdown": "**\\[Line 93\\] The 'position' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1511312469", "unbViolId": "83e1eee1-617d-3308-bbc3-412ba9ba91fa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'position' variable should be commented", "markdown": "**\\[Line 93\\] The 'position' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1511312469", "unbViolId": "6cc30b0b-b94a-3917-80ca-a35f4d9a1c60" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "HICPP-7_1_8-a", "level": "warning", "message": { "text": "Variable 'position' should be declared using 'auto' specifier", "markdown": "**\\[Line 93\\] Variable 'position' should be declared using 'auto' specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1511312469", "unbViolId": "dbdfb6b9-047a-3e68-97b7-00a353601e4e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 94\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "929435952", "unbViolId": "95ee2a06-d11f-34aa-a3d7-a892157d5005" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 94\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "929435952", "unbViolId": "c4837f79-e7c6-3696-9795-3907ce5bab8b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 94\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "929435952", "unbViolId": "117e2ad9-6565-3ea5-9a25-84266a8b7ae9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "BD-TRS-DIFCS", "level": "error", "message": { "text": "\"velocityArray\" is used in two critical sections in context of single method, using one critical section will improve atomicity of operation", "markdown": "**\\[Line 94\\] \"velocityArray\" is used in two critical sections in context of single method, using one critical section will improve atomicity of operation**  \n  \nDeadLock.cpp&nbsp;(90)&nbsp;:&nbsp;while \\(\\!exitGame\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\!exitGame \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(91)&nbsp;:&nbsp;for\\(int i = 0; i < participantsCount; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < participantsCount\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(92)&nbsp;:&nbsp;LOCK\\_ACQUIRE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Locking: &changePositionMutex_  \nDeadLock.cpp&nbsp;(93)&nbsp;:&nbsp;Point& position = participants\\[i\\]\\->getPosition\\(\\);  \n        Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \n**Usage of \"velocityArray\" in first critical section**  \nDeadLock.cpp&nbsp;(94)&nbsp;:&nbsp;position\\.translate\\(\\*velocityArray\\[i\\]\\);  \n        Point.hpp&nbsp;(15)&nbsp;:&nbsp;\\_x \\+= vector\\.\\_x;  \n        Point.hpp&nbsp;(16)&nbsp;:&nbsp;\\_y \\+= vector\\.\\_y;  \nDeadLock.cpp&nbsp;(95)&nbsp;:&nbsp;ring\\.contains\\(\\.\\.\\.\\)  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;getPosition\\(\\)  \n                Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;point\\.squareDistanceTo\\(\\.\\.\\.\\)  \n                Point.hpp&nbsp;(21)&nbsp;:&nbsp;return \\(\\(\\_x \\- point\\.\\_x\\) \\* \\(\\_x \\- point\\.\\_x\\)\\) \\+ \\(\\(\\_y \\- point\\.\\_y\\) \\* \\(\\_y \\- point\\.\\_y\\)\\);  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;return point\\.squareDistanceTo\\(getPosition\\(\\)\\) <= \\(\\_radius \\* \\_radius\\);  \nDeadLock.cpp&nbsp;(95)&nbsp;:&nbsp;assertion\\(ring\\.contains\\(position\\), \"Participant is out of ring\"\\);  \n        DeadLock.cpp&nbsp;(60)&nbsp;:&nbsp;if \\(\\!condition\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\!condition \\(assuming false\\)_  \nDeadLock.cpp&nbsp;(98)&nbsp;:&nbsp;LOCK\\_RELEASE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Unlocking: &changePositionMutex_  \nDeadLock.cpp&nbsp;(91)&nbsp;:&nbsp;for\\(int i = 0; i < participantsCount; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < participantsCount\\) \\(true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(92)&nbsp;:&nbsp;LOCK\\_ACQUIRE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Locking: &changePositionMutex_  \nDeadLock.cpp&nbsp;(93)&nbsp;:&nbsp;Point& position = participants\\[i\\]\\->getPosition\\(\\);  \n        Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \n**Usage of \"velocityArray\" in second critical section**&nbsp;  \nDeadLock.cpp&nbsp;(94)&nbsp;:&nbsp;position\\.translate\\(\\*velocityArray\\[i\\]\\);" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "929435952", "unbViolId": "ebae6bfc-be46-35f6-90d4-a3cac1079d18" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: !exitGame (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < participantsCount) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 1 } }, "message": { "text": "  *** Locking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 1 } }, "message": { "text": "Violation Cause - Usage of \"velocityArray\" in first critical section" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 2 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 21, "startColumn": 1 } } }, "nestingLevel": 2 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: !condition (assuming false)" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 98, "startColumn": 1 } }, "message": { "text": "  *** Unlocking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < participantsCount) (true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 1 } }, "message": { "text": "  *** Locking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 1 } }, "message": { "text": "Violation Point - Usage of \"velocityArray\" in second critical section" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 94\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "929435952", "unbViolId": "b301f118-cb3a-36e6-9dee-d3ede5f7fdaa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 94\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "929435952", "unbViolId": "023d88d3-f9f1-3fe5-a911-922eb42e592e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 94\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "929435952", "unbViolId": "fd630229-ae43-3ac7-885a-4b70ecfdb988" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 94\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "929435952", "unbViolId": "6fd9fd2f-48f7-3249-8f8f-d903883e65f2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 94\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "929435952", "unbViolId": "725838ba-16b7-34c6-be17-76d6480b0e80" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 94\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "929435952", "unbViolId": "a9be93ed-2d83-3041-83f2-5051d39cfab0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 94\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "929435952", "unbViolId": "179239e6-0e3c-3e7b-a9c7-525aee7d3dab" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 94\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "929435952", "unbViolId": "e1e7e00f-c713-3212-85a2-12ccab118c4d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 94\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "929435952", "unbViolId": "0069a522-25ac-3d9e-ab8c-c838b8d11d7f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "PB-01", "level": "warning", "message": { "text": "Dereferenced pointer type expression should not be used", "markdown": "**\\[Line 94\\] Dereferenced pointer type expression should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "929435952", "unbViolId": "ea941404-8dcb-3012-a3f0-71b19e47a7f7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 95\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1599411881", "unbViolId": "7e596f1b-9759-34c0-846e-4de04e10be24" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 95\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1599411881", "unbViolId": "c9bf7687-6aea-3853-a02d-03c26f723570" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 95\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1599411881", "unbViolId": "12512c38-73ef-3e84-9c1b-163a48857508" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "BD-TRS-DIFCS", "level": "error", "message": { "text": "\"ring\" is used in two critical sections in context of single method, using one critical section will improve atomicity of operation", "markdown": "**\\[Line 95\\] \"ring\" is used in two critical sections in context of single method, using one critical section will improve atomicity of operation**  \n  \nDeadLock.cpp&nbsp;(90)&nbsp;:&nbsp;while \\(\\!exitGame\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\!exitGame \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(91)&nbsp;:&nbsp;for\\(int i = 0; i < participantsCount; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < participantsCount\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(92)&nbsp;:&nbsp;LOCK\\_ACQUIRE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Locking: &changePositionMutex_  \nDeadLock.cpp&nbsp;(93)&nbsp;:&nbsp;Point& position = participants\\[i\\]\\->getPosition\\(\\);  \n        Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \nDeadLock.cpp&nbsp;(94)&nbsp;:&nbsp;position\\.translate\\(\\*velocityArray\\[i\\]\\);  \n        Point.hpp&nbsp;(15)&nbsp;:&nbsp;\\_x \\+= vector\\.\\_x;  \n        Point.hpp&nbsp;(16)&nbsp;:&nbsp;\\_y \\+= vector\\.\\_y;  \n**Usage of \"ring\" in first critical section**  \nDeadLock.cpp&nbsp;(95)&nbsp;:&nbsp;ring\\.contains\\(\\.\\.\\.\\)  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;getPosition\\(\\)  \n                Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;point\\.squareDistanceTo\\(\\.\\.\\.\\)  \n                Point.hpp&nbsp;(21)&nbsp;:&nbsp;return \\(\\(\\_x \\- point\\.\\_x\\) \\* \\(\\_x \\- point\\.\\_x\\)\\) \\+ \\(\\(\\_y \\- point\\.\\_y\\) \\* \\(\\_y \\- point\\.\\_y\\)\\);  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;return point\\.squareDistanceTo\\(getPosition\\(\\)\\) <= \\(\\_radius \\* \\_radius\\);  \nDeadLock.cpp&nbsp;(95)&nbsp;:&nbsp;assertion\\(ring\\.contains\\(position\\), \"Participant is out of ring\"\\);  \n        DeadLock.cpp&nbsp;(60)&nbsp;:&nbsp;if \\(\\!condition\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\!condition \\(assuming false\\)_  \nDeadLock.cpp&nbsp;(98)&nbsp;:&nbsp;LOCK\\_RELEASE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Unlocking: &changePositionMutex_  \nDeadLock.cpp&nbsp;(91)&nbsp;:&nbsp;for\\(int i = 0; i < participantsCount; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < participantsCount\\) \\(true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(92)&nbsp;:&nbsp;LOCK\\_ACQUIRE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Locking: &changePositionMutex_  \nDeadLock.cpp&nbsp;(93)&nbsp;:&nbsp;Point& position = participants\\[i\\]\\->getPosition\\(\\);  \n        Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \nDeadLock.cpp&nbsp;(94)&nbsp;:&nbsp;position\\.translate\\(\\*velocityArray\\[i\\]\\);  \n        Point.hpp&nbsp;(15)&nbsp;:&nbsp;\\_x \\+= vector\\.\\_x;  \n        Point.hpp&nbsp;(16)&nbsp;:&nbsp;\\_y \\+= vector\\.\\_y;  \n**Usage of \"ring\" in second critical section**&nbsp;  \nDeadLock.cpp&nbsp;(95)&nbsp;:&nbsp;ring\\.contains\\(\\.\\.\\.\\)" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "-1599411881", "unbViolId": "c6ae9bc1-d1f8-3eba-acfe-4b87fc939aae" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: !exitGame (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < participantsCount) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 1 } }, "message": { "text": "  *** Locking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 1 } }, "message": { "text": "Violation Cause - Usage of \"ring\" in first critical section" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 2 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 21, "startColumn": 1 } } }, "nestingLevel": 2 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: !condition (assuming false)" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 98, "startColumn": 1 } }, "message": { "text": "  *** Unlocking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < participantsCount) (true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 1 } }, "message": { "text": "  *** Locking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 1 } }, "message": { "text": "Violation Point - Usage of \"ring\" in second critical section" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 95\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1599411881", "unbViolId": "80b5e63b-4a60-38e7-8948-6a4bea74abc3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 95\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1599411881", "unbViolId": "a46ffadb-55b0-3e33-af22-9abac40d7eb4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 95\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1599411881", "unbViolId": "16af10d6-e4b1-3ba6-9eea-8be45e59f568" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 95\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1599411881", "unbViolId": "71e4de5f-9a03-388b-8a60-a11079db1c42" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 95\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1599411881", "unbViolId": "da0106d2-eb13-36ff-96a2-37eb89fadc27" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 95\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1599411881", "unbViolId": "f7fcab11-ed30-3d71-9738-b10b6102b26c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 95\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1599411881", "unbViolId": "2029f74e-4d31-30b6-8459-a84c87c9b382" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 95\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1599411881", "unbViolId": "0123f252-9659-3a42-88c0-44279c24239c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 95\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1599411881", "unbViolId": "9488ed13-d4cd-3e39-87ee-061560e9da6c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "CODSTA-CPP-23", "level": "note", "message": { "text": "The global function 'assertion' is called without scope resolution operator '::'", "markdown": "**\\[Line 95\\] The global function 'assertion' is called without scope resolution operator '::'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1599411881", "unbViolId": "1c6dce99-9f18-3555-8a5f-ba9fa883ac12" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "CWE-798-a", "level": "note", "message": { "text": "The string literal is embedded directly in the code: Participant is out of ring", "markdown": "**\\[Line 95\\] The string literal is embedded directly in the code: Participant is out of ring**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1599411881", "unbViolId": "61b197c0-47b1-3b4b-be8b-99ae7218c22c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "CODSTA-203", "level": "note", "message": { "text": "The string literal is embedded directly in the code: Participant is out of ring", "markdown": "**\\[Line 95\\] The string literal is embedded directly in the code: Participant is out of ring**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1599411881", "unbViolId": "c6c2df7f-3344-340c-9b63-0bee08fd5a45" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "APSC_DV-003110-a", "level": "error", "message": { "text": "The string literal is embedded directly in the code: Participant is out of ring", "markdown": "**\\[Line 95\\] The string literal is embedded directly in the code: Participant is out of ring**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1599411881", "unbViolId": "0dd6251e-b08a-3bad-82e8-773997f06fe9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "CERT_C-MSC41-a", "level": "error", "message": { "text": "The string literal is embedded directly in the code: Participant is out of ring", "markdown": "**\\[Line 95\\] The string literal is embedded directly in the code: Participant is out of ring**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1599411881", "unbViolId": "2bbb1aee-25a1-3cd1-aaa9-1f29f684ffe4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "AUTOSAR-A27_0_4-d", "level": "error", "message": { "text": "The string literal should not be passed as an argument of the 'const char *' type in the 'assertion' function call", "markdown": "**\\[Line 95\\] The string literal should not be passed as an argument of the 'const char \\*' type in the 'assertion' function call**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1599411881", "unbViolId": "d21d9e36-e646-34f7-a2f0-2c3ec79180bf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "PB-76", "level": "warning", "message": { "text": "The string literal should not be passed as an argument of the 'const char *' type in the 'assertion' function call", "markdown": "**\\[Line 95\\] The string literal should not be passed as an argument of the 'const char \\*' type in the 'assertion' function call**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1599411881", "unbViolId": "2bbf812c-9c6b-3c47-a320-50600acb53c7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "77e50e04-3186-3f57-8939-eedc870aba35" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "0e923748-de3b-3204-a085-076d8b507742" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "10a63510-c5c3-3fa4-8339-96ddd630a5c1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "b37609bb-6f11-3d9e-b910-8a664a1a37ab" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "848b614f-beb4-3bfd-bcd0-4697b030426e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "928b2f4b-bb4f-3e1d-ad98-23c137cb0234" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "f8720327-f2d1-34a3-8e41-058e14e8a1c1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "3e4765c0-7e8a-308a-979c-eea50907b395" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "0f1b9c2a-b045-3d0e-be01-09da0715ee68" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "276843fc-d47a-346f-a9ff-2fcd4a7ccbf3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "42627665-89b8-3b9c-b552-701bbacfaa2a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "76dc96e7-3dd6-3291-ab6f-081ae4235082" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "2af545ed-579f-318b-98f1-d7ba29b81fd9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "4c1ee5b8-cfab-384d-b1b2-0c35f8941813" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "81bf708a-770b-355b-b18b-08934d7ccb35" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "f7d629a7-3d99-3a01-af63-7adf58082390" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "53149acf-6c41-3bcb-96b9-177a81e59737" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "4409a8c7-0add-34c3-ad1d-df0a4a291a53" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "183bdd6b-834a-35ec-9b8b-e3f2062d5ed7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "efe70474-624e-3f33-8e06-58bcc9b74243" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "16dc43db-ef2e-3eeb-bedc-5c70fe24423e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "92c59efa-af33-306f-a2b8-b9f7f945c611" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "c54aae5c-954d-37d6-aea8-ff2c721a36c9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "d946201f-108a-37c0-9cd9-802ea1d808e5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "86dc1f60-78c0-3ecf-b8a0-261999e1d93b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "5b752c46-0db3-342c-b883-6f0c56b16b48" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "723b5695-65d7-3adc-9f90-fd5b0c30a541" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "3d5c143d-8b5e-3799-9596-24b30219bc76" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "608a2743-5ecc-3398-b06a-b8bea05c4dcc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "4685c483-f2df-3495-bf35-d6d5d3bb481b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "06ec2760-46e6-3acb-b959-e9279d7c92ea" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "8d6e6865-c268-315c-bfab-681e71581d77" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "6ef842f0-ee2f-392d-a7a6-2af26b4222ed" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "09406a34-4fe8-3003-a426-36547f55bdd9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "bb20ac1e-1026-3d32-90e2-b23363b968d3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 96\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "45336831", "unbViolId": "6c13411a-9f6a-3513-887e-87acf13af440" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 96, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "a4fcf616-37cb-3e5f-a027-6da310e693c0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "687dd6b5-0b2d-3033-a4c1-98c4e375bfb9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "9e73e060-7fc0-39ab-a6eb-bc70f725d371" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "2ba12c99-bbfb-3b29-9880-53cc1db2b3fd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "f0b46740-c04d-3eea-a406-c6a6e0b1436b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "174982c2-4ae4-3388-9e48-0d7a2531e2bb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "39d612c0-9a26-3478-94b7-4c29e0944a67" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "e8170f4e-05f1-3f5a-976b-19dcbcd85bcf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "dfd02b58-6573-3679-9727-76f3fc8dc485" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "1c2acdd3-226b-3caa-80c5-9c43d552e148" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "5f243842-4a30-3079-9af8-214a1687abab" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "5118faca-262f-386e-acf9-a31abc5e0ea1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "d2c07539-3a02-346b-9878-e71317fb7734" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "ecd34ce5-d760-3ac6-bce3-1ac54eaf16e7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "15a09ebd-73ef-3fae-975f-45b2c7fcba59" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "f584c1c2-1803-35ed-a885-979a57453c6c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "17ab23db-26bd-3352-bf87-493e1fe56937" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "339bb69b-af72-3715-a1a6-1e1a0e06fd46" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "37319a69-9685-3789-8d51-a8fdab55510a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "106752ec-babb-3add-82f0-de00723e4e28" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "b825feff-1fcf-398f-b8d3-50cc1a5475e2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "4b879bee-7d9b-3e71-9190-fbc7298cbfd3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "38c633d1-e3d9-3ac7-bdc7-bbc2074da4e1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "ddc3598c-3451-3ad0-a2a8-bc547f736234" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "0bcd852e-ee10-3a1d-a5c8-8fb374ad2bd5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "7437d972-259c-340d-bda0-eac947131221" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "e7062484-3293-32b3-9b35-7935b5af9769" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "717dfdca-a56a-3df9-9c18-2e8b6574c2b3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "f9ab0acb-2fee-37b7-8161-354a8abed09b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "2d0eb1eb-1416-3132-99fb-fe48fb43b3e9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "d294ae7c-8fe7-3b08-bd42-aa42b930cafe" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "91a68ed3-455c-3e6d-853e-c03d096966b9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "dd39c1e0-23c3-3500-82ae-e926727c5898" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "2ba2fc0f-e691-3d62-b542-505f9c46ee66" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "09939e60-6217-3341-87d9-185713799392" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 97\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1567381877", "unbViolId": "d92df9c8-f9c6-34a5-ba0a-69ae027e2179" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 97, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 98\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "3367cd61-5f33-394c-9d9e-659ecb819fd0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 98, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 98\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "63c2a017-7e0c-3355-b7a5-b21b72c42da8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 98, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 98\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "c68463b4-67dd-3d1a-88ba-b3ef4639c761" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 98, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 98\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "fff3af34-5f11-37b8-9e88-e35ede168c26" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 98, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 98\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "e7eb4db8-b5ef-32a7-a19c-b2e36e2a77a3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 98, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 98\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "a5ad54b0-5d76-361e-b339-da40e3eb7b46" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 98, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 98\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "5462a076-535c-336e-864a-a0d8017fbad2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 98, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 98\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "7ca905be-a275-3e83-af68-ba0914b34de3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 98, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 98\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "99cb50d2-e597-38ea-95d3-cb01ef4d47e5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 98, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 98\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "0af875b4-cf5b-3682-bf4a-3a09cd3f1198" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 98, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 98\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "4f59af60-a57c-3921-a0f7-6e7c82ea6d84" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 98, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 98\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "062e6e60-ac17-3bd2-be9a-cde7c4df3c1d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 98, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "CODSTA-CPP-23", "level": "note", "message": { "text": "The global function 'LeaveCriticalSection' is called without scope resolution operator '::'", "markdown": "**\\[Line 98\\] The global function 'LeaveCriticalSection' is called without scope resolution operator '::'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "eaa9bd6b-1a6e-3496-b480-ff6d6750f2b8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 98, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 99\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "277172", "unbViolId": "394cf257-3a7e-35cc-b0cd-26c09205243f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 99, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 99\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "277172", "unbViolId": "3e252ce6-aa92-3104-9106-45ea69451c6f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 99, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 99\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "277172", "unbViolId": "cb8ccbd6-0312-3d25-a2a7-f46308e70fda" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 99, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 99\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "277172", "unbViolId": "afa5e577-412f-307c-a295-a484187b9ecf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 99, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 99\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "277172", "unbViolId": "cbeff458-2526-3546-ab0c-bd0d332c91a8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 99, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 99\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "277172", "unbViolId": "990f459d-06a2-338e-bf85-791a25abd99c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 99, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 99\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "277172", "unbViolId": "2cef2c2c-cc55-3051-8f86-ad0342a44558" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 99, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 99\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "277172", "unbViolId": "48dd9470-4ba1-3002-beed-0e904c0fb8ea" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 99, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 99\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "277172", "unbViolId": "b8abe1cf-a8a2-301a-8152-bc2128abc9f5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 99, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 100\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "6c4f5c27-bbb5-308f-baa6-0fd8b9f50a34" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 100, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 100\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "28caad2b-a319-3ea6-8fca-a91980fc18d4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 100, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 100\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "1d456624-43b0-30bb-abbd-1ec55b01a738" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 100, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 100\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "72b6a5e2-4aa4-3eda-bcba-4a63034b3279" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 100, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 100\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "9bd981e5-c30a-38d2-acd4-3337ff7f8ae6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 100, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 100\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "6bc01e7b-cddd-351a-b413-41ec32f4d410" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 100, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 100\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "9edb4a70-a878-3d5a-b566-e2c46c4fa0f8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 100, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 100\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "05575457-81cd-3b1b-8ad9-df15ec40ccae" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 100, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 100\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "8a0426c7-39fc-3841-ac98-1f41cca2277e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 100, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "CDD-DUPC", "level": "warning", "message": { "text": "Duplicated code: 'SLEEP(STEP);'", "markdown": "**\\[Line 100\\] Duplicated code: 'SLEEP\\(STEP\\);'**  \n  \nReview duplicate in:&nbsp;DeadLock.cpp&nbsp;(100)  \nReview duplicate in:&nbsp;DeadLock.cpp&nbsp;(128)" }, "partialFingerprints": { "violType": "DupViol", "lineHash": "1234365944", "unbViolId": "ac9a8961-b32e-34b4-a50b-7b26ed8c3b7a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 100, "startColumn": 4, "endColumn": 16 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 100, "startColumn": 4, "endColumn": 16 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 128, "startColumn": 4, "endColumn": 16 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CODSTA-CPP-23", "level": "note", "message": { "text": "The global function 'Sleep' is called without scope resolution operator '::'", "markdown": "**\\[Line 100\\] The global function 'Sleep' is called without scope resolution operator '::'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "abc651ed-48f1-336c-aa76-e543baadc9b5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 100, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'int' of function argument number '1' does not match declared type 'unsigned long'", "markdown": "**\\[Line 100\\] The type 'int' of function argument number '1' does not match declared type 'unsigned long'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "59943bfc-ba97-3022-8095-9581f7b0bdac" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 100, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '1' shall not be used", "markdown": "**\\[Line 100\\] Implicit conversion between signed and unsigned type in the function call on argument '1' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "6b2b2c77-273c-32c4-b816-339c8e27c433" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 100, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '1' shall not be used", "markdown": "**\\[Line 100\\] Implicit conversion between signed and unsigned type in the function call on argument '1' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "241bce0d-095c-3f41-aa24-4b58987ff520" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 100, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '1' shall not be used", "markdown": "**\\[Line 100\\] Implicit conversion between signed and unsigned type in the function call on argument '1' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "00df4b8c-ef6e-3238-8296-0c39e95d2309" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 100, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 20", "markdown": "**\\[Line 100\\] A 'U' suffix shall be applied to constant: 20**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "d1015840-9c3b-3cc0-89b3-e1bd0cd7de59" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 100, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 101\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "9053", "unbViolId": "a71bf336-ea58-39f9-8190-0d33f16684bf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 101, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 101\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "9053", "unbViolId": "84bb2162-e547-3780-b0ed-c539ce33abb4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 101, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 101\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "9053", "unbViolId": "bec47f3f-1774-3ffc-8af5-e4b4ce5f8193" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 101, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 101\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "9053", "unbViolId": "77c1e325-a0a0-325b-bf32-865a4fc4181b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 101, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 101\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "9053", "unbViolId": "e26bb64e-ca54-3e1d-9f17-64daf497defc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 101, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 101\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "9053", "unbViolId": "13344668-5545-38cc-89e4-a15fad48c3cb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 101, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 102\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "b8597144-0066-358f-9aa3-7afbf6df57c6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 102, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 102\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "2fbdc6e2-d489-3b7e-b972-e38d88401efb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 102, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 102\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "802cc356-1def-31c1-9004-c30fa765d8e9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 102, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 102\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "1f974ea2-ec58-3c76-b31d-de356c810d83" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 102, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 102\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "e4d2477a-415e-353c-8451-9b9fcaf0400a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 102, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 102\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "7dfd011c-b1a3-3a48-8e04-a6a7ffdbb862" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 102, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-25_b", "level": "warning", "message": { "text": "'return' statement should be used with parenthesis", "markdown": "**\\[Line 102\\] 'return' statement should be used with parenthesis**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "9a3b3fb2-1edf-353c-a713-549147134415" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 102, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "CDD-DUPC", "level": "warning", "message": { "text": "Duplicated code: 'return 0;'", "markdown": "**\\[Line 102\\] Duplicated code: 'return 0;'**  \n  \nReview duplicate in:&nbsp;DeadLock.cpp&nbsp;(102)  \nReview duplicate in:&nbsp;DeadLock.cpp&nbsp;(130)  \nReview duplicate in:&nbsp;NullPointer.cpp&nbsp;(13)  \nReview duplicate in:&nbsp;Shapes.hpp&nbsp;(19)" }, "partialFingerprints": { "violType": "DupViol", "lineHash": "-1688062501", "unbViolId": "baa37bae-bea1-384b-b5b5-6a7a3e8a1a7a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 102, "startColumn": 3, "endColumn": 12 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 102, "startColumn": 3, "endColumn": 12 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 130, "startColumn": 3, "endColumn": 12 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 2, "endColumn": 11 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 30, "endColumn": 39 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function return statement shall not be used", "markdown": "**\\[Line 102\\] Implicit conversion between signed and unsigned type in the function return statement shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "42ba142a-48ca-3ffb-aad2-cc5f504b9c1b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 102, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function return statement shall not be used", "markdown": "**\\[Line 102\\] Implicit conversion between signed and unsigned type in the function return statement shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "1feaefcd-887d-319b-aae0-b629871d5b90" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 102, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function return statement shall not be used", "markdown": "**\\[Line 102\\] Implicit conversion between signed and unsigned type in the function return statement shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "3463664f-de9a-3048-a547-92cc1b18e7f8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 102, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "PB-05", "level": "warning", "message": { "text": "Function 'Physics_Thread' has declared return type 'unsigned long' but returns value of type 'int'", "markdown": "**\\[Line 102\\] Function 'Physics\\_Thread' has declared return type 'unsigned long' but returns value of type 'int'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "d661fe98-926b-3bc0-98b1-b16586682c4e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 102, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "AUTOSAR-M2_13_3-a", "level": "error", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 102\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "6980d153-1e8d-3a3f-ab4b-17bb181c63ca" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 102, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "CODSTA-68", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 102\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "68043cc8-6779-3610-9e5b-d11e6c3bd15a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 102, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "MISRA2008-2_13_3", "level": "error", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 102\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "213752f2-009d-3e58-b758-68927acfec10" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 102, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 102\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "5e26f5ae-8a21-3fd4-9f1e-9da2b105befc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 102, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 103\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "404", "unbViolId": "3af17150-df64-3989-8353-da816779545c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 103, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 103\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "404", "unbViolId": "32ce4084-9c2f-36af-8efd-5636210e11fe" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 103, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 103\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "404", "unbViolId": "c34a1fb9-cf79-3b60-b5de-15ed0786c4b1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 103, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "BD-TRS-LOCK", "level": "error", "message": { "text": "Unreleased lock: changePositionMutex", "markdown": "**\\[Line 103\\] Unreleased lock: changePositionMutex**  \n  \nDeadLock.cpp&nbsp;(90)&nbsp;:&nbsp;while \\(\\!exitGame\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\!exitGame \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(91)&nbsp;:&nbsp;for\\(int i = 0; i < participantsCount; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < participantsCount\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \n**Point where the lock is acquired**  \nDeadLock.cpp&nbsp;(92)&nbsp;:&nbsp;LOCK\\_ACQUIRE\\(changePositionMutex\\);  \nDeadLock.cpp&nbsp;(93)&nbsp;:&nbsp;Point& position = participants\\[i\\]\\->getPosition\\(\\);  \n        Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \nDeadLock.cpp&nbsp;(94)&nbsp;:&nbsp;position\\.translate\\(\\*velocityArray\\[i\\]\\);  \n        Point.hpp&nbsp;(15)&nbsp;:&nbsp;\\_x \\+= vector\\.\\_x;  \n        Point.hpp&nbsp;(16)&nbsp;:&nbsp;\\_y \\+= vector\\.\\_y;  \nDeadLock.cpp&nbsp;(95)&nbsp;:&nbsp;ring\\.contains\\(\\.\\.\\.\\)  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;getPosition\\(\\)  \n                Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;point\\.squareDistanceTo\\(\\.\\.\\.\\)  \n                Point.hpp&nbsp;(21)&nbsp;:&nbsp;return \\(\\(\\_x \\- point\\.\\_x\\) \\* \\(\\_x \\- point\\.\\_x\\)\\) \\+ \\(\\(\\_y \\- point\\.\\_y\\) \\* \\(\\_y \\- point\\.\\_y\\)\\);  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;return point\\.squareDistanceTo\\(getPosition\\(\\)\\) <= \\(\\_radius \\* \\_radius\\);  \nDeadLock.cpp&nbsp;(95)&nbsp;:&nbsp;assertion\\(ring\\.contains\\(position\\), \"Participant is out of ring\"\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;assertion\\(\\) throws const char \\*_  \n        DeadLock.cpp&nbsp;(60)&nbsp;:&nbsp;if \\(\\!condition\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\!condition \\(assuming true\\)_  \n        DeadLock.cpp&nbsp;(61)&nbsp;:&nbsp;throw message;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point prior to which the lock is to be released**&nbsp;  \nDeadLock.cpp&nbsp;(103)&nbsp;:&nbsp;\\}" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "404", "unbViolId": "de887ad1-310c-35af-b647-415d17d63340" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 103, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: !exitGame (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < participantsCount) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where the lock is acquired" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 2 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 21, "startColumn": 1 } } }, "nestingLevel": 2 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 1 } }, "message": { "text": "  *** assertion() throws const char *" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: !condition (assuming true)" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 61, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 103, "startColumn": 1 } }, "message": { "text": "Violation Point - Point prior to which the lock is to be released" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CERT_C-CON01-a", "level": "warning", "message": { "text": "Unreleased lock: changePositionMutex", "markdown": "**\\[Line 103\\] Unreleased lock: changePositionMutex**  \n  \nDeadLock.cpp&nbsp;(90)&nbsp;:&nbsp;while \\(\\!exitGame\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\!exitGame \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(91)&nbsp;:&nbsp;for\\(int i = 0; i < participantsCount; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < participantsCount\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \n**Point where the lock is acquired**  \nDeadLock.cpp&nbsp;(92)&nbsp;:&nbsp;LOCK\\_ACQUIRE\\(changePositionMutex\\);  \nDeadLock.cpp&nbsp;(93)&nbsp;:&nbsp;Point& position = participants\\[i\\]\\->getPosition\\(\\);  \n        Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \nDeadLock.cpp&nbsp;(94)&nbsp;:&nbsp;position\\.translate\\(\\*velocityArray\\[i\\]\\);  \n        Point.hpp&nbsp;(15)&nbsp;:&nbsp;\\_x \\+= vector\\.\\_x;  \n        Point.hpp&nbsp;(16)&nbsp;:&nbsp;\\_y \\+= vector\\.\\_y;  \nDeadLock.cpp&nbsp;(95)&nbsp;:&nbsp;ring\\.contains\\(\\.\\.\\.\\)  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;getPosition\\(\\)  \n                Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;point\\.squareDistanceTo\\(\\.\\.\\.\\)  \n                Point.hpp&nbsp;(21)&nbsp;:&nbsp;return \\(\\(\\_x \\- point\\.\\_x\\) \\* \\(\\_x \\- point\\.\\_x\\)\\) \\+ \\(\\(\\_y \\- point\\.\\_y\\) \\* \\(\\_y \\- point\\.\\_y\\)\\);  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;return point\\.squareDistanceTo\\(getPosition\\(\\)\\) <= \\(\\_radius \\* \\_radius\\);  \nDeadLock.cpp&nbsp;(95)&nbsp;:&nbsp;assertion\\(ring\\.contains\\(position\\), \"Participant is out of ring\"\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;assertion\\(\\) throws const char \\*_  \n        DeadLock.cpp&nbsp;(60)&nbsp;:&nbsp;if \\(\\!condition\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\!condition \\(assuming true\\)_  \n        DeadLock.cpp&nbsp;(61)&nbsp;:&nbsp;throw message;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point prior to which the lock is to be released**&nbsp;  \nDeadLock.cpp&nbsp;(103)&nbsp;:&nbsp;\\}" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "404", "unbViolId": "ceba493b-9c1f-35eb-a12a-c097256359c5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 103, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: !exitGame (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < participantsCount) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where the lock is acquired" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 2 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 21, "startColumn": 1 } } }, "nestingLevel": 2 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 1 } }, "message": { "text": "  *** assertion() throws const char *" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: !condition (assuming true)" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 61, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 103, "startColumn": 1 } }, "message": { "text": "Violation Point - Point prior to which the lock is to be released" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "MISRA2012-DIR-4_13_d", "level": "warning", "message": { "text": "Unreleased lock: changePositionMutex", "markdown": "**\\[Line 103\\] Unreleased lock: changePositionMutex**  \n  \nDeadLock.cpp&nbsp;(90)&nbsp;:&nbsp;while \\(\\!exitGame\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\!exitGame \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(91)&nbsp;:&nbsp;for\\(int i = 0; i < participantsCount; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < participantsCount\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \n**Point where the lock is acquired**  \nDeadLock.cpp&nbsp;(92)&nbsp;:&nbsp;LOCK\\_ACQUIRE\\(changePositionMutex\\);  \nDeadLock.cpp&nbsp;(93)&nbsp;:&nbsp;Point& position = participants\\[i\\]\\->getPosition\\(\\);  \n        Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \nDeadLock.cpp&nbsp;(94)&nbsp;:&nbsp;position\\.translate\\(\\*velocityArray\\[i\\]\\);  \n        Point.hpp&nbsp;(15)&nbsp;:&nbsp;\\_x \\+= vector\\.\\_x;  \n        Point.hpp&nbsp;(16)&nbsp;:&nbsp;\\_y \\+= vector\\.\\_y;  \nDeadLock.cpp&nbsp;(95)&nbsp;:&nbsp;ring\\.contains\\(\\.\\.\\.\\)  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;getPosition\\(\\)  \n                Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;point\\.squareDistanceTo\\(\\.\\.\\.\\)  \n                Point.hpp&nbsp;(21)&nbsp;:&nbsp;return \\(\\(\\_x \\- point\\.\\_x\\) \\* \\(\\_x \\- point\\.\\_x\\)\\) \\+ \\(\\(\\_y \\- point\\.\\_y\\) \\* \\(\\_y \\- point\\.\\_y\\)\\);  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;return point\\.squareDistanceTo\\(getPosition\\(\\)\\) <= \\(\\_radius \\* \\_radius\\);  \nDeadLock.cpp&nbsp;(95)&nbsp;:&nbsp;assertion\\(ring\\.contains\\(position\\), \"Participant is out of ring\"\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;assertion\\(\\) throws const char \\*_  \n        DeadLock.cpp&nbsp;(60)&nbsp;:&nbsp;if \\(\\!condition\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\!condition \\(assuming true\\)_  \n        DeadLock.cpp&nbsp;(61)&nbsp;:&nbsp;throw message;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point prior to which the lock is to be released**&nbsp;  \nDeadLock.cpp&nbsp;(103)&nbsp;:&nbsp;\\}" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "404", "unbViolId": "49a80ce8-cd5c-3c34-bd92-836f8836a7a2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 103, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: !exitGame (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < participantsCount) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where the lock is acquired" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 2 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 21, "startColumn": 1 } } }, "nestingLevel": 2 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 1 } }, "message": { "text": "  *** assertion() throws const char *" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: !condition (assuming true)" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 61, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 103, "startColumn": 1 } }, "message": { "text": "Violation Point - Point prior to which the lock is to be released" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "MISRAC2012-DIR_4_13-d", "level": "warning", "message": { "text": "Unreleased lock: changePositionMutex", "markdown": "**\\[Line 103\\] Unreleased lock: changePositionMutex**  \n  \nDeadLock.cpp&nbsp;(90)&nbsp;:&nbsp;while \\(\\!exitGame\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\!exitGame \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(91)&nbsp;:&nbsp;for\\(int i = 0; i < participantsCount; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < participantsCount\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \n**Point where the lock is acquired**  \nDeadLock.cpp&nbsp;(92)&nbsp;:&nbsp;LOCK\\_ACQUIRE\\(changePositionMutex\\);  \nDeadLock.cpp&nbsp;(93)&nbsp;:&nbsp;Point& position = participants\\[i\\]\\->getPosition\\(\\);  \n        Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \nDeadLock.cpp&nbsp;(94)&nbsp;:&nbsp;position\\.translate\\(\\*velocityArray\\[i\\]\\);  \n        Point.hpp&nbsp;(15)&nbsp;:&nbsp;\\_x \\+= vector\\.\\_x;  \n        Point.hpp&nbsp;(16)&nbsp;:&nbsp;\\_y \\+= vector\\.\\_y;  \nDeadLock.cpp&nbsp;(95)&nbsp;:&nbsp;ring\\.contains\\(\\.\\.\\.\\)  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;getPosition\\(\\)  \n                Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;point\\.squareDistanceTo\\(\\.\\.\\.\\)  \n                Point.hpp&nbsp;(21)&nbsp;:&nbsp;return \\(\\(\\_x \\- point\\.\\_x\\) \\* \\(\\_x \\- point\\.\\_x\\)\\) \\+ \\(\\(\\_y \\- point\\.\\_y\\) \\* \\(\\_y \\- point\\.\\_y\\)\\);  \n        Shapes.hpp&nbsp;(29)&nbsp;:&nbsp;return point\\.squareDistanceTo\\(getPosition\\(\\)\\) <= \\(\\_radius \\* \\_radius\\);  \nDeadLock.cpp&nbsp;(95)&nbsp;:&nbsp;assertion\\(ring\\.contains\\(position\\), \"Participant is out of ring\"\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;assertion\\(\\) throws const char \\*_  \n        DeadLock.cpp&nbsp;(60)&nbsp;:&nbsp;if \\(\\!condition\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\!condition \\(assuming true\\)_  \n        DeadLock.cpp&nbsp;(61)&nbsp;:&nbsp;throw message;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point prior to which the lock is to be released**&nbsp;  \nDeadLock.cpp&nbsp;(103)&nbsp;:&nbsp;\\}" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "404", "unbViolId": "a1512a8d-d374-3f50-8489-13a515cadd45" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 103, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 90, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: !exitGame (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 91, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < participantsCount) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 92, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where the lock is acquired" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 93, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 94, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 2 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 21, "startColumn": 1 } } }, "nestingLevel": 2 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 95, "startColumn": 1 } }, "message": { "text": "  *** assertion() throws const char *" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 60, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: !condition (assuming true)" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 61, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 103, "startColumn": 1 } }, "message": { "text": "Violation Point - Point prior to which the lock is to be released" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 108\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "1d73d56e-37e3-331a-824d-0611099f6438" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 108\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "b72ac15c-4bb5-3a74-9935-ba322a7daa07" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 108\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "985c41f0-a267-3889-baa3-8d0c0c08b950" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-062", "level": "warning", "message": { "text": "The operator '*', used for 'currentCameraVelocity' declaration, should be directly connected with the type", "markdown": "**\\[Line 108\\] The operator '\\*', used for 'currentCameraVelocity' declaration, should be directly connected with the type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "fc954b18-c6ea-372d-a97b-53feeb23ed75" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "FORMAT-32", "level": "warning", "message": { "text": "The operator '*', used for 'currentCameraVelocity' declaration, should be directly connected with the type", "markdown": "**\\[Line 108\\] The operator '\\*', used for 'currentCameraVelocity' declaration, should be directly connected with the type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "cf183f54-6511-3642-a2a9-d3db577422db" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "OWASP2019-API9-e", "level": "warning", "message": { "text": "Global variable 'currentCameraVelocity' has external linkage and is not declared in the header", "markdown": "**\\[Line 108\\] Global variable 'currentCameraVelocity' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "a305309c-ca4a-3871-a37f-182c6d2c7332" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-A3_3_1-a", "level": "error", "message": { "text": "Global variable 'currentCameraVelocity' has external linkage and is not declared in the header", "markdown": "**\\[Line 108\\] Global variable 'currentCameraVelocity' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "496bb9ff-e16f-32e6-bcff-34cd282932f6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-137", "level": "warning", "message": { "text": "Global variable 'currentCameraVelocity' has external linkage and is not declared in the header", "markdown": "**\\[Line 108\\] Global variable 'currentCameraVelocity' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "eb0b55b2-2f71-327f-bb83-65e141ee50c0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "MISRA-023", "level": "warning", "message": { "text": "Global variable 'currentCameraVelocity' has external linkage and is not declared in the header", "markdown": "**\\[Line 108\\] Global variable 'currentCameraVelocity' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "ee3e4da0-6721-38b6-b374-953c8b903b09" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "MISRA2008-3_3_1", "level": "error", "message": { "text": "Global variable 'currentCameraVelocity' has external linkage and is not declared in the header", "markdown": "**\\[Line 108\\] Global variable 'currentCameraVelocity' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "d6f7de63-d337-321f-9e90-bc6d5267630d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CERT_C-DCL15-a", "level": "warning", "message": { "text": "Global variable 'currentCameraVelocity' has external linkage and is not declared in the header", "markdown": "**\\[Line 108\\] Global variable 'currentCameraVelocity' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "6655eccf-d6da-389f-9293-592693d2178a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "MISRA2004-8_10", "level": "warning", "message": { "text": "Global variable 'currentCameraVelocity' has external linkage and is not declared in the header", "markdown": "**\\[Line 108\\] Global variable 'currentCameraVelocity' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "f275c000-893e-3ffe-8a8d-25f8bdde09b7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-051", "level": "warning", "message": { "text": "The name 'currentCameraVelocity' should be composed only of lowercase letters", "markdown": "**\\[Line 108\\] The name 'currentCameraVelocity' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "73331a0f-0f1d-32fd-86c8-8cc643087635" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-44", "level": "warning", "message": { "text": "The name 'currentCameraVelocity' should be composed only of lowercase letters", "markdown": "**\\[Line 108\\] The name 'currentCameraVelocity' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "f9dcd10c-9369-3bbe-80da-d7ba29400cb3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The variable of pointer or array type is declared: currentCameraVelocity", "markdown": "**\\[Line 108\\] The variable of pointer or array type is declared: currentCameraVelocity**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "c284bec4-e758-39ad-b1a8-1868289954fc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The variable of pointer type is declared: currentCameraVelocity", "markdown": "**\\[Line 108\\] The variable of pointer type is declared: currentCameraVelocity**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "f893a455-33f6-3639-9720-52f2591279f5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "INIT-04", "level": "error", "message": { "text": "Pointer variable 'currentCameraVelocity' uninitialized when declared", "markdown": "**\\[Line 108\\] Pointer variable 'currentCameraVelocity' uninitialized when declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "f0ebc559-ef4f-37be-9154-7706e9842744" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-207", "level": "warning", "message": { "text": "Do not define the 'currentCameraVelocity' global variable", "markdown": "**\\[Line 108\\] Do not define the 'currentCameraVelocity' global variable**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "d0573299-4768-31d0-9441-4b2ccaf35d4f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-CPP-82", "level": "warning", "message": { "text": "Do not define the 'currentCameraVelocity' global variable", "markdown": "**\\[Line 108\\] Do not define the 'currentCameraVelocity' global variable**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "b7bb310a-3eaa-3324-baaa-f7aac5d689d8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'currentCameraVelocity' variable should be commented", "markdown": "**\\[Line 108\\] The 'currentCameraVelocity' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "4dd04ace-0ab0-3e38-9165-0f80ce476041" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'currentCameraVelocity' variable should be commented", "markdown": "**\\[Line 108\\] The 'currentCameraVelocity' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "71514378-e952-3195-8480-c71081a9d22c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "HICPP-3_3_1-a", "level": "warning", "message": { "text": "Use of variable \"currentCameraVelocity\" with static storage duration is not allowed", "markdown": "**\\[Line 108\\] Use of variable \"currentCameraVelocity\" with static storage duration is not allowed**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "3f672341-fac6-3b62-8535-e23c7f047536" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "MISRA-022", "level": "note", "message": { "text": "Global variable 'currentCameraVelocity' is declared", "markdown": "**\\[Line 108\\] Global variable 'currentCameraVelocity' is declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "ed1cefa2-e321-3df4-bf47-d905f5a50aa0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-18", "level": "warning", "message": { "text": "Naming convention not followed: currentCameraVelocity", "markdown": "**\\[Line 108\\] Naming convention not followed: currentCameraVelocity**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "e84c8023-7eca-3e27-805b-afcf91cf1130" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-22", "level": "warning", "message": { "text": "Naming convention not followed: currentCameraVelocity", "markdown": "**\\[Line 108\\] Naming convention not followed: currentCameraVelocity**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "b029dae2-bdcd-394a-9bdf-cf4a53f067d2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-HN-34", "level": "warning", "message": { "text": "The 'currentCameraVelocity' identifier should have the 'p' prefix", "markdown": "**\\[Line 108\\] The 'currentCameraVelocity' identifier should have the 'p' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1765880527", "unbViolId": "0319d149-a339-36c4-b753-fcbd008be8da" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 108, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 110\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "6a4503e0-a668-3d34-a7f0-6512deed405f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 110\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "4bf4982c-149c-34fa-94df-455c882127de" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 110\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "ece9cdf4-e810-3e6d-81a4-728430b710da" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'draw' function is not preceded by a comment", "markdown": "**\\[Line 110\\] The definition of the 'draw' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "13b756bc-b869-3462-9b5d-f45b0324c473" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'draw' function is not preceded by a comment", "markdown": "**\\[Line 110\\] The definition of the 'draw' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "dfb07d94-79ef-3e9d-801f-26353fecb697" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "OWASP2019-API9-e", "level": "warning", "message": { "text": "Function 'draw' has external linkage and is not declared in the header", "markdown": "**\\[Line 110\\] Function 'draw' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "9e2dc2f5-dcc8-3955-bfb4-877493e6fb62" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A3_3_1-a", "level": "error", "message": { "text": "Function 'draw' has external linkage and is not declared in the header", "markdown": "**\\[Line 110\\] Function 'draw' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "2fd2a087-cbb3-3b9a-bb76-7eb1377ae9e1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-137", "level": "warning", "message": { "text": "Function 'draw' has external linkage and is not declared in the header", "markdown": "**\\[Line 110\\] Function 'draw' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "dd401143-025d-3597-b160-83643a4b6262" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA-023", "level": "warning", "message": { "text": "Function 'draw' has external linkage and is not declared in the header", "markdown": "**\\[Line 110\\] Function 'draw' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "51e4df53-6ad1-3505-bd61-3ce3723b6e8c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2008-3_3_1", "level": "error", "message": { "text": "Function 'draw' has external linkage and is not declared in the header", "markdown": "**\\[Line 110\\] Function 'draw' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "691e0e0f-8e9e-3249-814a-d97720418ed1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CERT_C-DCL15-a", "level": "warning", "message": { "text": "Function 'draw' has external linkage and is not declared in the header", "markdown": "**\\[Line 110\\] Function 'draw' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "57d40573-5d82-3f79-b2ef-d49e9067cbec" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2004-8_10", "level": "warning", "message": { "text": "Function 'draw' has external linkage and is not declared in the header", "markdown": "**\\[Line 110\\] Function 'draw' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "b2b403fa-2f06-3f57-bf15-96d4449b5b98" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'draw' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 110\\] The 'draw' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "83a091de-aff5-3102-82ea-e9325014dd96" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'draw' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 110\\] The 'draw' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "d5f1d001-c7f2-3124-86ef-73e6b07a68e4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'object' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 110\\] The 'object' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "21d34fb3-4632-37eb-89b7-4c1bc4466d40" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'object' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 110\\] The 'object' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "f4dd3692-2fac-388a-8c48-b53ef702b5ab" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A15_4_4-a", "level": "error", "message": { "text": "The 'draw' function should be declared 'noexcept'", "markdown": "**\\[Line 110\\] The 'draw' function should be declared 'noexcept'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "0382361e-39c5-3e43-8c0c-57c50e7d3678" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-MCPP-09", "level": "warning", "message": { "text": "The 'draw' function should be declared 'noexcept'", "markdown": "**\\[Line 110\\] The 'draw' function should be declared 'noexcept'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "77c014b5-47c6-3110-96a1-d9327beb583b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "FORMAT-28", "level": "warning", "message": { "text": "Return type is not placed in line before function 'draw'", "markdown": "**\\[Line 110\\] Return type is not placed in line before function 'draw'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "0f70538a-d788-351b-b39e-26a368a35206" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'draw' has Cyclomatic Complexity value: 1", "markdown": "**\\[Line 110\\] Function 'draw' has Cyclomatic Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "44024601-d988-3a97-b592-864821bf1d68" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'draw' has Essential Complexity value: 1", "markdown": "**\\[Line 110\\] Function 'draw' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "d55c4396-fa8e-384c-be7f-b158f28e9add" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-17", "level": "warning", "message": { "text": "Naming convention not followed: draw", "markdown": "**\\[Line 110\\] Naming convention not followed: draw**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "4474368a-289d-310a-b31e-ba4e40f2f127" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2008-0_1_8_b", "level": "error", "message": { "text": "Function 'draw' is empty", "markdown": "**\\[Line 110\\] Function 'draw' is empty**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "d8f69f46-6d7c-3617-b529-5952a4ddecc1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "OPT-32_b", "level": "warning", "message": { "text": "Function 'draw' is empty", "markdown": "**\\[Line 110\\] Function 'draw' is empty**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "04eefd91-471f-32ed-b6b8-a0f668ee2479" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-M0_1_8-b", "level": "error", "message": { "text": "Function 'draw' is empty", "markdown": "**\\[Line 110\\] Function 'draw' is empty**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "16ac47f4-71c6-3024-b906-6c0c720dcc8f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "FORMAT-47_a", "level": "warning", "message": { "text": "The 'const' qualifier should be placed on the right hand side of the type", "markdown": "**\\[Line 110\\] The 'const' qualifier should be placed on the right hand side of the type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "6be99ca4-0fa2-3e6a-a923-1c748aabbcd0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "HICPP-7_1_4-a", "level": "warning", "message": { "text": "The 'const' qualifier should be placed on the right hand side of the type", "markdown": "**\\[Line 110\\] The 'const' qualifier should be placed on the right hand side of the type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "eddce4b5-7a2f-3408-bad5-42604aabeaef" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "JSF-062", "level": "warning", "message": { "text": "The operator '*', used for 'object' declaration, should be directly connected with the type", "markdown": "**\\[Line 110\\] The operator '\\*', used for 'object' declaration, should be directly connected with the type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "d33c0b2c-1ef3-3c3c-ba85-29c24146fe4d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 24, "endColumn": 25 } } } ] }, { "ruleId": "FORMAT-32", "level": "warning", "message": { "text": "The operator '*', used for 'object' declaration, should be directly connected with the type", "markdown": "**\\[Line 110\\] The operator '\\*', used for 'object' declaration, should be directly connected with the type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "26e662b1-879e-3c82-8866-da64f03c4c75" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 24, "endColumn": 25 } } } ] }, { "ruleId": "PARSER-REMARK", "level": "note", "message": { "text": "R-828: parameter \"object\" was never referenced", "markdown": "**\\[Line 110\\] R\\-828: parameter \"object\" was never referenced**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "add96e96-2222-383b-b792-06de1694b51e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "AUTOSAR-A0_1_4-a", "level": "error", "message": { "text": "Parameter 'object' is not used", "markdown": "**\\[Line 110\\] Parameter 'object' is not used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "ff341377-8e64-3bb0-bfd0-31d6c5fee94b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "OPT-03", "level": "error", "message": { "text": "Parameter 'object' is not used", "markdown": "**\\[Line 110\\] Parameter 'object' is not used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "2f08f743-70e6-3de8-9c48-0e4230d19ba0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "OPT-31", "level": "warning", "message": { "text": "Parameter 'object' is not used", "markdown": "**\\[Line 110\\] Parameter 'object' is not used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "ce27380c-bfe0-3fc3-afb3-28d9e69f1cfb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA2008-0_1_11", "level": "error", "message": { "text": "Parameter 'object' is not used", "markdown": "**\\[Line 110\\] Parameter 'object' is not used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "8252b9eb-0a73-36f1-9265-430bdbaf3fc6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The parameter of pointer or array type is declared: object", "markdown": "**\\[Line 110\\] The parameter of pointer or array type is declared: object**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "b1f297a9-13cd-34cf-bcd3-b0fdd113981d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The parameter of pointer type is declared: object", "markdown": "**\\[Line 110\\] The parameter of pointer type is declared: object**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "4a46b4f2-d3c6-3fc8-a0a4-54d2fc2e7af6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "NAMING-HN-34", "level": "warning", "message": { "text": "The 'object' identifier should have the 'p' prefix", "markdown": "**\\[Line 110\\] The 'object' identifier should have the 'p' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2003669405", "unbViolId": "30dc6e26-b756-32bd-94d7-140c38dd63e0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 110, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 111\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "402", "unbViolId": "b864035c-e755-3c9a-aa04-238dde0a330b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 111, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 111\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "402", "unbViolId": "ebd6be38-e60c-332b-aab7-2e2f48b36194" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 111, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 111\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "402", "unbViolId": "6756e60d-3164-363e-a474-8caef449a00f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 111, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 112\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1506270258", "unbViolId": "a2c3988e-282b-3047-97ab-d4c46802c0e0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 112, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 112\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1506270258", "unbViolId": "907d3eaa-fdd2-32a2-8f70-83d77d45b785" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 112, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 112\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1506270258", "unbViolId": "4b0b7d7c-da82-3357-b313-2f3406cf1a5d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 112, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 112\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1506270258", "unbViolId": "254b515a-e253-3522-9364-1f0443bd1fab" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 112, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 112\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1506270258", "unbViolId": "e249348a-8c9f-358f-bea5-5c617db0af39" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 112, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 112\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1506270258", "unbViolId": "9822049b-8bcb-37ad-956a-753cb9ba2d35" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 112, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 113\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "404", "unbViolId": "59dece52-47ab-3c2d-9c1d-b4e8b7a37068" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 113, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 113\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "404", "unbViolId": "d4e19670-8d4e-3b5f-a1ed-bf20d504cbcf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 113, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 113\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "404", "unbViolId": "ee348000-d909-3f19-9e84-fa854f63f23c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 113, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 115\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "7d46c0e4-c311-331c-ae15-3508a20598b7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 115\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "986fec26-b60a-3bf8-94f4-1a2931977ecd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 115\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "65604284-1e96-3689-aa15-c63df58d1774" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'Render_Thread' function is not preceded by a comment", "markdown": "**\\[Line 115\\] The definition of the 'Render\\_Thread' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "abd3c4f4-9438-395c-b279-a008c3238c9e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'Render_Thread' function is not preceded by a comment", "markdown": "**\\[Line 115\\] The definition of the 'Render\\_Thread' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "33bcbde5-4156-3654-bfb8-cd456774441d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "OWASP2019-API9-e", "level": "warning", "message": { "text": "Function 'Render_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 115\\] Function 'Render\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "b17ebe4b-a569-3e3e-bb92-f223d2e49c54" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A3_3_1-a", "level": "error", "message": { "text": "Function 'Render_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 115\\] Function 'Render\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "d287777f-490d-3796-8e09-909c043655e4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-137", "level": "warning", "message": { "text": "Function 'Render_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 115\\] Function 'Render\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "5a45e81a-4124-31f4-9b53-98a61aa39f3e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA-023", "level": "warning", "message": { "text": "Function 'Render_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 115\\] Function 'Render\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "bd33f80e-24de-3ce4-a9ee-0d39ffdc02bd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2008-3_3_1", "level": "error", "message": { "text": "Function 'Render_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 115\\] Function 'Render\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "11630666-b96d-3764-a4b4-e583d82c842d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CERT_C-DCL15-a", "level": "warning", "message": { "text": "Function 'Render_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 115\\] Function 'Render\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "e5899e05-402d-34b6-b931-ecfa41f7c510" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2004-8_10", "level": "warning", "message": { "text": "Function 'Render_Thread' has external linkage and is not declared in the header", "markdown": "**\\[Line 115\\] Function 'Render\\_Thread' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "c591d66d-3d87-3f33-9839-6ff21001a725" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-051", "level": "warning", "message": { "text": "The name 'Render_Thread' should be composed only of lowercase letters", "markdown": "**\\[Line 115\\] The name 'Render\\_Thread' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "dd3d6b88-cc36-3e57-9b46-e3d46d810598" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "NAMING-44", "level": "warning", "message": { "text": "The name 'Render_Thread' should be composed only of lowercase letters", "markdown": "**\\[Line 115\\] The name 'Render\\_Thread' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "21bbf801-fdb3-3ec7-bcdf-ca1427f6567c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'Render_Thread' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 115\\] The 'Render\\_Thread' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "e4b4d26b-b215-32ca-aeb4-8401f133cd98" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'Render_Thread' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 115\\] The 'Render\\_Thread' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "0db87e8d-6e52-3433-80e0-75eab914562c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'Render_Thread' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 115\\] The 'Render\\_Thread' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "98f9da25-9ddf-39fa-bf89-c7c5b12adb11" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'Render_Thread' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 115\\] The 'Render\\_Thread' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "e1bfdeab-1eda-399f-b985-cfd123a44b53" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'Render_Thread' has Cyclomatic Complexity value: 3", "markdown": "**\\[Line 115\\] Function 'Render\\_Thread' has Cyclomatic Complexity value: 3**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "d1e465ff-73b5-3867-bad0-2a056b72a677" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'Render_Thread' has Essential Complexity value: 1", "markdown": "**\\[Line 115\\] Function 'Render\\_Thread' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "54d4205d-d493-3e1f-a1db-e5d54319823a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "NAMING-34", "level": "warning", "message": { "text": "The incorrect global function name Render_Thread was found", "markdown": "**\\[Line 115\\] The incorrect global function name Render\\_Thread was found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "385b01d9-f95f-3a98-b9a0-ea8659a63928" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The parameter of pointer or array type is declared", "markdown": "**\\[Line 115\\] The parameter of pointer or array type is declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "04b4ad95-4bbe-3d6c-bc83-486e4756d97b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 22, "endColumn": 23 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The parameter of pointer type is declared", "markdown": "**\\[Line 115\\] The parameter of pointer type is declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1747693045", "unbViolId": "b7babb69-c21a-3930-9fa5-d7e27606ac8d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 115, "startColumn": 22, "endColumn": 23 } } } ] }, { "ruleId": "METRICS-19", "level": "warning", "message": { "text": "Percentage of comment lines vs. all method's lines is: 0", "markdown": "**\\[Line 116\\] Percentage of comment lines vs\\. all method's lines is: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "402", "unbViolId": "f802b748-6813-3f61-a5d9-e1a33a5b89f1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 116, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 116\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "402", "unbViolId": "c675f57a-5c34-3d8f-b1ea-e522c1b9f35a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 116, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 116\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "402", "unbViolId": "0da41528-7633-3d2b-8c88-4f777200b0b5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 116, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 116\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "402", "unbViolId": "b388aacd-ae47-3c71-988a-18285e229025" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 116, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 117\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "7a1ef04d-ed00-357c-a08f-4b1f47b43cab" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 117\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "e3501394-8a05-3122-8cd5-38f7943c1100" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 117\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "3547cdbd-1e43-3791-ab4f-7c57f2cd784b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 117\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "fb1fa887-8cbe-36e4-892f-793b18d4a281" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 117\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "51f11b6d-68c0-333c-b00b-999f80c9b1ef" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 117\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "bf53dec5-76b2-36dc-abe5-4651bdeebee3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-43", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 117\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "d9bbf036-1619-32e6-9805-1d110f929ca3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_b", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 117\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "90277fea-faf3-3831-921a-19464506506c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-02", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 117\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "3d29c05b-7d3a-317e-a71d-139904ae0748" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 117\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "b1f8c254-c0f3-3b52-b2de-794d35378443" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 117\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "c61f777b-9e50-3cee-b88f-5f20d48e8b01" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 117\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "9b02c4a6-2694-3b6d-8a42-8ac53af61752" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "CODSTA-83", "level": "warning", "message": { "text": "A loop does not have a fixed upper nor lower bound", "markdown": "**\\[Line 117\\] A loop does not have a fixed upper nor lower bound**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "913cadee-accd-32c8-8acc-8fd9270ff5ab" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "AUTOSAR-M5_3_1-a", "level": "error", "message": { "text": "The operand of logical operator '!' has 'int' type instead of 'bool' type", "markdown": "**\\[Line 117\\] The operand of logical operator '\\!' has 'int' type instead of 'bool' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "b565f8e4-4e18-3b94-a07e-d4c3f7c4f14c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "CODSTA-CPP-67", "level": "warning", "message": { "text": "The operand of logical operator '!' has 'int' type instead of 'bool' type", "markdown": "**\\[Line 117\\] The operand of logical operator '\\!' has 'int' type instead of 'bool' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "25243af9-4a4d-36b5-ac6b-2c11e1ba974c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "MISRA2008-5_3_1", "level": "error", "message": { "text": "The operand of logical operator '!' has 'int' type instead of 'bool' type", "markdown": "**\\[Line 117\\] The operand of logical operator '\\!' has 'int' type instead of 'bool' type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "a1f081af-d202-3304-8241-ba492958e6bd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "CODSTA-46", "level": "note", "message": { "text": "In 'Render_Thread' function use positive logic rather than negative logic whenever possible", "markdown": "**\\[Line 117\\] In 'Render\\_Thread' function use positive logic rather than negative logic whenever possible**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "55147892-3e8f-3e1b-82b5-47dd6e35870d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "MISRA2004-12_6_a", "level": "warning", "message": { "text": "The operand of logical operator '!' is not 'effectively Boolean'", "markdown": "**\\[Line 117\\] The operand of logical operator '\\!' is not 'effectively Boolean'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1229452372", "unbViolId": "a9b46b43-6a94-3bc6-bbc3-bfbae202e104" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 118\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2061438629", "unbViolId": "9b620a73-da78-3c61-a5fb-12677deb664b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 118, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 118\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2061438629", "unbViolId": "ba3ed2cb-4046-335d-b5b6-346a9dc1866d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 118, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 118\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2061438629", "unbViolId": "cc894934-7596-3799-aa09-2c43d3704902" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 118, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 118\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2061438629", "unbViolId": "0849576b-7e55-31aa-9419-9e9af50b01d5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 118, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 118\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2061438629", "unbViolId": "c469088f-1775-344f-8dcf-d25edcdeb98f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 118, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 118\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2061438629", "unbViolId": "48c102c5-2985-3e0a-a665-47f7ab05e5fe" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 118, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 118\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2061438629", "unbViolId": "95d90ed4-0b47-3591-9197-0b22b68f1dfe" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 118, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 118\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2061438629", "unbViolId": "f66317bb-ea08-3c74-993b-6571d543d3b0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 118, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 118\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2061438629", "unbViolId": "5a38db33-996e-3f11-a080-75e96bc60ee1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 118, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "CODSTA-CPP-23", "level": "note", "message": { "text": "The global function 'EnterCriticalSection' is called without scope resolution operator '::'", "markdown": "**\\[Line 118\\] The global function 'EnterCriticalSection' is called without scope resolution operator '::'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2061438629", "unbViolId": "2e4a5519-3839-371c-80f5-4a09e57ad261" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 118, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 119\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1448027104", "unbViolId": "b8f17074-8168-3ed8-8e4b-4cf1668d752d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 119, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 119\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1448027104", "unbViolId": "9da10123-0fcd-3f99-b5c0-faa80ae38b5c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 119, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 119\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1448027104", "unbViolId": "4c53930b-9344-31e0-a737-77905b7ee60b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 119, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "BD-TRS-DIFCS", "level": "error", "message": { "text": "\"ring\" is used in two critical sections in context of single method, using one critical section will improve atomicity of operation", "markdown": "**\\[Line 119\\] \"ring\" is used in two critical sections in context of single method, using one critical section will improve atomicity of operation**  \n  \nDeadLock.cpp&nbsp;(117)&nbsp;:&nbsp;while \\(\\!exitGame\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\!exitGame \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(118)&nbsp;:&nbsp;LOCK\\_ACQUIRE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Locking: &changePositionMutex_  \n**Usage of \"ring\" in first critical section**  \nDeadLock.cpp&nbsp;(119)&nbsp;:&nbsp;ring\\.getPosition\\(\\)  \n        Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \nDeadLock.cpp&nbsp;(119)&nbsp;:&nbsp;ring\\.getPosition\\(\\)\\.translate\\(\\*currentCameraVelocity\\);  \n        Point.hpp&nbsp;(15)&nbsp;:&nbsp;\\_x \\+= vector\\.\\_x;  \n        Point.hpp&nbsp;(16)&nbsp;:&nbsp;\\_y \\+= vector\\.\\_y;  \nDeadLock.cpp&nbsp;(120)&nbsp;:&nbsp;LOCK\\_RELEASE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Unlocking: &changePositionMutex_  \nDeadLock.cpp&nbsp;(122)&nbsp;:&nbsp;for\\(int i = 0; i < participantsCount; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < participantsCount\\) \\(assuming false\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Not entering the loop_  \nDeadLock.cpp&nbsp;(128)&nbsp;:&nbsp;SLEEP\\(STEP\\);  \nDeadLock.cpp&nbsp;(117)&nbsp;:&nbsp;while \\(\\!exitGame\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\!exitGame \\(true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(118)&nbsp;:&nbsp;LOCK\\_ACQUIRE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Locking: &changePositionMutex_  \n**Usage of \"ring\" in second critical section**&nbsp;  \nDeadLock.cpp&nbsp;(119)&nbsp;:&nbsp;ring\\.getPosition\\(\\)" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "-1448027104", "unbViolId": "1d485e27-665b-3175-96bb-6a6397e022fe" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 119, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: !exitGame (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 118, "startColumn": 1 } }, "message": { "text": "  *** Locking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 119, "startColumn": 1 } }, "message": { "text": "Violation Cause - Usage of \"ring\" in first critical section" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 119, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 120, "startColumn": 1 } }, "message": { "text": "  *** Unlocking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < participantsCount) (assuming false)  *** Not entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 128, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: !exitGame (true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 118, "startColumn": 1 } }, "message": { "text": "  *** Locking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 119, "startColumn": 1 } }, "message": { "text": "Violation Point - Usage of \"ring\" in second critical section" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 119\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1448027104", "unbViolId": "05e9918b-7b90-354e-845c-c4ed8b83d42b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 119, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 119\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1448027104", "unbViolId": "1dd749fd-ed70-3037-8840-af0f16545ed0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 119, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 119\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1448027104", "unbViolId": "0b5a6778-4508-3922-b5d0-84b41c04e7a8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 119, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 119\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1448027104", "unbViolId": "8fa52c41-d3d6-3bcb-82e0-83425c9b753e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 119, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 119\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1448027104", "unbViolId": "dade1a6f-291f-3ca5-89c3-247a0643991d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 119, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 119\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1448027104", "unbViolId": "4723680b-29c9-3d84-8ef8-a294d8a1e2cd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 119, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 120\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1016738356", "unbViolId": "afd76e0e-0c6c-3cd7-b486-2ae05a1d88c7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 120, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 120\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1016738356", "unbViolId": "3191cde7-9449-3e3f-ae07-7ee267e9ab93" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 120, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 120\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1016738356", "unbViolId": "61dc5696-1dbb-3a6c-8c08-906c65cddff5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 120, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 120\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1016738356", "unbViolId": "5c3d7182-acc2-33a6-a52f-d7487d44c979" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 120, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 120\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1016738356", "unbViolId": "c7cdc0b2-6949-3cb5-b51c-1e7053891f79" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 120, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 120\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1016738356", "unbViolId": "e2474b45-ad79-345e-bcad-7ddad37029a1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 120, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 120\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1016738356", "unbViolId": "157368ae-8b55-316e-a6fc-3397572fac2b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 120, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 120\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1016738356", "unbViolId": "8f12f7f2-2805-3fd3-8345-f5e7a4dc12f3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 120, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 120\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1016738356", "unbViolId": "e8af952a-7fc5-3317-a5e9-468c320061ab" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 120, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "CODSTA-CPP-23", "level": "note", "message": { "text": "The global function 'LeaveCriticalSection' is called without scope resolution operator '::'", "markdown": "**\\[Line 120\\] The global function 'LeaveCriticalSection' is called without scope resolution operator '::'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1016738356", "unbViolId": "0f5bfac2-5780-34d8-a6fd-78f37e4ff573" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 120, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 122\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "1a6c1e49-47a1-348c-8ffd-9d9901b61881" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 122\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "b1f7b359-5d2d-3c5f-8c4b-b31c6d1a5462" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 122\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "46b19c54-f508-3280-b4f8-f13cb748a5c2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-43", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 122\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "7384cf7d-101e-3f79-8e47-51e9f238173d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_b", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 122\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "598e7c57-a909-3c6b-9832-61fdb3650f6d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 122\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "f26ef4d1-b27e-37ea-8cf1-b29e35c64e79" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 122\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "302c64c0-01a4-3b2d-a2f8-ed3c20882376" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 122\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "b2b24c0b-c20b-32e2-8675-9f8ac7539e36" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-02", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 122\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "69a0a9eb-14a1-3218-97a6-ade85d8f1372" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 122\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "7cc47622-d996-31ac-905d-cb405a5464cb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 122\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "e55bc8e8-bc81-308f-a4e2-582bc44f2cec" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 122\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "fd457171-50e4-3f75-9265-7cea82a6308b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 122\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "7a0562dc-b2e3-327c-9869-a03f8386c8b6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 122\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "4f6c4330-00d8-3fbf-9450-eb3f1708d99a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 122\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "0fb4b8eb-0fcf-3f8e-88de-6f441bd7dee0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-12", "level": "warning", "message": { "text": "Between conditional statement 'for' and its opening parenthesis '(' should be exactly one space", "markdown": "**\\[Line 122\\] Between conditional statement 'for' and its opening parenthesis '\\(' should be exactly one space**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "b3637aab-6267-3f41-9cf9-476c181ad51e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "CODSTA-83", "level": "warning", "message": { "text": "A loop does not have a fixed upper nor lower bound", "markdown": "**\\[Line 122\\] A loop does not have a fixed upper nor lower bound**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "b3ca3dc4-9117-39f8-8566-44e170333fe6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 122\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "6c73437d-a7e7-3313-8f46-2595bfa7a6f0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 122\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "341a12c2-8353-38f8-bffc-117124b71d30" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CODSTA-223", "level": "warning", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 122\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "3d7bb0b5-df74-32b6-8ed1-8a5e77abfc8b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A3_9_1-b", "level": "error", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 122\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "23b158f6-2dfa-3404-9314-0595e9f8fea2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "HICPP-7_1_6-b", "level": "warning", "message": { "text": "Do not use the 'int' standard integer type", "markdown": "**\\[Line 122\\] Do not use the 'int' standard integer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "d122754a-676d-397c-b623-a8866fbe9788" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 122\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "382b6f31-67d7-3600-87b4-d0c202b01684" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 122\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "e841e7a5-e760-3a78-a271-bc93aa11b661" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 122\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "756eb2bb-b79c-3af4-aee1-28dcf580e7b1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 122\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "8854ba9c-c8b9-3842-a98e-20baca4db9dd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 122\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "8782045f-e3c8-3616-876c-c4d51cb5e272" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A8_5_2-a", "level": "error", "message": { "text": "The definition of the 'i' variable should contain a braced initializer", "markdown": "**\\[Line 122\\] The definition of the 'i' variable should contain a braced initializer**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "d1f51e21-5ec5-3967-89dd-1a5448961e8b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "CODSTA-MCPP-38", "level": "warning", "message": { "text": "The definition of the 'i' variable should contain a braced initializer", "markdown": "**\\[Line 122\\] The definition of the 'i' variable should contain a braced initializer**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "851046d9-41c8-30d1-9ae5-781fe4ac6b72" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PORT-13", "level": "warning", "message": { "text": "'i' shall be declared as unsigned int or signed int", "markdown": "**\\[Line 122\\] 'i' shall be declared as unsigned int or signed int**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "ce1f0574-9195-38df-b0c6-df040088d563" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "OPT-10", "level": "warning", "message": { "text": "Variable \"i\" declaration was found in control statement", "markdown": "**\\[Line 122\\] Variable \"i\" declaration was found in control statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "d2025d30-654a-37de-8c77-4fb86f48cc55" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'i' variable should be commented", "markdown": "**\\[Line 122\\] The 'i' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "c2972748-7e2a-3dad-bace-9b7691d2631e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'i' variable should be commented", "markdown": "**\\[Line 122\\] The 'i' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "de622c24-67d8-308c-93f5-9301d829d15b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "OPT-04", "level": "warning", "message": { "text": "Postfix operator applied to variable 'i'; prefer prefix type", "markdown": "**\\[Line 122\\] Postfix operator applied to variable 'i'; prefer prefix type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1544355218", "unbViolId": "bd088a99-814d-3b3b-871b-0eb523bb4595" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 123\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "7e889cab-bd02-3587-9779-28f9bde27aea" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 123, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 123\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "24dc86ea-3135-3bfd-adcf-791f8aa094e3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 123, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 123\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "78ebc287-032b-3395-817a-479f100ef4aa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 123, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 123\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "09aa7595-f9f3-3e6e-b718-6d5e8cc367c0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 123, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 123\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "41da1995-94b6-393d-8673-15c858c5b062" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 123, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 123\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "2b19912e-5eb4-3dd0-8e37-76dbdae97df1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 123, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 123\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "adadd8c7-1806-3897-810c-babc8a6137b6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 123, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 123\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "51a9571a-981a-3cc8-a403-0215f4a328f0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 123, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 123\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "3884b170-d11c-35cd-b1a4-d7d3e666257b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 123, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 123\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "87ad3580-71ef-3063-858b-979ce7af8a81" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 123, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 123\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "1bebc449-f6a8-3220-82fb-65c778892048" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 123, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 123\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "75b2f937-e2cf-3f90-933b-127057fd943a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 123, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "CODSTA-CPP-23", "level": "note", "message": { "text": "The global function 'EnterCriticalSection' is called without scope resolution operator '::'", "markdown": "**\\[Line 123\\] The global function 'EnterCriticalSection' is called without scope resolution operator '::'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-251104526", "unbViolId": "ecb25aff-a857-38e1-afee-7eed5a67fb90" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 123, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 124\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-864998869", "unbViolId": "e519aa51-fb22-3bf5-b44b-0f4519d720b7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 124, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 124\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-864998869", "unbViolId": "0f12b9a1-cc84-3ea9-9e35-fa32673268e5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 124, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 124\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-864998869", "unbViolId": "495c1c24-11a5-339d-b0c8-dd3a015888ad" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 124, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "BD-TRS-DIFCS", "level": "error", "message": { "text": "\"participants\" is used in two critical sections in context of single method, using one critical section will improve atomicity of operation", "markdown": "**\\[Line 124\\] \"participants\" is used in two critical sections in context of single method, using one critical section will improve atomicity of operation**  \n  \nDeadLock.cpp&nbsp;(117)&nbsp;:&nbsp;while \\(\\!exitGame\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\!exitGame \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(118)&nbsp;:&nbsp;LOCK\\_ACQUIRE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Locking: &changePositionMutex_  \nDeadLock.cpp&nbsp;(119)&nbsp;:&nbsp;ring\\.getPosition\\(\\)  \n        Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \nDeadLock.cpp&nbsp;(119)&nbsp;:&nbsp;ring\\.getPosition\\(\\)\\.translate\\(\\*currentCameraVelocity\\);  \n        Point.hpp&nbsp;(15)&nbsp;:&nbsp;\\_x \\+= vector\\.\\_x;  \n        Point.hpp&nbsp;(16)&nbsp;:&nbsp;\\_y \\+= vector\\.\\_y;  \nDeadLock.cpp&nbsp;(120)&nbsp;:&nbsp;LOCK\\_RELEASE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Unlocking: &changePositionMutex_  \nDeadLock.cpp&nbsp;(122)&nbsp;:&nbsp;for\\(int i = 0; i < participantsCount; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < participantsCount\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(123)&nbsp;:&nbsp;LOCK\\_ACQUIRE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Locking: &changePositionMutex_  \n**Usage of \"participants\" in first critical section**  \nDeadLock.cpp&nbsp;(124)&nbsp;:&nbsp;participants\\[i\\]\\->getPosition\\(\\)  \n        Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \nDeadLock.cpp&nbsp;(124)&nbsp;:&nbsp;participants\\[i\\]\\->getPosition\\(\\)\\.translate\\(\\*currentCameraVelocity\\);  \n        Point.hpp&nbsp;(15)&nbsp;:&nbsp;\\_x \\+= vector\\.\\_x;  \n        Point.hpp&nbsp;(16)&nbsp;:&nbsp;\\_y \\+= vector\\.\\_y;  \nDeadLock.cpp&nbsp;(125)&nbsp;:&nbsp;LOCK\\_RELEASE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Unlocking: &changePositionMutex_  \nDeadLock.cpp&nbsp;(126)&nbsp;:&nbsp;draw\\(participants\\[i\\]\\);  \nDeadLock.cpp&nbsp;(122)&nbsp;:&nbsp;for\\(int i = 0; i < participantsCount; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < participantsCount\\) \\(true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(123)&nbsp;:&nbsp;LOCK\\_ACQUIRE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Locking: &changePositionMutex_  \n**Usage of \"participants\" in second critical section**&nbsp;  \nDeadLock.cpp&nbsp;(124)&nbsp;:&nbsp;participants\\[i\\]\\->getPosition\\(\\)" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "-864998869", "unbViolId": "2b38c9d8-058e-3392-b337-81bda14299d3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 124, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: !exitGame (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 118, "startColumn": 1 } }, "message": { "text": "  *** Locking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 119, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 119, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 120, "startColumn": 1 } }, "message": { "text": "  *** Unlocking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < participantsCount) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 123, "startColumn": 1 } }, "message": { "text": "  *** Locking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 124, "startColumn": 1 } }, "message": { "text": "Violation Cause - Usage of \"participants\" in first critical section" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 124, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 125, "startColumn": 1 } }, "message": { "text": "  *** Unlocking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 126, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < participantsCount) (true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 123, "startColumn": 1 } }, "message": { "text": "  *** Locking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 124, "startColumn": 1 } }, "message": { "text": "Violation Point - Usage of \"participants\" in second critical section" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "BD-TRS-DIFCS", "level": "error", "message": { "text": "\"currentCameraVelocity\" is used in two critical sections in context of single method, using one critical section will improve atomicity of operation", "markdown": "**\\[Line 124\\] \"currentCameraVelocity\" is used in two critical sections in context of single method, using one critical section will improve atomicity of operation**  \n  \nDeadLock.cpp&nbsp;(117)&nbsp;:&nbsp;while \\(\\!exitGame\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\!exitGame \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(118)&nbsp;:&nbsp;LOCK\\_ACQUIRE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Locking: &changePositionMutex_  \nDeadLock.cpp&nbsp;(119)&nbsp;:&nbsp;ring\\.getPosition\\(\\)  \n        Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \n**Usage of \"currentCameraVelocity\" in first critical section**  \nDeadLock.cpp&nbsp;(119)&nbsp;:&nbsp;ring\\.getPosition\\(\\)\\.translate\\(\\*currentCameraVelocity\\);  \n        Point.hpp&nbsp;(15)&nbsp;:&nbsp;\\_x \\+= vector\\.\\_x;  \n        Point.hpp&nbsp;(16)&nbsp;:&nbsp;\\_y \\+= vector\\.\\_y;  \nDeadLock.cpp&nbsp;(120)&nbsp;:&nbsp;LOCK\\_RELEASE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Unlocking: &changePositionMutex_  \nDeadLock.cpp&nbsp;(122)&nbsp;:&nbsp;for\\(int i = 0; i < participantsCount; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < participantsCount\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nDeadLock.cpp&nbsp;(123)&nbsp;:&nbsp;LOCK\\_ACQUIRE\\(changePositionMutex\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Locking: &changePositionMutex_  \nDeadLock.cpp&nbsp;(124)&nbsp;:&nbsp;participants\\[i\\]\\->getPosition\\(\\)  \n        Shapes.hpp&nbsp;(10)&nbsp;:&nbsp;Point& getPosition\\(\\) \\{ return \\_position; \\}  \n**Usage of \"currentCameraVelocity\" in second critical section**&nbsp;  \nDeadLock.cpp&nbsp;(124)&nbsp;:&nbsp;participants\\[i\\]\\->getPosition\\(\\)\\.translate\\(\\*currentCameraVelocity\\);" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "-864998869", "unbViolId": "52eb0078-d5f1-3853-ac6d-b4869efeb8c8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 124, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 117, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: !exitGame (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 118, "startColumn": 1 } }, "message": { "text": "  *** Locking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 119, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 119, "startColumn": 1 } }, "message": { "text": "Violation Cause - Usage of \"currentCameraVelocity\" in first critical section" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 120, "startColumn": 1 } }, "message": { "text": "  *** Unlocking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 122, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < participantsCount) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 123, "startColumn": 1 } }, "message": { "text": "  *** Locking: &changePositionMutex" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 124, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 124, "startColumn": 1 } }, "message": { "text": "Violation Point - Usage of \"currentCameraVelocity\" in second critical section" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 124\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-864998869", "unbViolId": "346c301d-4cc8-3f49-8388-ba85a0657059" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 124, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 124\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-864998869", "unbViolId": "4b4bb310-16a3-387f-9b65-c5e8111793b0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 124, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 124\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-864998869", "unbViolId": "faab27aa-7bf3-3df8-861e-faf5912614af" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 124, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 124\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-864998869", "unbViolId": "f76c9d01-3c10-3367-8c7f-6f70d8f08e01" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 124, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 124\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-864998869", "unbViolId": "3d5721e6-882c-3c28-9593-bb16883f9073" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 124, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 124\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-864998869", "unbViolId": "39dbddc7-7aa6-3991-ab07-6839e2f3243e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 124, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 124\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-864998869", "unbViolId": "aafd995c-238e-3b04-ba65-1dd28285fb43" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 124, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 124\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-864998869", "unbViolId": "594a9b6c-dd8a-3c12-b796-c0c522827d0f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 124, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 124\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-864998869", "unbViolId": "a2e58109-c177-315f-8867-b38676598523" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 124, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 125\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "7b10e8dc-09f4-3af9-9fa7-2f48aeafb438" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 125, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 125\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "a3096402-4f07-36a4-bbf5-dbac432d3db7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 125, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 125\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "1d9de793-ad61-307e-b621-8ce0af8cbc3a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 125, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 125\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "3ca7289f-18ae-337b-ba62-baa06fdca6f5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 125, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 125\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "950bba5d-2ad1-331c-b50e-523a4e995f19" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 125, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 125\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "174c6096-c4e7-388b-a7f9-ed7676a62cf3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 125, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 125\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "87e53e25-6cab-385a-a1f5-818a285eac40" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 125, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 125\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "53fa03d1-0ce0-3c7c-a174-84b19c7d0178" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 125, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 125\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "c0a72735-f6bc-3d92-a023-50ea20084ad6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 125, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 125\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "aaaceaa8-6580-3241-b831-35afca514f74" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 125, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 125\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "e0b1747b-6ab7-3edc-b5e0-61fdd9a4cd51" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 125, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 125\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "3a18cb66-dc02-3830-b756-18a8748cfe1f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 125, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "CODSTA-CPP-23", "level": "note", "message": { "text": "The global function 'LeaveCriticalSection' is called without scope resolution operator '::'", "markdown": "**\\[Line 125\\] The global function 'LeaveCriticalSection' is called without scope resolution operator '::'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "793595747", "unbViolId": "a88a1463-eff1-3fe9-b4c5-92aae2f9530a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 125, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 126\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-596932643", "unbViolId": "ffd012c9-2bcb-3f90-9fa1-367a03439bb2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 126, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 126\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-596932643", "unbViolId": "70cafe79-1324-3fc9-90f6-48172adb1c8d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 126, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 126\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-596932643", "unbViolId": "8017a320-84cc-34f1-985a-a4945ce18736" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 126, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 126\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-596932643", "unbViolId": "700aee5b-9d31-3a98-b03e-8a30026af665" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 126, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 126\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-596932643", "unbViolId": "918226fc-09c2-3e38-932a-4b570685b3ea" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 126, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 126\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-596932643", "unbViolId": "ec6ea597-a564-3895-818c-95d48ff0ca4c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 126, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 126\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-596932643", "unbViolId": "220cf4d4-2457-3e1a-bdb2-87844b755f49" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 126, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 126\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-596932643", "unbViolId": "b134d5b8-4aac-3023-94a9-12c55c678d18" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 126, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 126\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-596932643", "unbViolId": "7683eeaf-311a-3edd-bf08-795d9f4017fc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 126, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 126\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-596932643", "unbViolId": "d5c907e8-3ff5-3d2b-874f-704c80344a26" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 126, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 126\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-596932643", "unbViolId": "24765f1e-6b7c-38c0-99c9-4193d02cbf38" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 126, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 126\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-596932643", "unbViolId": "cfab8a84-15ff-371a-affd-5431e9947339" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 126, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 127\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "277172", "unbViolId": "86da0ed1-a849-3f0f-ae96-a453225ceecc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 127, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 127\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "277172", "unbViolId": "dd0c5d4c-5142-3c21-aa99-fa9cdec373bf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 127, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 127\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "277172", "unbViolId": "7f018944-4f87-30ce-b3d0-94a4b86a0a5b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 127, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 127\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "277172", "unbViolId": "d3de994f-9523-36f6-8e38-3b7d86bb1c0a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 127, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 127\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "277172", "unbViolId": "9a89615d-d3a6-3897-844c-e3d61bdf1030" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 127, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 127\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "277172", "unbViolId": "e2f18860-813f-3ecd-868a-14e7fc3dd557" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 127, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 127\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "277172", "unbViolId": "bc05e24f-026f-3f0d-be9a-7503d2e66ceb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 127, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 127\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "277172", "unbViolId": "8e223844-7f03-3966-aa6d-25c0d9387e9f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 127, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 127\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "277172", "unbViolId": "e781c1c5-5fba-3740-b0ed-4f70164d07f4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 127, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 128\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "1a5fff20-c446-3389-ac79-64d7fc50a4ad" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 128, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 128\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "8c7fabad-687c-3068-a7d8-8fb027127e07" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 128, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 128\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "1ea2bbc0-f421-35e4-9ad4-09bea975160f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 128, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 128\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "1ebba7a0-5249-352b-8dbf-90e1e8b0e0c5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 128, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 128\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "a74d9e8a-50b7-35ab-950d-9661e39df759" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 128, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 128\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "e94b0ae7-26dc-3666-a4fe-98e2fbbbe01b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 128, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 128\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "8b29818f-3931-37a4-aad5-0c566256b94f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 128, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 128\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "446bdea7-3fbc-3119-b095-3e2070fb3a39" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 128, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 128\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "fb108ea9-a2c2-3f86-a2d9-c08063b43b7e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 128, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "CODSTA-CPP-23", "level": "note", "message": { "text": "The global function 'Sleep' is called without scope resolution operator '::'", "markdown": "**\\[Line 128\\] The global function 'Sleep' is called without scope resolution operator '::'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "60c83954-7b3b-385b-997c-17ba9ff79e56" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 128, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'int' of function argument number '1' does not match declared type 'unsigned long'", "markdown": "**\\[Line 128\\] The type 'int' of function argument number '1' does not match declared type 'unsigned long'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "196cb413-550c-37b8-a916-1c7ba3ca8fb3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 128, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '1' shall not be used", "markdown": "**\\[Line 128\\] Implicit conversion between signed and unsigned type in the function call on argument '1' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "73a98a98-c24d-3338-9873-16b61ab665b8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 128, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '1' shall not be used", "markdown": "**\\[Line 128\\] Implicit conversion between signed and unsigned type in the function call on argument '1' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "e6ea8c29-9e41-3ebc-a9a6-3f1ab9a6ba5a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 128, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '1' shall not be used", "markdown": "**\\[Line 128\\] Implicit conversion between signed and unsigned type in the function call on argument '1' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "4c8cf8ba-3660-3c67-89c0-c278473b05e8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 128, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 20", "markdown": "**\\[Line 128\\] A 'U' suffix shall be applied to constant: 20**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1234365944", "unbViolId": "73c65b40-1bf4-3c08-b6ba-01569daaebb5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 128, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 129\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "9053", "unbViolId": "0ca10958-e75e-3aaf-a5ae-ebd72118e24d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 129, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 129\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "9053", "unbViolId": "9e1d38bb-1278-32b6-94e9-420d04cfe2d6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 129, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 129\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "9053", "unbViolId": "00726aca-91d1-3560-bb24-6c40b99f5a00" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 129, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 129\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "9053", "unbViolId": "07da2ad6-442a-3632-9110-bd9acafad9f9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 129, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 129\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "9053", "unbViolId": "90dc8627-8cd1-3a54-bbb1-15ae0129e139" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 129, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 129\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "9053", "unbViolId": "5779215e-baae-3028-94ee-ae181ebe1143" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 129, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 130\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "16ddbaca-8c99-3f33-9482-4420aa35562b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 130, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 130\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "c0489bd5-2da2-32c3-856f-318c36bb4449" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 130, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 130\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "8c996a0e-fc49-37cc-bf64-8202de4a2558" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 130, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 130\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "051c69da-53d6-3ce2-948a-af68982bd3a5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 130, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 130\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "f4208bd9-5e36-3536-bbb1-15a95f83fc02" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 130, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 130\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "d22a19c0-f1d5-39d1-93f7-9c4c9f07d25a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 130, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-25_b", "level": "warning", "message": { "text": "'return' statement should be used with parenthesis", "markdown": "**\\[Line 130\\] 'return' statement should be used with parenthesis**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "ddbf4f51-3473-3951-8d36-949fc8b9521b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 130, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function return statement shall not be used", "markdown": "**\\[Line 130\\] Implicit conversion between signed and unsigned type in the function return statement shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "fa60a339-0acb-3f7a-a070-853850ebddb4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 130, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function return statement shall not be used", "markdown": "**\\[Line 130\\] Implicit conversion between signed and unsigned type in the function return statement shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "d5f373c4-9d07-3ffc-98cf-b4a56ba4cc31" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 130, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function return statement shall not be used", "markdown": "**\\[Line 130\\] Implicit conversion between signed and unsigned type in the function return statement shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "49a16a5e-0834-3ff6-ad9a-c2854ea93c88" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 130, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "PB-05", "level": "warning", "message": { "text": "Function 'Render_Thread' has declared return type 'unsigned long' but returns value of type 'int'", "markdown": "**\\[Line 130\\] Function 'Render\\_Thread' has declared return type 'unsigned long' but returns value of type 'int'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "9beb27d4-ab37-31ba-9bcf-845b77d60ec6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 130, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "AUTOSAR-M2_13_3-a", "level": "error", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 130\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "71786054-bf01-3263-bc1f-251238cdc8f7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 130, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "CODSTA-68", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 130\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "2ea6b7cd-4804-390f-94d2-911395b63d7c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 130, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "MISRA2008-2_13_3", "level": "error", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 130\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "01ba43b1-cfa2-39e6-ad0e-6a1fd894ea6e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 130, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 130\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1688062501", "unbViolId": "96425ddb-cc3b-3d87-88df-ec6935985e8e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 130, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 131\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "404", "unbViolId": "d26b4f6c-0063-39de-8e6b-596f84b3c425" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 131, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 131\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "404", "unbViolId": "3b6edb17-a976-3fa5-9920-216309dfd6b4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 131, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 131\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "404", "unbViolId": "67598f15-9ca4-39c6-8698-ededaa2d3c5c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 131, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'runGameThreads' function is not preceded by a comment", "markdown": "**\\[Line 134\\] The definition of the 'runGameThreads' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "c45cf4d4-268c-3180-9b5f-34ae31f81d8f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'runGameThreads' function is not preceded by a comment", "markdown": "**\\[Line 134\\] The definition of the 'runGameThreads' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "d2dbe469-601b-3744-a522-77938c8fd950" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "OWASP2019-API9-e", "level": "warning", "message": { "text": "Function 'runGameThreads' has external linkage and is not declared in the header", "markdown": "**\\[Line 134\\] Function 'runGameThreads' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "a01d7e29-c076-3c47-b660-d9dedf00038b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-A3_3_1-a", "level": "error", "message": { "text": "Function 'runGameThreads' has external linkage and is not declared in the header", "markdown": "**\\[Line 134\\] Function 'runGameThreads' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "00544741-2ea2-3552-b75d-3ea803f2b294" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "JSF-137", "level": "warning", "message": { "text": "Function 'runGameThreads' has external linkage and is not declared in the header", "markdown": "**\\[Line 134\\] Function 'runGameThreads' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "831a6570-3201-39ea-8688-4c1d9db6aaf8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA-023", "level": "warning", "message": { "text": "Function 'runGameThreads' has external linkage and is not declared in the header", "markdown": "**\\[Line 134\\] Function 'runGameThreads' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "4512e3cc-08a1-3edf-b1ed-191a4c9ededd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA2008-3_3_1", "level": "error", "message": { "text": "Function 'runGameThreads' has external linkage and is not declared in the header", "markdown": "**\\[Line 134\\] Function 'runGameThreads' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "1402420b-025b-3eb3-978b-09f470c58f8e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "CERT_C-DCL15-a", "level": "warning", "message": { "text": "Function 'runGameThreads' has external linkage and is not declared in the header", "markdown": "**\\[Line 134\\] Function 'runGameThreads' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "f1d31d7a-7dee-3da7-b2b1-54b01a1e666d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA2004-8_10", "level": "warning", "message": { "text": "Function 'runGameThreads' has external linkage and is not declared in the header", "markdown": "**\\[Line 134\\] Function 'runGameThreads' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "e96414d5-bb41-316d-9f99-124a35d0dd7d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "JSF-051", "level": "warning", "message": { "text": "The name 'runGameThreads' should be composed only of lowercase letters", "markdown": "**\\[Line 134\\] The name 'runGameThreads' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "21e21ae3-f6c7-3334-8cda-9088f66b1194" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "NAMING-44", "level": "warning", "message": { "text": "The name 'runGameThreads' should be composed only of lowercase letters", "markdown": "**\\[Line 134\\] The name 'runGameThreads' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "d715a797-7279-30e3-9e61-fac3816fa6de" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "JSF-098", "level": "warning", "message": { "text": "Do not declare the 'runGameThreads' function in the global namespace", "markdown": "**\\[Line 134\\] Do not declare the 'runGameThreads' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "6a83aaf8-404e-3a4b-8f2d-6493138c2dfc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-M7_3_1-a", "level": "error", "message": { "text": "Do not declare the 'runGameThreads' function in the global namespace", "markdown": "**\\[Line 134\\] Do not declare the 'runGameThreads' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "171972b2-598d-30a9-a254-5b5e5833e9ad" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "CODSTA-CPP-36", "level": "warning", "message": { "text": "Do not declare the 'runGameThreads' function in the global namespace", "markdown": "**\\[Line 134\\] Do not declare the 'runGameThreads' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "036b5132-bccd-345d-8f92-9afc548425af" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA2008-7_3_1", "level": "error", "message": { "text": "Do not declare the 'runGameThreads' function in the global namespace", "markdown": "**\\[Line 134\\] Do not declare the 'runGameThreads' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "abff3b89-ef43-370d-b635-ab352a2f7a33" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'runGameThreads' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 134\\] The 'runGameThreads' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "980f6180-8386-302d-bfc0-7a8ad1210572" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'runGameThreads' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 134\\] The 'runGameThreads' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "9b369be7-ba2f-3dad-80c8-1feb909ba28b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "FORMAT-28", "level": "warning", "message": { "text": "Return type is not placed in line before function 'runGameThreads'", "markdown": "**\\[Line 134\\] Return type is not placed in line before function 'runGameThreads'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "caeeef87-6fc9-3189-8066-e8a181b08b7e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'runGameThreads' has Cyclomatic Complexity value: 1", "markdown": "**\\[Line 134\\] Function 'runGameThreads' has Cyclomatic Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "b14ece4e-3fd0-342d-ad26-a9431d919f8c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'runGameThreads' has Essential Complexity value: 1", "markdown": "**\\[Line 134\\] Function 'runGameThreads' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "f26b151e-96c5-324f-bc49-c7f78acc5e00" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "NAMING-17", "level": "warning", "message": { "text": "Naming convention not followed: runGameThreads", "markdown": "**\\[Line 134\\] Naming convention not followed: runGameThreads**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "eacdae7f-e4af-3ac9-8241-9969d14be3cb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "GLOBAL-UNUSEDFUNC", "level": "warning", "message": { "text": "The 'runGameThreads' function is not used in the testing scope", "markdown": "**\\[Line 134\\] The 'runGameThreads' function is not used in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "f338e183-3fcb-3f63-b866-a96f9d3ae260" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-M0_1_10-a", "level": "warning", "message": { "text": "The 'runGameThreads' function is not used in the testing scope", "markdown": "**\\[Line 134\\] The 'runGameThreads' function is not used in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "26be57c2-c461-3d63-880e-7f89443a6d28" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA2008-0_1_10_b", "level": "error", "message": { "text": "The 'runGameThreads' function is not used in the testing scope", "markdown": "**\\[Line 134\\] The 'runGameThreads' function is not used in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-106623271", "unbViolId": "e6c33447-9604-3642-87f7-066f01837512" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 134, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "CDD-DUPM", "level": "error", "message": { "text": "Duplicated function: 'void runGameThreads ( ) { exitGame = 0 ; THREAD thread1 ,...'", "markdown": "**\\[Line 135\\] Duplicated function: 'void runGameThreads \\( \\) \\{ exitGame = 0 ; THREAD thread1 ,\\.\\.\\.'**  \n  \nReview duplicate in:&nbsp;DeadLock.cpp&nbsp;(135)  \nReview duplicate in:&nbsp;DeadLock.cpp&nbsp;(145)" }, "partialFingerprints": { "violType": "DupViol", "lineHash": "123", "unbViolId": "71f2506c-b3ca-3e90-8b63-0e8c3060c51d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 135, "startColumn": 1, "endLine": 142, "endColumn": 2 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 135, "startColumn": 1, "endLine": 142, "endColumn": 2 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 145, "startColumn": 1, "endLine": 152, "endColumn": 2 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "METRICS-19", "level": "warning", "message": { "text": "Percentage of comment lines vs. all method's lines is: 0", "markdown": "**\\[Line 135\\] Percentage of comment lines vs\\. all method's lines is: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "123", "unbViolId": "80c6bc4c-469d-3f2d-9fd3-70843895f60f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 135, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 136\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "409232213", "unbViolId": "3d319648-e414-30e5-91bf-9781050acaab" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 136, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 136\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "409232213", "unbViolId": "29b96aa9-ea76-36b1-a69b-0a0e6cee622e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 136, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 136\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "409232213", "unbViolId": "9c511e2b-a436-3897-92b9-c746be81cd16" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 136, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CDD-DUPC", "level": "warning", "message": { "text": "Duplicated code: 'exitGame = 0;\tTHREAD thread1, thread2, thread3, thread4;\tTHR...'", "markdown": "**\\[Line 136\\] Duplicated code: 'exitGame = 0;\tTHREAD thread1, thread2, thread3, thread4;\tTHR\\.\\.\\.'**  \n  \nReview duplicate in:&nbsp;DeadLock.cpp&nbsp;(136)  \nReview duplicate in:&nbsp;DeadLock.cpp&nbsp;(146)" }, "partialFingerprints": { "violType": "DupViol", "lineHash": "409232213", "unbViolId": "0ec2a0cb-fa10-3abf-98f7-7bdb71168083" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 136, "startColumn": 2, "endLine": 141, "endColumn": 48 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 136, "startColumn": 2, "endLine": 141, "endColumn": 48 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 146, "startColumn": 2, "endLine": 151, "endColumn": 48 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CODSTA-27", "level": "warning", "message": { "text": "Global variable 'exitGame' is modified in function 'runGameThreads'", "markdown": "**\\[Line 136\\] Global variable 'exitGame' is modified in function 'runGameThreads'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "409232213", "unbViolId": "8bad81f2-e351-3df4-ac47-33a582a8b542" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 136, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 137\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "56222e7a-f2bd-3724-ba58-8dd817e1579e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 137\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "2c3b7240-e76f-34a2-b72b-7f3885bc4d33" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 137\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "0ad7d031-6179-3720-97b4-a48cf24dd796" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PARSER-WARNING", "level": "warning", "message": { "text": "W-552: variable \"thread1\" was set but never used", "markdown": "**\\[Line 137\\] W\\-552: variable \"thread1\" was set but never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "0cbb1aca-96bd-31db-85c3-4fcb591e1991" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The variable of pointer or array type is declared: thread1", "markdown": "**\\[Line 137\\] The variable of pointer or array type is declared: thread1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "f1e1b33b-a2b4-3f78-893e-eab9b1705b31" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The variable of pointer type is declared: thread1", "markdown": "**\\[Line 137\\] The variable of pointer type is declared: thread1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "0031dd2a-8be5-379b-b7fd-b83756b45698" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "INIT-04", "level": "error", "message": { "text": "Pointer variable 'thread1' uninitialized when declared", "markdown": "**\\[Line 137\\] Pointer variable 'thread1' uninitialized when declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "5c2ad345-4458-3513-88a3-bc63e7b66d05" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CERT_C-MSC13-a", "level": "warning", "message": { "text": "Local variable 'thread1' declared in function 'runGameThreads' is unnecessary", "markdown": "**\\[Line 137\\] Local variable 'thread1' declared in function 'runGameThreads' is unnecessary**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "dd2ff663-e709-3bd9-8bbb-564e45ef86c7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "OPT-06", "level": "warning", "message": { "text": "Local variable 'thread1' declared in function 'runGameThreads' is unnecessary", "markdown": "**\\[Line 137\\] Local variable 'thread1' declared in function 'runGameThreads' is unnecessary**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "00b495d3-7e18-3ee6-aabb-57a82b7a707a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'thread1' variable should be commented", "markdown": "**\\[Line 137\\] The 'thread1' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "8aad5671-eb53-390d-8ae7-6dfffacef0ee" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'thread1' variable should be commented", "markdown": "**\\[Line 137\\] The 'thread1' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "9c24f5dc-9a06-397c-a173-a62f9afd74ae" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-M0_1_4-a", "level": "error", "message": { "text": "The 'thread1' variable has only one use", "markdown": "**\\[Line 137\\] The 'thread1' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "bab90528-a21a-33e4-b5a6-7da2ad56f4ff" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "MISRA2008-0_1_4", "level": "error", "message": { "text": "The 'thread1' variable has only one use", "markdown": "**\\[Line 137\\] The 'thread1' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "b1141b6f-4a39-33f1-9082-8831ab536ded" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "GLOBAL-ONEUSEVAR", "level": "warning", "message": { "text": "The 'thread1' variable has only one use", "markdown": "**\\[Line 137\\] The 'thread1' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "9a65591f-2075-3ed2-aaf6-a726c8dad799" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-M0_1_4-a", "level": "error", "message": { "text": "The 'thread2' variable has only one use", "markdown": "**\\[Line 137\\] The 'thread2' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "a430c2dd-5035-33dc-9af9-26620a4658b5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "MISRA2008-0_1_4", "level": "error", "message": { "text": "The 'thread2' variable has only one use", "markdown": "**\\[Line 137\\] The 'thread2' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "a2f77474-bc34-336e-ac7f-45022e2fc156" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "GLOBAL-ONEUSEVAR", "level": "warning", "message": { "text": "The 'thread2' variable has only one use", "markdown": "**\\[Line 137\\] The 'thread2' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "8ca2724d-f51d-3172-9719-1f086ba053bf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "PARSER-WARNING", "level": "warning", "message": { "text": "W-552: variable \"thread2\" was set but never used", "markdown": "**\\[Line 137\\] W\\-552: variable \"thread2\" was set but never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "844a2b9a-f09a-34e6-a8c6-69fefe53d365" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The variable of pointer or array type is declared: thread2", "markdown": "**\\[Line 137\\] The variable of pointer or array type is declared: thread2**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "3b059887-7b03-315d-8fb3-85518c378dc9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The variable of pointer type is declared: thread2", "markdown": "**\\[Line 137\\] The variable of pointer type is declared: thread2**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "6f139458-da42-3e9e-ab4c-50b8c52cfa3f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "JSF-152", "level": "error", "message": { "text": "Declare variable 'thread2' in a separate line", "markdown": "**\\[Line 137\\] Declare variable 'thread2' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "b48c2574-889c-392b-b818-e821c0e3f346" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "AUTOSAR-A7_1_7-b", "level": "error", "message": { "text": "Declare variable 'thread2' in a separate line", "markdown": "**\\[Line 137\\] Declare variable 'thread2' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "4e36d046-b2e8-34e7-8529-35f529f85c78" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "HICPP-7_1_1-a", "level": "warning", "message": { "text": "Declare variable 'thread2' in a separate line", "markdown": "**\\[Line 137\\] Declare variable 'thread2' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "abc8cfce-26b0-3194-bb0e-bc60b3252610" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "FORMAT-29", "level": "warning", "message": { "text": "Declare variable 'thread2' in a separate line", "markdown": "**\\[Line 137\\] Declare variable 'thread2' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "d23c9559-4325-3c6e-879b-4da81cdecc70" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "AUTOSAR-A7_1_7-c", "level": "error", "message": { "text": "Declare variable 'thread2' in a separate declaration statement", "markdown": "**\\[Line 137\\] Declare variable 'thread2' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "7aeafae7-9c16-3c8b-815a-7d51b6af1388" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "FORMAT-33", "level": "warning", "message": { "text": "Declare variable 'thread2' in a separate declaration statement", "markdown": "**\\[Line 137\\] Declare variable 'thread2' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "03874752-a69e-3dfd-a576-45e814e9c0f9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "MISRA2008-8_0_1", "level": "error", "message": { "text": "Declare variable 'thread2' in a separate declaration statement", "markdown": "**\\[Line 137\\] Declare variable 'thread2' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "8b607f47-44dd-33c0-b152-3ce711fcef66" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "HICPP-7_1_1-b", "level": "warning", "message": { "text": "Declare variable 'thread2' in a separate declaration statement", "markdown": "**\\[Line 137\\] Declare variable 'thread2' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "7af232df-d0ca-3640-ab5d-6912ad86fe99" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "AUTOSAR-M8_0_1-a", "level": "error", "message": { "text": "Declare variable 'thread2' in a separate declaration statement", "markdown": "**\\[Line 137\\] Declare variable 'thread2' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "ff8463cf-5ef5-3329-9120-836e59878cfa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "CERT_C-DCL04-a", "level": "warning", "message": { "text": "Declare variable 'thread2' in a separate declaration statement", "markdown": "**\\[Line 137\\] Declare variable 'thread2' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "15e67163-9c1c-31b6-9ca4-a5c084f2277f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "INIT-04", "level": "error", "message": { "text": "Pointer variable 'thread2' uninitialized when declared", "markdown": "**\\[Line 137\\] Pointer variable 'thread2' uninitialized when declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "6cb7ad77-455c-3e53-8e42-2c95911fc6fe" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "CERT_C-MSC13-a", "level": "warning", "message": { "text": "Local variable 'thread2' declared in function 'runGameThreads' is unnecessary", "markdown": "**\\[Line 137\\] Local variable 'thread2' declared in function 'runGameThreads' is unnecessary**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "914f0e85-15ed-38f0-b88b-74da0a747dbb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "OPT-06", "level": "warning", "message": { "text": "Local variable 'thread2' declared in function 'runGameThreads' is unnecessary", "markdown": "**\\[Line 137\\] Local variable 'thread2' declared in function 'runGameThreads' is unnecessary**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "aaf779cd-4f5a-3241-823c-91e97bda2e56" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'thread2' variable should be commented", "markdown": "**\\[Line 137\\] The 'thread2' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "fc71afad-61a7-3620-a534-30d151288dbd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'thread2' variable should be commented", "markdown": "**\\[Line 137\\] The 'thread2' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "a8487b93-3f87-3c57-a7e2-c3156c262bf4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "PARSER-WARNING", "level": "warning", "message": { "text": "W-552: variable \"thread3\" was set but never used", "markdown": "**\\[Line 137\\] W\\-552: variable \"thread3\" was set but never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "3483aabf-851f-38a1-9e04-f1544eb5e839" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The variable of pointer or array type is declared: thread3", "markdown": "**\\[Line 137\\] The variable of pointer or array type is declared: thread3**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "03da1472-b385-3dfe-a8b5-111bc31eeb3b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The variable of pointer type is declared: thread3", "markdown": "**\\[Line 137\\] The variable of pointer type is declared: thread3**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "79fb1fb0-4bc3-3581-8df5-a5fee9da20cf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "JSF-152", "level": "error", "message": { "text": "Declare variable 'thread3' in a separate line", "markdown": "**\\[Line 137\\] Declare variable 'thread3' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "97f8c0fc-66f6-3074-a112-e7455a48d63d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "AUTOSAR-A7_1_7-b", "level": "error", "message": { "text": "Declare variable 'thread3' in a separate line", "markdown": "**\\[Line 137\\] Declare variable 'thread3' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "26b8eb01-f455-334e-a702-2c35e3efecaa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "HICPP-7_1_1-a", "level": "warning", "message": { "text": "Declare variable 'thread3' in a separate line", "markdown": "**\\[Line 137\\] Declare variable 'thread3' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "e31354ac-e1f0-37e2-9094-9f76e29b2535" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "FORMAT-29", "level": "warning", "message": { "text": "Declare variable 'thread3' in a separate line", "markdown": "**\\[Line 137\\] Declare variable 'thread3' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "e08aa247-9dfe-3a08-98f0-31479f9c6f94" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "AUTOSAR-A7_1_7-c", "level": "error", "message": { "text": "Declare variable 'thread3' in a separate declaration statement", "markdown": "**\\[Line 137\\] Declare variable 'thread3' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "6dcc5b8c-9047-336c-b132-a0d231832f7d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "FORMAT-33", "level": "warning", "message": { "text": "Declare variable 'thread3' in a separate declaration statement", "markdown": "**\\[Line 137\\] Declare variable 'thread3' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "95ae6829-becc-3998-bace-bb5d0fcd85e3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "MISRA2008-8_0_1", "level": "error", "message": { "text": "Declare variable 'thread3' in a separate declaration statement", "markdown": "**\\[Line 137\\] Declare variable 'thread3' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "e2185fd2-e94a-3580-951a-dd927709d150" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "HICPP-7_1_1-b", "level": "warning", "message": { "text": "Declare variable 'thread3' in a separate declaration statement", "markdown": "**\\[Line 137\\] Declare variable 'thread3' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "ae3fc82c-f5cc-35de-a4bd-f41c25ccfdc7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "AUTOSAR-M8_0_1-a", "level": "error", "message": { "text": "Declare variable 'thread3' in a separate declaration statement", "markdown": "**\\[Line 137\\] Declare variable 'thread3' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "2d9b9fca-e980-3ac7-ac9f-2b60bdbc0ad6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "CERT_C-DCL04-a", "level": "warning", "message": { "text": "Declare variable 'thread3' in a separate declaration statement", "markdown": "**\\[Line 137\\] Declare variable 'thread3' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "43dd1ae5-810e-395a-8c38-dda98ff03aba" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "INIT-04", "level": "error", "message": { "text": "Pointer variable 'thread3' uninitialized when declared", "markdown": "**\\[Line 137\\] Pointer variable 'thread3' uninitialized when declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "f60ef3d3-3a34-3e14-9aa1-4dc19d799313" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "CERT_C-MSC13-a", "level": "warning", "message": { "text": "Local variable 'thread3' declared in function 'runGameThreads' is unnecessary", "markdown": "**\\[Line 137\\] Local variable 'thread3' declared in function 'runGameThreads' is unnecessary**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "caf2d2ff-42ac-335f-9b17-64df72e24e11" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "OPT-06", "level": "warning", "message": { "text": "Local variable 'thread3' declared in function 'runGameThreads' is unnecessary", "markdown": "**\\[Line 137\\] Local variable 'thread3' declared in function 'runGameThreads' is unnecessary**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "ff0de6a7-abae-3c2b-b2f5-43b83301e73d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'thread3' variable should be commented", "markdown": "**\\[Line 137\\] The 'thread3' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "72ffacd5-22a0-34db-847a-67f8b5407780" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'thread3' variable should be commented", "markdown": "**\\[Line 137\\] The 'thread3' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "3b56f98d-792b-3977-bb5f-5263ec12aaa8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "AUTOSAR-M0_1_4-a", "level": "error", "message": { "text": "The 'thread3' variable has only one use", "markdown": "**\\[Line 137\\] The 'thread3' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "fe39bf83-2b20-332f-9351-102a045236d3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "MISRA2008-0_1_4", "level": "error", "message": { "text": "The 'thread3' variable has only one use", "markdown": "**\\[Line 137\\] The 'thread3' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "2aaafaf6-6268-39dd-9291-bf8bc5b0293e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "GLOBAL-ONEUSEVAR", "level": "warning", "message": { "text": "The 'thread3' variable has only one use", "markdown": "**\\[Line 137\\] The 'thread3' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "add916b8-7318-3e95-bb8a-372db9d326e3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "AUTOSAR-M0_1_4-a", "level": "error", "message": { "text": "The 'thread4' variable has only one use", "markdown": "**\\[Line 137\\] The 'thread4' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "b29017cf-f60b-3308-af77-8a6c69e9f27b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "MISRA2008-0_1_4", "level": "error", "message": { "text": "The 'thread4' variable has only one use", "markdown": "**\\[Line 137\\] The 'thread4' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "c6120285-f25c-34e2-baef-ae66ac1d3b78" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "GLOBAL-ONEUSEVAR", "level": "warning", "message": { "text": "The 'thread4' variable has only one use", "markdown": "**\\[Line 137\\] The 'thread4' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "2d40c34a-7c44-321b-ba6a-3564a9eea48d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "PARSER-WARNING", "level": "warning", "message": { "text": "W-552: variable \"thread4\" was set but never used", "markdown": "**\\[Line 137\\] W\\-552: variable \"thread4\" was set but never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "0638e56e-4dc7-353d-89f8-341f99ed3099" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The variable of pointer or array type is declared: thread4", "markdown": "**\\[Line 137\\] The variable of pointer or array type is declared: thread4**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "5c707861-bb16-3419-9dbf-90543cf80d90" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The variable of pointer type is declared: thread4", "markdown": "**\\[Line 137\\] The variable of pointer type is declared: thread4**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "080130cc-ba04-3743-8f78-483066a85530" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "JSF-152", "level": "error", "message": { "text": "Declare variable 'thread4' in a separate line", "markdown": "**\\[Line 137\\] Declare variable 'thread4' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "4c317456-0533-30f0-a6f7-1cba710b7e8e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "AUTOSAR-A7_1_7-b", "level": "error", "message": { "text": "Declare variable 'thread4' in a separate line", "markdown": "**\\[Line 137\\] Declare variable 'thread4' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "1c189f84-5046-31c3-8617-94d80bfb7544" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "HICPP-7_1_1-a", "level": "warning", "message": { "text": "Declare variable 'thread4' in a separate line", "markdown": "**\\[Line 137\\] Declare variable 'thread4' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "231df0ae-4ed8-3ddd-8a9a-a8ace45933ae" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "FORMAT-29", "level": "warning", "message": { "text": "Declare variable 'thread4' in a separate line", "markdown": "**\\[Line 137\\] Declare variable 'thread4' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "3940f947-685d-37b1-a1af-02b6359592c8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "AUTOSAR-A7_1_7-c", "level": "error", "message": { "text": "Declare variable 'thread4' in a separate declaration statement", "markdown": "**\\[Line 137\\] Declare variable 'thread4' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "33478ae8-8c5a-3cc9-8acd-ea500acb846e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "FORMAT-33", "level": "warning", "message": { "text": "Declare variable 'thread4' in a separate declaration statement", "markdown": "**\\[Line 137\\] Declare variable 'thread4' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "5bb90d61-7532-343c-966b-58270d09bc51" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "MISRA2008-8_0_1", "level": "error", "message": { "text": "Declare variable 'thread4' in a separate declaration statement", "markdown": "**\\[Line 137\\] Declare variable 'thread4' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "50e5daf3-7c61-3fe0-aa7d-8d1788217316" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "HICPP-7_1_1-b", "level": "warning", "message": { "text": "Declare variable 'thread4' in a separate declaration statement", "markdown": "**\\[Line 137\\] Declare variable 'thread4' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "82f9b89d-aef2-386a-a317-b0dda8955644" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "AUTOSAR-M8_0_1-a", "level": "error", "message": { "text": "Declare variable 'thread4' in a separate declaration statement", "markdown": "**\\[Line 137\\] Declare variable 'thread4' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "6529f064-11a1-3dfa-9470-7f7ea3936d44" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "CERT_C-DCL04-a", "level": "warning", "message": { "text": "Declare variable 'thread4' in a separate declaration statement", "markdown": "**\\[Line 137\\] Declare variable 'thread4' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "48c99102-ac44-3300-8424-4b9642b0baab" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "INIT-04", "level": "error", "message": { "text": "Pointer variable 'thread4' uninitialized when declared", "markdown": "**\\[Line 137\\] Pointer variable 'thread4' uninitialized when declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "157c3e84-9893-3b10-b97a-cea6a31a394a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "CERT_C-MSC13-a", "level": "warning", "message": { "text": "Local variable 'thread4' declared in function 'runGameThreads' is unnecessary", "markdown": "**\\[Line 137\\] Local variable 'thread4' declared in function 'runGameThreads' is unnecessary**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "4f67c3e2-59b6-346e-b181-7e3b2b4e986c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "OPT-06", "level": "warning", "message": { "text": "Local variable 'thread4' declared in function 'runGameThreads' is unnecessary", "markdown": "**\\[Line 137\\] Local variable 'thread4' declared in function 'runGameThreads' is unnecessary**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "dc151c39-e701-3ab3-b282-b0ea4d231e50" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'thread4' variable should be commented", "markdown": "**\\[Line 137\\] The 'thread4' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "39cd0b80-5a2f-36cf-a7a9-211abec95231" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'thread4' variable should be commented", "markdown": "**\\[Line 137\\] The 'thread4' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "2caf0ec5-e4cb-3bfc-9c84-7e1724c95611" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 137, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "MISRA2012-RULE-2_2_b", "level": "error", "message": { "text": "Value of \"thread1\" is never used", "markdown": "**\\[Line 138\\] Value of \"thread1\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "b25e5417-aed8-3110-88e1-c0b32da7169a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 1 } } } ] }, { "ruleId": "MISRAC2012-RULE_2_2-b", "level": "error", "message": { "text": "Value of \"thread1\" is never used", "markdown": "**\\[Line 138\\] Value of \"thread1\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "741abf81-095b-35f0-b0d7-5cf0202aef45" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 1 } } } ] }, { "ruleId": "AUTOSAR-A0_1_1-a", "level": "error", "message": { "text": "Value of \"thread1\" is never used", "markdown": "**\\[Line 138\\] Value of \"thread1\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "1572bc5c-a7c3-383d-87fa-0f2c646b2fd4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 1 } } } ] }, { "ruleId": "CERT_C-DCL22-a", "level": "warning", "message": { "text": "Value of \"thread1\" is never used", "markdown": "**\\[Line 138\\] Value of \"thread1\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "c7e45318-6d7a-3891-9f89-5b20e09aefc5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 1 } } } ] }, { "ruleId": "MISRA2008-0_1_6", "level": "error", "message": { "text": "Value of \"thread1\" is never used", "markdown": "**\\[Line 138\\] Value of \"thread1\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "11bcca32-7a9c-35b7-91ee-179bb2ca48eb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 1 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 138\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "61c0495b-1a0e-3663-9c01-f55c82db4379" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 138\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "058b0b55-b807-30ff-9b08-dc2a6e5c80ee" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 138\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "07572b94-adaf-3b40-becc-8a0fd8d142d2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "BD-PB-VOVR", "level": "warning", "message": { "text": "Value of \"thread1\" is never used", "markdown": "**\\[Line 138\\] Value of \"thread1\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "05cf835e-98f1-3cda-94ac-89413f0ae305" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 1 } } } ] }, { "ruleId": "CODSTA-CPP-23", "level": "note", "message": { "text": "The global function 'CreateThread' is called without scope resolution operator '::'", "markdown": "**\\[Line 138\\] The global function 'CreateThread' is called without scope resolution operator '::'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "71a83229-bd92-39ab-93e3-7f8d23ce157d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'int' of function argument number '2' does not match declared type 'unsigned long long'", "markdown": "**\\[Line 138\\] The type 'int' of function argument number '2' does not match declared type 'unsigned long long'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "1432495a-f3f6-3f4c-832d-4795c80887a0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'int' of function argument number '5' does not match declared type 'unsigned long'", "markdown": "**\\[Line 138\\] The type 'int' of function argument number '5' does not match declared type 'unsigned long'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "b8074adc-fde2-302d-b3fd-75fbd181aad9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'DWORD (void *)*' of function argument number '3' does not match declared type 'DWORD (LPVOID)*'", "markdown": "**\\[Line 138\\] The type 'DWORD \\(void \\*\\)\\*' of function argument number '3' does not match declared type 'DWORD \\(LPVOID\\)\\*'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "58426859-6864-3104-a254-b65a7523f6df" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A4_10_1-b", "level": "error", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 138\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "a03fd2c8-4a92-3bd3-9b24-d2cd527771e0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "HICPP-2_5_3-a", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 138\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "cb323216-0220-3c34-814e-c4597a29aa5a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-MCPP-04", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 138\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "c68fd764-401a-3a25-9882-5c5dda98c2f1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 138\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "2b863410-5db8-3905-a79a-277b4d290095" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 138\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "e29a8195-e59d-3110-81d0-be3cc9a4e0ff" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 138\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "3b7ff205-b6fe-3f63-b274-93d089fce5de" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 138\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "6958ac40-701f-3927-8ac9-8c9165654d42" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 138\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "f714f673-ab59-3080-a619-585fdb7efcdd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 138\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "90936b59-e3a2-3c5c-8380-26d560f191e6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 138\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "2c83f758-cc79-3278-b378-022623fd0f09" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "CERT_CPP-EXP56-a", "level": "warning", "message": { "text": "Do not assing the pointer to the function with C++ language linkage to the pointer to the function with C language linkage", "markdown": "**\\[Line 138\\] Do not assing the pointer to the function with C\\+\\+ language linkage to the pointer to the function with C language linkage**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "5273fc49-410f-3d2d-9396-df708e42ca8d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "CODSTA-CPP-96", "level": "warning", "message": { "text": "Do not assing the pointer to the function with C++ language linkage to the pointer to the function with C language linkage", "markdown": "**\\[Line 138\\] Do not assing the pointer to the function with C\\+\\+ language linkage to the pointer to the function with C language linkage**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "443ab907-ed43-380e-9e24-494a3d4b588c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "MISRA2004-16_9", "level": "warning", "message": { "text": "Pointer to function 'GameLogic_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 138\\] Pointer to function 'GameLogic\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "7c3eaa12-28e5-3cf4-b762-b5a68a64e381" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "AUTOSAR-M8_4_4-a", "level": "error", "message": { "text": "Pointer to function 'GameLogic_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 138\\] Pointer to function 'GameLogic\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "b5704e61-a301-3419-8eb0-94ef0b34abca" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "MISRA2008-8_4_4", "level": "error", "message": { "text": "Pointer to function 'GameLogic_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 138\\] Pointer to function 'GameLogic\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "c17a4f38-32b8-3e30-9b06-380af12a1499" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "AUTOSAR-A4_10_1-b", "level": "error", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 138\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "dbef27e1-a4bd-309e-b0ad-8a941101ac22" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "HICPP-2_5_3-a", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 138\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "a1e59b8c-d588-3c2e-9d60-60318765509a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "CODSTA-MCPP-04", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 138\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "cd6bfcd7-a907-3df1-a4ca-818326d8e578" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 138\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "1c5a93ff-4250-3c42-ad50-0ab27ac8314f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 138\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "bd5e4a99-dd5b-321e-8116-deecc90aa6c8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 138\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "70a9ece3-adec-3b7f-bf11-91d590cfdeea" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 138\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "9e2618c7-911a-3a8f-a135-292e2671ea33" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 138\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "aae9a786-9286-322b-8aae-5545ca7a11b7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 138\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "9716a1aa-9290-3c41-84c2-891551dfb98c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 138\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "ab29c445-4886-3d33-8861-02967bce55dd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 138\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "1aab7ebd-dd14-3857-9d21-b07547b690a6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 138\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "22f031f2-2269-3922-a385-c0287bfbfe7f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 138\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "0c15f767-ea71-39ef-96fb-bef448e73fb9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 138, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "BD-PB-VOVR", "level": "warning", "message": { "text": "Value of \"thread2\" is never used", "markdown": "**\\[Line 139\\] Value of \"thread2\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "cb47469d-a2e1-3c4e-8714-5b5de91121c4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 1 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 139\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "ca7a471a-b7cf-326a-8fba-e2d69c1e53a1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 139\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "c511e458-7d91-3507-beb8-ac0ecb71caff" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 139\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "3a5b1720-4fd7-3080-acfa-cce0b646fc52" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2012-RULE-2_2_b", "level": "error", "message": { "text": "Value of \"thread2\" is never used", "markdown": "**\\[Line 139\\] Value of \"thread2\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "088186c2-7ecf-3f47-b399-3856c54252f2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 1 } } } ] }, { "ruleId": "MISRAC2012-RULE_2_2-b", "level": "error", "message": { "text": "Value of \"thread2\" is never used", "markdown": "**\\[Line 139\\] Value of \"thread2\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "ac035aa4-c21b-3d35-9b02-40cdf96f81b9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 1 } } } ] }, { "ruleId": "AUTOSAR-A0_1_1-a", "level": "error", "message": { "text": "Value of \"thread2\" is never used", "markdown": "**\\[Line 139\\] Value of \"thread2\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "0094777d-2be9-3baf-b867-7b4e0c246f0e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 1 } } } ] }, { "ruleId": "CERT_C-DCL22-a", "level": "warning", "message": { "text": "Value of \"thread2\" is never used", "markdown": "**\\[Line 139\\] Value of \"thread2\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "b21f72d7-428d-3c65-a6cf-af492a25be86" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 1 } } } ] }, { "ruleId": "MISRA2008-0_1_6", "level": "error", "message": { "text": "Value of \"thread2\" is never used", "markdown": "**\\[Line 139\\] Value of \"thread2\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "045880e3-861d-314e-8812-9d4704fabe5b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 1 } } } ] }, { "ruleId": "CODSTA-CPP-23", "level": "note", "message": { "text": "The global function 'CreateThread' is called without scope resolution operator '::'", "markdown": "**\\[Line 139\\] The global function 'CreateThread' is called without scope resolution operator '::'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "8a6610eb-4f33-368f-bf3c-6bbc326bb0cf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'int' of function argument number '2' does not match declared type 'unsigned long long'", "markdown": "**\\[Line 139\\] The type 'int' of function argument number '2' does not match declared type 'unsigned long long'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "50b2237d-bcc3-3914-80bd-5a96bc44b16d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'int' of function argument number '5' does not match declared type 'unsigned long'", "markdown": "**\\[Line 139\\] The type 'int' of function argument number '5' does not match declared type 'unsigned long'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "78a24b64-4e49-378d-b1e6-6844bb88b9b4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'DWORD (void *)*' of function argument number '3' does not match declared type 'DWORD (LPVOID)*'", "markdown": "**\\[Line 139\\] The type 'DWORD \\(void \\*\\)\\*' of function argument number '3' does not match declared type 'DWORD \\(LPVOID\\)\\*'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "26963d84-95f6-33cd-8929-49f44a09abef" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A4_10_1-b", "level": "error", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 139\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "52321e11-aa1a-3030-be77-a3e46a26d99c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "HICPP-2_5_3-a", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 139\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "e335b99c-8093-3c88-bb86-075b08cc8e39" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-MCPP-04", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 139\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "ff9f6f29-25f8-3bdb-91c3-57238d0972fb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 139\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "6315ad3e-8c2c-3b29-b7d4-d7261646f79f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 139\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "b4682332-71ad-3ca2-9611-1a1da6a949fd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 139\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "fdc834f8-3e5d-3103-b7df-1748cb49f5b5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 139\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "9c2b44c9-d71b-3df5-a46e-91b2d7442751" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 139\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "268f338f-84f8-3a1d-ac0f-008a0b8d38c5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 139\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "ba40bad1-0c52-38d4-a17c-d182ef1a4c2d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 139\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "9329a51e-526e-3a1b-a732-fbb6194fbb4d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "CERT_CPP-EXP56-a", "level": "warning", "message": { "text": "Do not assing the pointer to the function with C++ language linkage to the pointer to the function with C language linkage", "markdown": "**\\[Line 139\\] Do not assing the pointer to the function with C\\+\\+ language linkage to the pointer to the function with C language linkage**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "abbb8140-4dc3-3cbf-a566-95143b7c51c8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "CODSTA-CPP-96", "level": "warning", "message": { "text": "Do not assing the pointer to the function with C++ language linkage to the pointer to the function with C language linkage", "markdown": "**\\[Line 139\\] Do not assing the pointer to the function with C\\+\\+ language linkage to the pointer to the function with C language linkage**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "e74d5af2-89a2-3834-acdd-970f73ddd4b3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "MISRA2004-16_9", "level": "warning", "message": { "text": "Pointer to function 'Controller_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 139\\] Pointer to function 'Controller\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "462fe46e-4cf7-3b2c-a610-e23ef5ddca8e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "AUTOSAR-M8_4_4-a", "level": "error", "message": { "text": "Pointer to function 'Controller_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 139\\] Pointer to function 'Controller\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "3184da1d-492f-39d4-80e5-42cab8898780" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "MISRA2008-8_4_4", "level": "error", "message": { "text": "Pointer to function 'Controller_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 139\\] Pointer to function 'Controller\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "27095afb-2a52-380f-b2b4-3a34d91de603" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "AUTOSAR-A4_10_1-b", "level": "error", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 139\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "3bf0b2b8-c893-33e1-a501-ee3e7e35d7f7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "HICPP-2_5_3-a", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 139\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "51941437-42b6-3f36-95b7-d68ddf7001b2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "CODSTA-MCPP-04", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 139\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "d9fbe5da-42be-34a0-9e5c-35ec723e7719" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 139\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "f1a69d01-dfd3-3f43-bc2c-e7f5018e6287" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 139\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "9eeb8698-2f10-3b76-a7f1-e9773e69ecaf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 139\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "9242b598-35a5-31b1-98a2-8a8725cce5bd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 139\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "9d59bffd-aba6-3815-ba86-266bc9b4afab" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 139\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "0f345ea0-cb50-3b67-b8fd-2336e832c3cb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 139\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "4544e91e-d51e-3284-8092-f0ec53bc5544" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 139\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "8bb4e9f1-69be-3fed-8ff6-7d5e961b1f1d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 139\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "4bcedb56-6345-38b3-a770-d58d74b780b9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 139\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "1a603804-9c7a-359f-a626-120964761437" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 139\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "d64684dd-cc75-37c6-8488-e95c9da342ef" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 139, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "MISRA2012-RULE-2_2_b", "level": "error", "message": { "text": "Value of \"thread3\" is never used", "markdown": "**\\[Line 140\\] Value of \"thread3\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "b957f816-a5fd-3820-9c5c-a0f7e7bf6034" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 1 } } } ] }, { "ruleId": "MISRAC2012-RULE_2_2-b", "level": "error", "message": { "text": "Value of \"thread3\" is never used", "markdown": "**\\[Line 140\\] Value of \"thread3\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "f989f167-ad5a-32a2-a340-31079061df82" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 1 } } } ] }, { "ruleId": "AUTOSAR-A0_1_1-a", "level": "error", "message": { "text": "Value of \"thread3\" is never used", "markdown": "**\\[Line 140\\] Value of \"thread3\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "75fc5538-ae87-3d1f-9a88-80ed09430910" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 1 } } } ] }, { "ruleId": "CERT_C-DCL22-a", "level": "warning", "message": { "text": "Value of \"thread3\" is never used", "markdown": "**\\[Line 140\\] Value of \"thread3\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "5458f5c0-5f59-3e39-9dda-deb744482a03" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 1 } } } ] }, { "ruleId": "MISRA2008-0_1_6", "level": "error", "message": { "text": "Value of \"thread3\" is never used", "markdown": "**\\[Line 140\\] Value of \"thread3\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "b98158a5-787b-30b3-859d-5f4a961864d7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 1 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 140\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "c193fba3-b75e-3e7a-bcc7-54169258ff17" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 140\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "3083d676-ea3c-3011-a7b7-775103f4c05d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 140\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "c3835f9a-36b2-380a-8b96-309f95344983" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "BD-PB-VOVR", "level": "warning", "message": { "text": "Value of \"thread3\" is never used", "markdown": "**\\[Line 140\\] Value of \"thread3\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "6f56ed5e-a676-39ed-b33f-a4871a6c2093" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 1 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'int' of function argument number '5' does not match declared type 'unsigned long'", "markdown": "**\\[Line 140\\] The type 'int' of function argument number '5' does not match declared type 'unsigned long'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "d6e1c936-71e2-3314-9be0-a4dca80071db" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'DWORD (void *)*' of function argument number '3' does not match declared type 'DWORD (LPVOID)*'", "markdown": "**\\[Line 140\\] The type 'DWORD \\(void \\*\\)\\*' of function argument number '3' does not match declared type 'DWORD \\(LPVOID\\)\\*'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "8669bf1e-f23d-34c0-b222-ef2fcc47c321" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "CODSTA-CPP-23", "level": "note", "message": { "text": "The global function 'CreateThread' is called without scope resolution operator '::'", "markdown": "**\\[Line 140\\] The global function 'CreateThread' is called without scope resolution operator '::'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "e7a89e5f-4d12-33bc-9f87-626cf669dd8e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'int' of function argument number '2' does not match declared type 'unsigned long long'", "markdown": "**\\[Line 140\\] The type 'int' of function argument number '2' does not match declared type 'unsigned long long'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "8e57c5ec-1a01-3f13-b249-f91918a7679c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A4_10_1-b", "level": "error", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 140\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "584e5d49-e09c-3e8c-8866-309ef9d2cda2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "HICPP-2_5_3-a", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 140\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "8e5f2988-dbcc-3f63-8138-0911aad7d8c7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-MCPP-04", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 140\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "b7fc24f2-cbf5-3b06-b62b-6082b6fdbb44" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 140\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "bd684180-0715-3b6c-9198-051b8bd8e77b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 140\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "5860fe5f-a6c5-3257-a2c4-93cb28012b13" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 140\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "cee9b048-8af7-3894-a9fc-b518b84e7518" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 140\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "0991891f-32eb-3705-becb-6c74b065df16" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 140\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "37d8fecb-aba5-380f-ab75-cf51e7dcb0f1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 140\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "e6791661-6ae8-351a-8288-438c7514ffef" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 140\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "45d015fd-fe3a-39ce-af9c-86ff61f58106" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "CERT_CPP-EXP56-a", "level": "warning", "message": { "text": "Do not assing the pointer to the function with C++ language linkage to the pointer to the function with C language linkage", "markdown": "**\\[Line 140\\] Do not assing the pointer to the function with C\\+\\+ language linkage to the pointer to the function with C language linkage**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "4618e6b6-d194-3c98-8309-0d340e1caf5b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "CODSTA-CPP-96", "level": "warning", "message": { "text": "Do not assing the pointer to the function with C++ language linkage to the pointer to the function with C language linkage", "markdown": "**\\[Line 140\\] Do not assing the pointer to the function with C\\+\\+ language linkage to the pointer to the function with C language linkage**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "989f1c07-20e7-3835-bb9d-d55e04a5112b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "MISRA2004-16_9", "level": "warning", "message": { "text": "Pointer to function 'Physics_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 140\\] Pointer to function 'Physics\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "1c5f024e-caaf-34c3-8ac5-6d787995de6d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "AUTOSAR-M8_4_4-a", "level": "error", "message": { "text": "Pointer to function 'Physics_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 140\\] Pointer to function 'Physics\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "86c0fd58-36e3-3358-aa18-5c11cf631174" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "MISRA2008-8_4_4", "level": "error", "message": { "text": "Pointer to function 'Physics_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 140\\] Pointer to function 'Physics\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "2ac98535-0ead-3a04-bc93-38a40f73c411" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "AUTOSAR-A4_10_1-b", "level": "error", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 140\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "f205cf3a-fcb4-387f-8be5-da8964b7737e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "HICPP-2_5_3-a", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 140\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "e4100780-8add-3281-9a64-d4ff356c3fa8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "CODSTA-MCPP-04", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 140\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "c9bf4a41-cc5b-3fe8-8f74-f9558e4cb977" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 140\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "34891549-c585-3fd0-8de4-796a3a1a53c2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 140\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "ab062410-4e9f-3126-8ad0-8b8d4c751e97" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 140\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "4032e6c9-62e1-344b-a5a1-ec47f9067ec5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 140\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "fbd17447-1fe3-3d61-99d1-85c9effd54a1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 140\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "645d4a74-fef2-34b9-9e2a-47bf5568d1f4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 140\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "b9144751-5a5f-3daa-a0f1-3fc822537e1f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 140\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "55671f41-7876-372f-9d23-cee63920e398" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 140\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "5b1213e9-feba-3cea-81f2-5f6f6d37dc97" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 140\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "52619313-11c1-3be0-a917-e4073e6d4b1d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 140\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "b5d0e58d-b392-378e-9438-69e1cf30eb6c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 140, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 141\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "ed7ff2aa-d53f-3269-add6-630fcb4287e8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 141\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "a3ef1a62-4641-340b-91b5-c02f37ed6349" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 141\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "c4e39c2c-8e28-3041-9ccd-28b86d526b9d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "BD-PB-VOVR", "level": "warning", "message": { "text": "Value of \"thread4\" is never used", "markdown": "**\\[Line 141\\] Value of \"thread4\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "ba591265-80fd-3748-9c4e-576573dc8d0b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 1 } } } ] }, { "ruleId": "MISRA2012-RULE-2_2_b", "level": "error", "message": { "text": "Value of \"thread4\" is never used", "markdown": "**\\[Line 141\\] Value of \"thread4\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "0a0d4109-0bcb-3d22-92a7-2b870b542097" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 1 } } } ] }, { "ruleId": "MISRAC2012-RULE_2_2-b", "level": "error", "message": { "text": "Value of \"thread4\" is never used", "markdown": "**\\[Line 141\\] Value of \"thread4\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "40a67953-dcaf-38ad-8f28-3dac23593e15" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 1 } } } ] }, { "ruleId": "AUTOSAR-A0_1_1-a", "level": "error", "message": { "text": "Value of \"thread4\" is never used", "markdown": "**\\[Line 141\\] Value of \"thread4\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "fcedd223-b580-30a2-af7e-8373aff86b29" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 1 } } } ] }, { "ruleId": "CERT_C-DCL22-a", "level": "warning", "message": { "text": "Value of \"thread4\" is never used", "markdown": "**\\[Line 141\\] Value of \"thread4\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "c7685632-3881-3006-9450-08c03e8ef0d0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 1 } } } ] }, { "ruleId": "MISRA2008-0_1_6", "level": "error", "message": { "text": "Value of \"thread4\" is never used", "markdown": "**\\[Line 141\\] Value of \"thread4\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "f8e433a2-bdf7-3064-a696-3b9bc792db99" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 1 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'int' of function argument number '2' does not match declared type 'unsigned long long'", "markdown": "**\\[Line 141\\] The type 'int' of function argument number '2' does not match declared type 'unsigned long long'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "ec8794b3-8b51-3b77-a607-56f1685a7202" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'int' of function argument number '5' does not match declared type 'unsigned long'", "markdown": "**\\[Line 141\\] The type 'int' of function argument number '5' does not match declared type 'unsigned long'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "0f267818-f6ee-38d9-b359-02aeba1b2a4b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'DWORD (void *)*' of function argument number '3' does not match declared type 'DWORD (LPVOID)*'", "markdown": "**\\[Line 141\\] The type 'DWORD \\(void \\*\\)\\*' of function argument number '3' does not match declared type 'DWORD \\(LPVOID\\)\\*'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "ddea279c-844e-39b5-bf99-45e2b05645c1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "CODSTA-CPP-23", "level": "note", "message": { "text": "The global function 'CreateThread' is called without scope resolution operator '::'", "markdown": "**\\[Line 141\\] The global function 'CreateThread' is called without scope resolution operator '::'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "5d91d492-c9d3-311c-b5f4-b02ec7e13dc3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A4_10_1-b", "level": "error", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 141\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "e3022039-c2e3-3ded-93d4-4f4eddcb202d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "HICPP-2_5_3-a", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 141\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "8dbb2162-2d14-32f9-a23e-afb09b2b9037" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-MCPP-04", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 141\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "994064bb-1fa6-3d18-b872-9da488af4349" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 141\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "23d0d24e-13e5-3de0-ad7d-c7c1baeff97a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 141\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "470692b3-3ef1-3ce4-9418-6d123effa133" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 141\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "1506b7f0-2cbe-302e-8db2-f2e807200a0d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 141\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "e6d36715-40ff-375e-bf7e-c0294831e76c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 141\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "26468048-d553-3e4d-8652-6f3a00aaf105" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 141\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "c01009ae-d408-3c89-8676-e9394b6b0081" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 141\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "d844290a-e9f5-3a94-a35d-b77594699d1b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "CERT_CPP-EXP56-a", "level": "warning", "message": { "text": "Do not assing the pointer to the function with C++ language linkage to the pointer to the function with C language linkage", "markdown": "**\\[Line 141\\] Do not assing the pointer to the function with C\\+\\+ language linkage to the pointer to the function with C language linkage**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "5a3b2ba1-a593-3f4c-9743-f322645d3e45" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "CODSTA-CPP-96", "level": "warning", "message": { "text": "Do not assing the pointer to the function with C++ language linkage to the pointer to the function with C language linkage", "markdown": "**\\[Line 141\\] Do not assing the pointer to the function with C\\+\\+ language linkage to the pointer to the function with C language linkage**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "1ae09fb0-fe4a-3eeb-8ed5-a04363501fa0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "MISRA2004-16_9", "level": "warning", "message": { "text": "Pointer to function 'Render_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 141\\] Pointer to function 'Render\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "24389e42-c915-3571-a771-fb45634c4546" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "AUTOSAR-M8_4_4-a", "level": "error", "message": { "text": "Pointer to function 'Render_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 141\\] Pointer to function 'Render\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "93f1f835-6211-34ed-93a7-1fd94e0319ce" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "MISRA2008-8_4_4", "level": "error", "message": { "text": "Pointer to function 'Render_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 141\\] Pointer to function 'Render\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "69cc15c7-18de-399e-8b83-fe86c97c90ce" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "AUTOSAR-A4_10_1-b", "level": "error", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 141\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "c40d436d-3270-3583-8723-900b44ddc641" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "HICPP-2_5_3-a", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 141\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "ed6f4345-a3e2-362a-8f1d-7a2ae2e7b850" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "CODSTA-MCPP-04", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 141\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "d60a7160-cf4e-3122-ae51-f991f99d7ffc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 141\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "d1e3f212-191b-3244-9856-aab7d0e459ca" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 141\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "ce5b91cf-1c6d-3d95-ab07-3af8b2aa75d3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 141\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "3a52963d-4e4e-3191-8141-f2ad2930c51c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 141\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "f2dffdd0-d7c5-355b-8465-b741efa8b392" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 141\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "25ec8e74-825b-3097-b36e-f881a47ba450" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 141\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "7922bfd7-b8c6-35dc-9180-fd3d67d33cf7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 141\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "af0c3f58-efed-326f-a9f2-f85ad8083504" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 141\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "e382a571-4c95-32a5-8858-7817976c0c20" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 141\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "431227bf-ddf5-3b28-9361-83a75dc1c361" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 141\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "0672a740-9ee0-3093-a609-37b4d55823c1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 141, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'runGameThreads2' function is not preceded by a comment", "markdown": "**\\[Line 144\\] The definition of the 'runGameThreads2' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "c7c43993-7970-326c-98b8-f11cb4ca7497" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'runGameThreads2' function is not preceded by a comment", "markdown": "**\\[Line 144\\] The definition of the 'runGameThreads2' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "10e818ef-671a-3ea2-9a9b-7884c3ecb7b3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "OWASP2019-API9-e", "level": "warning", "message": { "text": "Function 'runGameThreads2' has external linkage and is not declared in the header", "markdown": "**\\[Line 144\\] Function 'runGameThreads2' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "1b3d1122-3c7e-3872-a6c8-2cf51f8b6b4f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-A3_3_1-a", "level": "error", "message": { "text": "Function 'runGameThreads2' has external linkage and is not declared in the header", "markdown": "**\\[Line 144\\] Function 'runGameThreads2' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "f299b673-fb83-33c0-b7f5-8da472c7f959" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "JSF-137", "level": "warning", "message": { "text": "Function 'runGameThreads2' has external linkage and is not declared in the header", "markdown": "**\\[Line 144\\] Function 'runGameThreads2' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "45b126a9-2a83-3289-b7f3-fad9c87f27ee" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA-023", "level": "warning", "message": { "text": "Function 'runGameThreads2' has external linkage and is not declared in the header", "markdown": "**\\[Line 144\\] Function 'runGameThreads2' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "3b1159c3-415e-3b13-bf00-f443ab1ffe2e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA2008-3_3_1", "level": "error", "message": { "text": "Function 'runGameThreads2' has external linkage and is not declared in the header", "markdown": "**\\[Line 144\\] Function 'runGameThreads2' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "7df167c8-7589-35ef-8928-d86c992dfeba" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "CERT_C-DCL15-a", "level": "warning", "message": { "text": "Function 'runGameThreads2' has external linkage and is not declared in the header", "markdown": "**\\[Line 144\\] Function 'runGameThreads2' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "da1cad2a-1146-3b4a-afce-1db5a61fdba5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA2004-8_10", "level": "warning", "message": { "text": "Function 'runGameThreads2' has external linkage and is not declared in the header", "markdown": "**\\[Line 144\\] Function 'runGameThreads2' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "56aeadb2-6c84-34c2-981d-8a3d3c893d08" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "JSF-051", "level": "warning", "message": { "text": "The name 'runGameThreads2' should be composed only of lowercase letters", "markdown": "**\\[Line 144\\] The name 'runGameThreads2' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "f61462f3-44c6-3ca3-b713-d028143a439a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "NAMING-44", "level": "warning", "message": { "text": "The name 'runGameThreads2' should be composed only of lowercase letters", "markdown": "**\\[Line 144\\] The name 'runGameThreads2' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "3fa8ccc0-f032-3777-be4f-e0734722c899" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "JSF-098", "level": "warning", "message": { "text": "Do not declare the 'runGameThreads2' function in the global namespace", "markdown": "**\\[Line 144\\] Do not declare the 'runGameThreads2' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "de8d955b-5b09-3e88-837a-ba9be5010943" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-M7_3_1-a", "level": "error", "message": { "text": "Do not declare the 'runGameThreads2' function in the global namespace", "markdown": "**\\[Line 144\\] Do not declare the 'runGameThreads2' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "23288271-b130-31bc-ac78-fdaaac794b68" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "CODSTA-CPP-36", "level": "warning", "message": { "text": "Do not declare the 'runGameThreads2' function in the global namespace", "markdown": "**\\[Line 144\\] Do not declare the 'runGameThreads2' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "5622c022-731c-3baa-bcc7-4553f5ffbd98" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA2008-7_3_1", "level": "error", "message": { "text": "Do not declare the 'runGameThreads2' function in the global namespace", "markdown": "**\\[Line 144\\] Do not declare the 'runGameThreads2' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "1fe2f09d-b8b6-3275-b6d8-07bbed459ebc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'runGameThreads2' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 144\\] The 'runGameThreads2' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "b6b1e438-6dc1-34ec-8493-3fa0b0d8f2df" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'runGameThreads2' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 144\\] The 'runGameThreads2' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "a2822590-622f-3454-9f90-7ed7ef2eb82f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "FORMAT-28", "level": "warning", "message": { "text": "Return type is not placed in line before function 'runGameThreads2'", "markdown": "**\\[Line 144\\] Return type is not placed in line before function 'runGameThreads2'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "29029061-48e6-33b5-970b-31dabc5982bf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'runGameThreads2' has Cyclomatic Complexity value: 1", "markdown": "**\\[Line 144\\] Function 'runGameThreads2' has Cyclomatic Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "6ab23fb6-4181-30bb-a188-28692d3dc3c3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'runGameThreads2' has Essential Complexity value: 1", "markdown": "**\\[Line 144\\] Function 'runGameThreads2' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "9978f956-4775-3020-8f3d-0b8aea4e1f97" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "NAMING-17", "level": "warning", "message": { "text": "Naming convention not followed: runGameThreads2", "markdown": "**\\[Line 144\\] Naming convention not followed: runGameThreads2**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "b1c76d8e-0990-31fd-94eb-c6e0a34c37fb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "GLOBAL-UNUSEDFUNC", "level": "warning", "message": { "text": "The 'runGameThreads2' function is not used in the testing scope", "markdown": "**\\[Line 144\\] The 'runGameThreads2' function is not used in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "b21f4441-5987-3a44-bb03-44820943a52d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-M0_1_10-a", "level": "warning", "message": { "text": "The 'runGameThreads2' function is not used in the testing scope", "markdown": "**\\[Line 144\\] The 'runGameThreads2' function is not used in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "346940fa-815f-372b-b43c-f2f421349697" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA2008-0_1_10_b", "level": "error", "message": { "text": "The 'runGameThreads2' function is not used in the testing scope", "markdown": "**\\[Line 144\\] The 'runGameThreads2' function is not used in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "989655515", "unbViolId": "6f14ca3b-495e-398d-b6a2-fb5c07c9b0ff" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 144, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "METRICS-19", "level": "warning", "message": { "text": "Percentage of comment lines vs. all method's lines is: 0", "markdown": "**\\[Line 145\\] Percentage of comment lines vs\\. all method's lines is: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "123", "unbViolId": "4af64daf-3346-3c46-bfa7-cfa54bd6c368" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 145, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 146\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "409232213", "unbViolId": "d3ee38ca-0be7-36c4-81ca-f91430b44752" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 146, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 146\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "409232213", "unbViolId": "1739990d-9153-3164-bd54-1f8fd98292fa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 146, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 146\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "409232213", "unbViolId": "ceed1aea-4c50-3746-9b38-2460ee5d7866" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 146, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CODSTA-27", "level": "warning", "message": { "text": "Global variable 'exitGame' is modified in function 'runGameThreads2'", "markdown": "**\\[Line 146\\] Global variable 'exitGame' is modified in function 'runGameThreads2'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "409232213", "unbViolId": "107196b2-19f5-362e-86d8-4a0dd958841d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 146, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 147\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "7b8829b1-bd48-3931-a446-5a46c7f2ba11" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 147\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "5e194f03-0edb-3d46-8d48-9eea04876ec1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 147\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "c3f5a507-7e7d-3422-9157-9141569c2f01" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CERT_C-MSC13-a", "level": "warning", "message": { "text": "Local variable 'thread1' declared in function 'runGameThreads2' is unnecessary", "markdown": "**\\[Line 147\\] Local variable 'thread1' declared in function 'runGameThreads2' is unnecessary**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "5b974ea7-3d31-310c-a3de-078fcc12a080" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "OPT-06", "level": "warning", "message": { "text": "Local variable 'thread1' declared in function 'runGameThreads2' is unnecessary", "markdown": "**\\[Line 147\\] Local variable 'thread1' declared in function 'runGameThreads2' is unnecessary**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "2374fc16-8545-3921-9321-c62f46451ccf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'thread1' variable should be commented", "markdown": "**\\[Line 147\\] The 'thread1' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "e8cc83c3-eb3d-3550-ad07-159e34bbbc86" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'thread1' variable should be commented", "markdown": "**\\[Line 147\\] The 'thread1' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "23136550-42fc-3d71-b7e1-83118b2f926c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "PARSER-WARNING", "level": "warning", "message": { "text": "W-552: variable \"thread1\" was set but never used", "markdown": "**\\[Line 147\\] W\\-552: variable \"thread1\" was set but never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "070b7aa0-5528-3b79-903e-493b0d10a9d2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The variable of pointer or array type is declared: thread1", "markdown": "**\\[Line 147\\] The variable of pointer or array type is declared: thread1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "c09e1b3c-03b2-3add-8e1a-af2d266bf945" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The variable of pointer type is declared: thread1", "markdown": "**\\[Line 147\\] The variable of pointer type is declared: thread1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "d4bb166b-6e9f-3c54-98ef-004ae10a5e7a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "INIT-04", "level": "error", "message": { "text": "Pointer variable 'thread1' uninitialized when declared", "markdown": "**\\[Line 147\\] Pointer variable 'thread1' uninitialized when declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "d5157001-3f09-3285-be32-4d598834dbda" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-M0_1_4-a", "level": "error", "message": { "text": "The 'thread1' variable has only one use", "markdown": "**\\[Line 147\\] The 'thread1' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "e50eb6a8-8ec1-3132-a7bc-7134ebb2632a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "MISRA2008-0_1_4", "level": "error", "message": { "text": "The 'thread1' variable has only one use", "markdown": "**\\[Line 147\\] The 'thread1' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "3e86fdd1-3f00-34bc-a892-9db7e488e882" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "GLOBAL-ONEUSEVAR", "level": "warning", "message": { "text": "The 'thread1' variable has only one use", "markdown": "**\\[Line 147\\] The 'thread1' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "48786e72-d515-3afe-84d5-6a33b353157f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-M0_1_4-a", "level": "error", "message": { "text": "The 'thread2' variable has only one use", "markdown": "**\\[Line 147\\] The 'thread2' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "6a097b26-881f-3a2b-b1d5-3494c76eafb9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "MISRA2008-0_1_4", "level": "error", "message": { "text": "The 'thread2' variable has only one use", "markdown": "**\\[Line 147\\] The 'thread2' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "1279609c-edd3-3fa4-a220-d8cd1638f379" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "GLOBAL-ONEUSEVAR", "level": "warning", "message": { "text": "The 'thread2' variable has only one use", "markdown": "**\\[Line 147\\] The 'thread2' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "c61d3d25-68f9-3cb7-af04-16a7f8dc4f0c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "PARSER-WARNING", "level": "warning", "message": { "text": "W-552: variable \"thread2\" was set but never used", "markdown": "**\\[Line 147\\] W\\-552: variable \"thread2\" was set but never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "1a33ee8a-766d-3775-b31d-e3d534b9d82b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The variable of pointer or array type is declared: thread2", "markdown": "**\\[Line 147\\] The variable of pointer or array type is declared: thread2**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "8a0e3042-a4af-3c6d-9895-7ef8323a1ce4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The variable of pointer type is declared: thread2", "markdown": "**\\[Line 147\\] The variable of pointer type is declared: thread2**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "2528dafc-79fd-3fb7-9ac0-9ec0aaf346a0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "JSF-152", "level": "error", "message": { "text": "Declare variable 'thread2' in a separate line", "markdown": "**\\[Line 147\\] Declare variable 'thread2' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "1fb6e730-48ad-355f-a5ef-4f096f4a7fae" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "AUTOSAR-A7_1_7-b", "level": "error", "message": { "text": "Declare variable 'thread2' in a separate line", "markdown": "**\\[Line 147\\] Declare variable 'thread2' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "dc9e3f1f-d9a0-37ed-b5fd-b2501321e4d9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "HICPP-7_1_1-a", "level": "warning", "message": { "text": "Declare variable 'thread2' in a separate line", "markdown": "**\\[Line 147\\] Declare variable 'thread2' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "78f9aea8-2af8-38c1-8052-2be6457cc869" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "FORMAT-29", "level": "warning", "message": { "text": "Declare variable 'thread2' in a separate line", "markdown": "**\\[Line 147\\] Declare variable 'thread2' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "289609cc-5b0f-3248-a8d8-42c72ebca4cd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "AUTOSAR-A7_1_7-c", "level": "error", "message": { "text": "Declare variable 'thread2' in a separate declaration statement", "markdown": "**\\[Line 147\\] Declare variable 'thread2' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "9cdceffd-cf8a-3c1c-9018-deb3fde9ba14" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "FORMAT-33", "level": "warning", "message": { "text": "Declare variable 'thread2' in a separate declaration statement", "markdown": "**\\[Line 147\\] Declare variable 'thread2' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "0076da76-504c-3f77-a4d5-69a53895322e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "MISRA2008-8_0_1", "level": "error", "message": { "text": "Declare variable 'thread2' in a separate declaration statement", "markdown": "**\\[Line 147\\] Declare variable 'thread2' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "60092def-41a2-3cfd-a421-55459190b63b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "HICPP-7_1_1-b", "level": "warning", "message": { "text": "Declare variable 'thread2' in a separate declaration statement", "markdown": "**\\[Line 147\\] Declare variable 'thread2' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "25c2115e-503d-398d-a0b7-d3f7c0dc57f1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "AUTOSAR-M8_0_1-a", "level": "error", "message": { "text": "Declare variable 'thread2' in a separate declaration statement", "markdown": "**\\[Line 147\\] Declare variable 'thread2' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "0332d78d-0307-35db-9596-b36e5f379f72" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "CERT_C-DCL04-a", "level": "warning", "message": { "text": "Declare variable 'thread2' in a separate declaration statement", "markdown": "**\\[Line 147\\] Declare variable 'thread2' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "52e5ddc6-0a2e-383e-bdaa-be7fc394971c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "INIT-04", "level": "error", "message": { "text": "Pointer variable 'thread2' uninitialized when declared", "markdown": "**\\[Line 147\\] Pointer variable 'thread2' uninitialized when declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "021dafb8-5d87-3953-bed3-169977e2833a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "CERT_C-MSC13-a", "level": "warning", "message": { "text": "Local variable 'thread2' declared in function 'runGameThreads2' is unnecessary", "markdown": "**\\[Line 147\\] Local variable 'thread2' declared in function 'runGameThreads2' is unnecessary**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "ae0898f4-9519-3b41-956e-18f9e84c3b2c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "OPT-06", "level": "warning", "message": { "text": "Local variable 'thread2' declared in function 'runGameThreads2' is unnecessary", "markdown": "**\\[Line 147\\] Local variable 'thread2' declared in function 'runGameThreads2' is unnecessary**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "d1357f60-876f-3a00-8fb9-8cea2e59d2ed" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'thread2' variable should be commented", "markdown": "**\\[Line 147\\] The 'thread2' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "c73b46eb-2fd9-37a0-a46b-755e22542e08" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'thread2' variable should be commented", "markdown": "**\\[Line 147\\] The 'thread2' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "62f1523c-6286-35f1-a188-2b2f9bb11ac8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "CERT_C-MSC13-a", "level": "warning", "message": { "text": "Local variable 'thread3' declared in function 'runGameThreads2' is unnecessary", "markdown": "**\\[Line 147\\] Local variable 'thread3' declared in function 'runGameThreads2' is unnecessary**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "6f16adfe-b616-3709-8790-7d1984cb51b3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "OPT-06", "level": "warning", "message": { "text": "Local variable 'thread3' declared in function 'runGameThreads2' is unnecessary", "markdown": "**\\[Line 147\\] Local variable 'thread3' declared in function 'runGameThreads2' is unnecessary**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "9f9e804d-a541-3c2f-b4e9-de723812cb34" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'thread3' variable should be commented", "markdown": "**\\[Line 147\\] The 'thread3' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "278ba343-90a9-3ed3-b99f-110727634a94" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'thread3' variable should be commented", "markdown": "**\\[Line 147\\] The 'thread3' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "5512a6aa-3c60-3f0f-a7cb-01553fc189e5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "PARSER-WARNING", "level": "warning", "message": { "text": "W-552: variable \"thread3\" was set but never used", "markdown": "**\\[Line 147\\] W\\-552: variable \"thread3\" was set but never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "f9632d1b-b831-3694-99cb-f1e2a6b7cbc7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The variable of pointer or array type is declared: thread3", "markdown": "**\\[Line 147\\] The variable of pointer or array type is declared: thread3**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "49676412-7a4e-349f-82e8-a1e725116252" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The variable of pointer type is declared: thread3", "markdown": "**\\[Line 147\\] The variable of pointer type is declared: thread3**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "f98bf0ce-b440-34ad-b69b-cdc9ea9bdc51" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "JSF-152", "level": "error", "message": { "text": "Declare variable 'thread3' in a separate line", "markdown": "**\\[Line 147\\] Declare variable 'thread3' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "4fea85c4-bd16-39d4-848c-c0591e2ab7fe" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "AUTOSAR-A7_1_7-b", "level": "error", "message": { "text": "Declare variable 'thread3' in a separate line", "markdown": "**\\[Line 147\\] Declare variable 'thread3' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "9fe0b5a6-8e3c-369b-bf79-ca70262bad56" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "HICPP-7_1_1-a", "level": "warning", "message": { "text": "Declare variable 'thread3' in a separate line", "markdown": "**\\[Line 147\\] Declare variable 'thread3' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "bce021b2-1dcf-38f3-aa4e-9fb979c5ed18" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "FORMAT-29", "level": "warning", "message": { "text": "Declare variable 'thread3' in a separate line", "markdown": "**\\[Line 147\\] Declare variable 'thread3' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "8e2e844c-b17d-341f-9488-cb9aec4b7786" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "AUTOSAR-A7_1_7-c", "level": "error", "message": { "text": "Declare variable 'thread3' in a separate declaration statement", "markdown": "**\\[Line 147\\] Declare variable 'thread3' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "b6fd9760-9ade-3cb5-ba7f-0a048c5d7b2c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "FORMAT-33", "level": "warning", "message": { "text": "Declare variable 'thread3' in a separate declaration statement", "markdown": "**\\[Line 147\\] Declare variable 'thread3' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "2e80f998-b7f2-376d-8c1f-de9c623ed00d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "MISRA2008-8_0_1", "level": "error", "message": { "text": "Declare variable 'thread3' in a separate declaration statement", "markdown": "**\\[Line 147\\] Declare variable 'thread3' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "b1f0e740-8d1d-3d9f-a3fe-dcf6c2003b81" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "HICPP-7_1_1-b", "level": "warning", "message": { "text": "Declare variable 'thread3' in a separate declaration statement", "markdown": "**\\[Line 147\\] Declare variable 'thread3' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "a87e763c-a3d5-3d26-8297-13c4b42fbee1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "AUTOSAR-M8_0_1-a", "level": "error", "message": { "text": "Declare variable 'thread3' in a separate declaration statement", "markdown": "**\\[Line 147\\] Declare variable 'thread3' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "a933033e-324d-3bb5-aa4c-bc5a66b70ab2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "CERT_C-DCL04-a", "level": "warning", "message": { "text": "Declare variable 'thread3' in a separate declaration statement", "markdown": "**\\[Line 147\\] Declare variable 'thread3' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "6c3504fc-eb02-38c2-a0f1-67a999d39558" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "INIT-04", "level": "error", "message": { "text": "Pointer variable 'thread3' uninitialized when declared", "markdown": "**\\[Line 147\\] Pointer variable 'thread3' uninitialized when declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "32de8bc6-4ef1-37d4-bd51-63ffe1f06c81" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "AUTOSAR-M0_1_4-a", "level": "error", "message": { "text": "The 'thread3' variable has only one use", "markdown": "**\\[Line 147\\] The 'thread3' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "10ae8c8a-f516-3aa4-b48c-e5c9f3008157" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "MISRA2008-0_1_4", "level": "error", "message": { "text": "The 'thread3' variable has only one use", "markdown": "**\\[Line 147\\] The 'thread3' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "11ce3676-7fcc-3767-918b-19d309ea319e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "GLOBAL-ONEUSEVAR", "level": "warning", "message": { "text": "The 'thread3' variable has only one use", "markdown": "**\\[Line 147\\] The 'thread3' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "43fac522-6c23-37e5-ae23-22652223979d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "AUTOSAR-M0_1_4-a", "level": "error", "message": { "text": "The 'thread4' variable has only one use", "markdown": "**\\[Line 147\\] The 'thread4' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "5792f990-76b8-3cd0-8955-f378092e5446" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "MISRA2008-0_1_4", "level": "error", "message": { "text": "The 'thread4' variable has only one use", "markdown": "**\\[Line 147\\] The 'thread4' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "5fc6ce04-fc3c-3edc-9850-e62b46d26f0a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "GLOBAL-ONEUSEVAR", "level": "warning", "message": { "text": "The 'thread4' variable has only one use", "markdown": "**\\[Line 147\\] The 'thread4' variable has only one use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "336f3a15-de91-33b9-926a-b606ca7653b7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "PARSER-WARNING", "level": "warning", "message": { "text": "W-552: variable \"thread4\" was set but never used", "markdown": "**\\[Line 147\\] W\\-552: variable \"thread4\" was set but never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "b6d86615-f8bb-3893-980e-8eeb7c7cd617" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The variable of pointer or array type is declared: thread4", "markdown": "**\\[Line 147\\] The variable of pointer or array type is declared: thread4**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "9a1a7f46-8a88-3948-aa64-0036a934ac27" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The variable of pointer type is declared: thread4", "markdown": "**\\[Line 147\\] The variable of pointer type is declared: thread4**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "238e7aea-b97d-342a-b5d3-6e1ae0545be0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "JSF-152", "level": "error", "message": { "text": "Declare variable 'thread4' in a separate line", "markdown": "**\\[Line 147\\] Declare variable 'thread4' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "b312ccbe-a1aa-3c21-9c82-1c717d155142" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "AUTOSAR-A7_1_7-b", "level": "error", "message": { "text": "Declare variable 'thread4' in a separate line", "markdown": "**\\[Line 147\\] Declare variable 'thread4' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "a8551e84-14e2-3a9a-a68f-d4735c31e293" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "HICPP-7_1_1-a", "level": "warning", "message": { "text": "Declare variable 'thread4' in a separate line", "markdown": "**\\[Line 147\\] Declare variable 'thread4' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "fe0cc462-7a10-3528-a74a-943c77bb88e1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "FORMAT-29", "level": "warning", "message": { "text": "Declare variable 'thread4' in a separate line", "markdown": "**\\[Line 147\\] Declare variable 'thread4' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "3cbf6d77-8ff1-35b0-8620-130caada0966" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "AUTOSAR-A7_1_7-c", "level": "error", "message": { "text": "Declare variable 'thread4' in a separate declaration statement", "markdown": "**\\[Line 147\\] Declare variable 'thread4' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "938edd3a-795a-3487-9233-035707e9bb1d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "FORMAT-33", "level": "warning", "message": { "text": "Declare variable 'thread4' in a separate declaration statement", "markdown": "**\\[Line 147\\] Declare variable 'thread4' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "3380d81e-54bc-31f5-823a-d87a572aef0b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "MISRA2008-8_0_1", "level": "error", "message": { "text": "Declare variable 'thread4' in a separate declaration statement", "markdown": "**\\[Line 147\\] Declare variable 'thread4' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "6c6e2170-ccf1-39b5-8927-015d02455d20" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "HICPP-7_1_1-b", "level": "warning", "message": { "text": "Declare variable 'thread4' in a separate declaration statement", "markdown": "**\\[Line 147\\] Declare variable 'thread4' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "adb849d3-d173-31de-ae48-5b7d74e9a4dc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "AUTOSAR-M8_0_1-a", "level": "error", "message": { "text": "Declare variable 'thread4' in a separate declaration statement", "markdown": "**\\[Line 147\\] Declare variable 'thread4' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "9fc70a2a-6cfb-3554-bc99-2bc2b3eb29e8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "CERT_C-DCL04-a", "level": "warning", "message": { "text": "Declare variable 'thread4' in a separate declaration statement", "markdown": "**\\[Line 147\\] Declare variable 'thread4' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "654c1568-34b4-38e7-a38e-c030762dcbae" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "INIT-04", "level": "error", "message": { "text": "Pointer variable 'thread4' uninitialized when declared", "markdown": "**\\[Line 147\\] Pointer variable 'thread4' uninitialized when declared**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "ed94c8ac-c76f-3495-9322-4ac7c155d5c2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "CERT_C-MSC13-a", "level": "warning", "message": { "text": "Local variable 'thread4' declared in function 'runGameThreads2' is unnecessary", "markdown": "**\\[Line 147\\] Local variable 'thread4' declared in function 'runGameThreads2' is unnecessary**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "a693dd70-9ed6-3e9b-86c9-9566518a97e3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "OPT-06", "level": "warning", "message": { "text": "Local variable 'thread4' declared in function 'runGameThreads2' is unnecessary", "markdown": "**\\[Line 147\\] Local variable 'thread4' declared in function 'runGameThreads2' is unnecessary**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "c9a564c8-6dcd-3f2f-bd3d-43b7940a6f76" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'thread4' variable should be commented", "markdown": "**\\[Line 147\\] The 'thread4' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "31b76ad1-8cb2-3158-b53f-b0e0a11cd8d1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'thread4' variable should be commented", "markdown": "**\\[Line 147\\] The 'thread4' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1123182240", "unbViolId": "e8e42ec6-a213-33ee-9641-9807a645e6e1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 147, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 148\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "a14c8c0d-6acb-3665-8039-2704c006ba30" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 148\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "59a851ca-ef62-3abc-a25e-991a0744eb4f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 148\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "5ab544a2-f6a1-3a1f-bae3-a4e9a8a7e592" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2012-RULE-2_2_b", "level": "error", "message": { "text": "Value of \"thread1\" is never used", "markdown": "**\\[Line 148\\] Value of \"thread1\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "a67ded4b-f71d-3544-b1e0-a518c40705d0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 1 } } } ] }, { "ruleId": "MISRAC2012-RULE_2_2-b", "level": "error", "message": { "text": "Value of \"thread1\" is never used", "markdown": "**\\[Line 148\\] Value of \"thread1\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "5ecfa204-bc62-3683-8c92-434e5147c426" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 1 } } } ] }, { "ruleId": "AUTOSAR-A0_1_1-a", "level": "error", "message": { "text": "Value of \"thread1\" is never used", "markdown": "**\\[Line 148\\] Value of \"thread1\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "bf98871d-1d52-355c-8985-9344a2ed8985" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 1 } } } ] }, { "ruleId": "CERT_C-DCL22-a", "level": "warning", "message": { "text": "Value of \"thread1\" is never used", "markdown": "**\\[Line 148\\] Value of \"thread1\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "b423dba4-26c3-375d-8eea-574fa64bf26e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 1 } } } ] }, { "ruleId": "MISRA2008-0_1_6", "level": "error", "message": { "text": "Value of \"thread1\" is never used", "markdown": "**\\[Line 148\\] Value of \"thread1\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "2d95f6dc-815b-356e-a9bf-3aa39508a035" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 1 } } } ] }, { "ruleId": "BD-PB-VOVR", "level": "warning", "message": { "text": "Value of \"thread1\" is never used", "markdown": "**\\[Line 148\\] Value of \"thread1\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "64115d30-8e94-3393-af02-e36e001ee422" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 1 } } } ] }, { "ruleId": "CODSTA-CPP-23", "level": "note", "message": { "text": "The global function 'CreateThread' is called without scope resolution operator '::'", "markdown": "**\\[Line 148\\] The global function 'CreateThread' is called without scope resolution operator '::'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "26bbef74-0f7b-3fe6-8c43-a563891b431e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'int' of function argument number '2' does not match declared type 'unsigned long long'", "markdown": "**\\[Line 148\\] The type 'int' of function argument number '2' does not match declared type 'unsigned long long'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "4e098f0f-ca92-376f-93d0-7f87b69ab4b3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'int' of function argument number '5' does not match declared type 'unsigned long'", "markdown": "**\\[Line 148\\] The type 'int' of function argument number '5' does not match declared type 'unsigned long'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "faa24c39-1f0d-38d0-9a3a-1a2941ec8781" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'DWORD (void *)*' of function argument number '3' does not match declared type 'DWORD (LPVOID)*'", "markdown": "**\\[Line 148\\] The type 'DWORD \\(void \\*\\)\\*' of function argument number '3' does not match declared type 'DWORD \\(LPVOID\\)\\*'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "5141825b-2c42-3768-9d75-5beac6a74257" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A4_10_1-b", "level": "error", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 148\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "afa21476-3ee0-3a0f-81ea-c143539dc16a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "HICPP-2_5_3-a", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 148\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "4610bfb6-7f6e-300c-82f9-665162343b7e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-MCPP-04", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 148\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "c0d39df8-edaa-3ab1-b0eb-1effc29e778f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 148\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "d22e255f-90db-34e0-b740-49484d463d86" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 148\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "3f6a569d-6069-3bd2-9c4d-77f7415d0358" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 148\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "5d5c4771-413d-331a-8f91-357dd269f9bf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 148\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "1955f45c-d220-3828-83fb-6a0c8bed5912" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 148\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "dcd24ed4-139c-3335-afdd-0773f852a1b4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 148\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "40ad947a-e9b3-3769-9a48-483e404d3246" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 148\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "f53f55ff-3057-36d1-8680-ab1938ac4c7c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "CERT_CPP-EXP56-a", "level": "warning", "message": { "text": "Do not assing the pointer to the function with C++ language linkage to the pointer to the function with C language linkage", "markdown": "**\\[Line 148\\] Do not assing the pointer to the function with C\\+\\+ language linkage to the pointer to the function with C language linkage**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "99d6a42b-bc9f-3021-b57f-d9ea03e8fbe3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "CODSTA-CPP-96", "level": "warning", "message": { "text": "Do not assing the pointer to the function with C++ language linkage to the pointer to the function with C language linkage", "markdown": "**\\[Line 148\\] Do not assing the pointer to the function with C\\+\\+ language linkage to the pointer to the function with C language linkage**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "c631ee3d-3627-3a8f-8771-d3853a594b68" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "MISRA2004-16_9", "level": "warning", "message": { "text": "Pointer to function 'GameLogic_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 148\\] Pointer to function 'GameLogic\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "f7c07a21-44c4-3517-8864-09657a62be86" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "AUTOSAR-M8_4_4-a", "level": "error", "message": { "text": "Pointer to function 'GameLogic_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 148\\] Pointer to function 'GameLogic\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "a33a6d4d-dc1c-3a16-a73a-367636d2b15f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "MISRA2008-8_4_4", "level": "error", "message": { "text": "Pointer to function 'GameLogic_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 148\\] Pointer to function 'GameLogic\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "9edd9e9f-13c3-3e6f-a217-d05b4a66059c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "AUTOSAR-A4_10_1-b", "level": "error", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 148\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "59390125-c46f-3abc-b38e-6697b109b507" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "HICPP-2_5_3-a", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 148\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "7d6a74f1-7d02-3a64-ac30-7fb6d0300823" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "CODSTA-MCPP-04", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 148\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "dc479d2c-d059-3425-a9d4-44fd2029b911" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 148\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "93000ee8-dfb0-3fcf-b63f-84cf5f7fff4d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 148\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "e0271c20-c1ef-3c9d-83f6-22c69454790e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 148\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "a72f95bd-1db1-3cc0-82d8-92ca8e923b73" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 148\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "60d4066b-b6b8-3056-8cbb-e4e9df8990eb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 148\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "89e55f5e-d7e7-3629-8547-11d12f1ad2b4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 148\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "d795b288-b222-385d-a158-1655949103ea" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 148\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "f2f53753-5433-30d6-ae4f-96a8a617cc40" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 148\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "ef12882a-e449-3200-9718-5b2a1c00a785" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 148\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "e790c4bd-3e75-32d2-98bc-dc2f35e88e1f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 148\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2033288726", "unbViolId": "6964d3ca-22e1-3bee-9477-a64efabebf58" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 148, "startColumn": 42, "endColumn": 43 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 149\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "bcfc475e-2700-31b2-93f8-c94add378bfb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 149\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "b9522c7f-be0a-3b4e-84be-f0c7151ef81f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 149\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "442c9268-7b8e-3d40-b907-7e322abbb658" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "BD-PB-VOVR", "level": "warning", "message": { "text": "Value of \"thread2\" is never used", "markdown": "**\\[Line 149\\] Value of \"thread2\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "1f3edc0c-812c-31a8-a486-7c989a7a3292" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 1 } } } ] }, { "ruleId": "MISRA2012-RULE-2_2_b", "level": "error", "message": { "text": "Value of \"thread2\" is never used", "markdown": "**\\[Line 149\\] Value of \"thread2\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "ab7bd4ea-47eb-3c1e-839e-4c5f062803df" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 1 } } } ] }, { "ruleId": "MISRAC2012-RULE_2_2-b", "level": "error", "message": { "text": "Value of \"thread2\" is never used", "markdown": "**\\[Line 149\\] Value of \"thread2\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "492a0ebe-7f97-37b4-86f2-83eaabb9e034" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 1 } } } ] }, { "ruleId": "AUTOSAR-A0_1_1-a", "level": "error", "message": { "text": "Value of \"thread2\" is never used", "markdown": "**\\[Line 149\\] Value of \"thread2\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "20e52600-2988-38d3-9fa7-9406dfada556" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 1 } } } ] }, { "ruleId": "CERT_C-DCL22-a", "level": "warning", "message": { "text": "Value of \"thread2\" is never used", "markdown": "**\\[Line 149\\] Value of \"thread2\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "894f7f84-4a0a-3b29-945a-ddaa35174495" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 1 } } } ] }, { "ruleId": "MISRA2008-0_1_6", "level": "error", "message": { "text": "Value of \"thread2\" is never used", "markdown": "**\\[Line 149\\] Value of \"thread2\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "4df56b7e-db08-37a9-8095-ca5edb192e59" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 1 } } } ] }, { "ruleId": "CODSTA-CPP-23", "level": "note", "message": { "text": "The global function 'CreateThread' is called without scope resolution operator '::'", "markdown": "**\\[Line 149\\] The global function 'CreateThread' is called without scope resolution operator '::'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "a74a96e7-8b0e-389a-a4d2-4c47036638e1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'int' of function argument number '2' does not match declared type 'unsigned long long'", "markdown": "**\\[Line 149\\] The type 'int' of function argument number '2' does not match declared type 'unsigned long long'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "dfa66f93-f10f-39a6-a350-1b1474e77fd7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'int' of function argument number '5' does not match declared type 'unsigned long'", "markdown": "**\\[Line 149\\] The type 'int' of function argument number '5' does not match declared type 'unsigned long'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "bc1481e0-2c91-34a2-bf67-acf9da1a500d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'DWORD (void *)*' of function argument number '3' does not match declared type 'DWORD (LPVOID)*'", "markdown": "**\\[Line 149\\] The type 'DWORD \\(void \\*\\)\\*' of function argument number '3' does not match declared type 'DWORD \\(LPVOID\\)\\*'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "0303a9cd-45dd-3e41-959a-ab7f86cef118" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A4_10_1-b", "level": "error", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 149\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "679cdbe1-97bb-356e-896b-37a341d93e5c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "HICPP-2_5_3-a", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 149\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "2a9db25a-0a4f-3db5-968f-16bbb18a3184" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-MCPP-04", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 149\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "e7eff11d-20e8-3944-b932-7bc793cbb875" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 149\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "75340343-857e-3af4-a4a0-57325c2bfabe" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 149\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "99d9e2b2-1063-371f-a331-40f32976a51a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 149\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "2ae00b8c-6c03-393c-a296-9af68e889d64" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 149\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "54b68dec-ca5e-3df0-b816-6059cdb952be" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 149\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "42fa19dd-858a-3ce9-bd07-5b666f9ae74f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 149\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "e4a3e03a-c8b0-3087-89e2-ad65d7114513" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 149\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "f488efab-ceff-3aa2-95c7-96350d14d956" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "CERT_CPP-EXP56-a", "level": "warning", "message": { "text": "Do not assing the pointer to the function with C++ language linkage to the pointer to the function with C language linkage", "markdown": "**\\[Line 149\\] Do not assing the pointer to the function with C\\+\\+ language linkage to the pointer to the function with C language linkage**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "e83517ad-e9a3-3173-a882-ec11edd30bb6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "CODSTA-CPP-96", "level": "warning", "message": { "text": "Do not assing the pointer to the function with C++ language linkage to the pointer to the function with C language linkage", "markdown": "**\\[Line 149\\] Do not assing the pointer to the function with C\\+\\+ language linkage to the pointer to the function with C language linkage**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "4fd820da-76ac-3c26-8e27-63ce46147b6c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "MISRA2004-16_9", "level": "warning", "message": { "text": "Pointer to function 'Controller_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 149\\] Pointer to function 'Controller\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "9141536a-398d-346f-b64f-e0419765387a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "AUTOSAR-M8_4_4-a", "level": "error", "message": { "text": "Pointer to function 'Controller_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 149\\] Pointer to function 'Controller\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "a8a8d52e-e127-3d85-a01f-a3234988c069" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "MISRA2008-8_4_4", "level": "error", "message": { "text": "Pointer to function 'Controller_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 149\\] Pointer to function 'Controller\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "53d0393a-d369-3461-abda-6567f508b5c3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "AUTOSAR-A4_10_1-b", "level": "error", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 149\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "b12f33ba-88c9-3989-9b8d-ed1540410ea7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "HICPP-2_5_3-a", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 149\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "25d35490-c5af-3800-bac9-494bf35966e4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "CODSTA-MCPP-04", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 149\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "464b3285-e51f-3549-89fa-eea1b2796969" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 149\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "26fc7afb-557a-33bb-8ae9-792b92cdbc32" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 149\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "e57b66e6-3ed8-39fe-8cc0-b91e18a5f137" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 149\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "1dad6f05-299e-31ae-bc3d-d9f5ea36ab13" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 149\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "9943576e-4c17-383e-a2bd-5bb521e25985" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 149\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "df5fb5f7-9d0f-35a1-ae7a-7ee9f262cf9b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 149\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "fa2d2b75-f702-3c78-ad0b-70c99a5827b4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 149\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "fa5c99d7-ae3a-30c1-8303-b02a41f1fa71" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 149\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "ae7f7296-cc82-3814-a8f8-0359ea75fc70" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 149\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "9509e51c-b66e-3a8c-b678-de543e127926" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 149\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1824414877", "unbViolId": "51c64dd4-ea17-3382-9566-9fee0c81cbc9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 149, "startColumn": 43, "endColumn": 44 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 150\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "9fd089cc-1de2-3d1b-b2a4-34bcfa1a59d6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 150\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "8d9c8f30-684a-3fce-8361-c0b860ffe615" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 150\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "e930c306-a43d-3642-aec3-92de301ef7c8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2012-RULE-2_2_b", "level": "error", "message": { "text": "Value of \"thread3\" is never used", "markdown": "**\\[Line 150\\] Value of \"thread3\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "775d5a32-50c7-3d47-ae72-e143aaebbdf8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 1 } } } ] }, { "ruleId": "MISRAC2012-RULE_2_2-b", "level": "error", "message": { "text": "Value of \"thread3\" is never used", "markdown": "**\\[Line 150\\] Value of \"thread3\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "6167a55c-cefc-3db7-8688-718cde3cd479" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 1 } } } ] }, { "ruleId": "AUTOSAR-A0_1_1-a", "level": "error", "message": { "text": "Value of \"thread3\" is never used", "markdown": "**\\[Line 150\\] Value of \"thread3\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "116a8d0a-0545-3613-b6b7-dd93bc2201d8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 1 } } } ] }, { "ruleId": "CERT_C-DCL22-a", "level": "warning", "message": { "text": "Value of \"thread3\" is never used", "markdown": "**\\[Line 150\\] Value of \"thread3\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "c44f54bd-606b-3b17-82ed-ad2bff197f86" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 1 } } } ] }, { "ruleId": "MISRA2008-0_1_6", "level": "error", "message": { "text": "Value of \"thread3\" is never used", "markdown": "**\\[Line 150\\] Value of \"thread3\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "6608d3e8-6f92-3dd1-909e-81ebbd50a10e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 1 } } } ] }, { "ruleId": "BD-PB-VOVR", "level": "warning", "message": { "text": "Value of \"thread3\" is never used", "markdown": "**\\[Line 150\\] Value of \"thread3\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "a75fc45c-438f-34ef-a88f-8bc7bbbe5334" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 1 } } } ] }, { "ruleId": "CODSTA-CPP-23", "level": "note", "message": { "text": "The global function 'CreateThread' is called without scope resolution operator '::'", "markdown": "**\\[Line 150\\] The global function 'CreateThread' is called without scope resolution operator '::'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "db5feb3e-5617-3ca7-98b0-f85bae7aff78" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'int' of function argument number '2' does not match declared type 'unsigned long long'", "markdown": "**\\[Line 150\\] The type 'int' of function argument number '2' does not match declared type 'unsigned long long'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "ede38a1d-a46e-3732-8c44-ba88ba35de99" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'int' of function argument number '5' does not match declared type 'unsigned long'", "markdown": "**\\[Line 150\\] The type 'int' of function argument number '5' does not match declared type 'unsigned long'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "c0bfd0d7-c4db-3b9c-b38c-90f6583b9839" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'DWORD (void *)*' of function argument number '3' does not match declared type 'DWORD (LPVOID)*'", "markdown": "**\\[Line 150\\] The type 'DWORD \\(void \\*\\)\\*' of function argument number '3' does not match declared type 'DWORD \\(LPVOID\\)\\*'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "2d15e902-fdd7-36bc-8a09-9a95562f16d5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A4_10_1-b", "level": "error", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 150\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "d4c3f888-6f9d-3931-81ce-66cb8899c306" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "HICPP-2_5_3-a", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 150\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "f1c73daa-1b86-3e3e-a11d-cbec09c676d1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-MCPP-04", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 150\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "9c5480bb-7621-3001-89c2-453664f5ec3c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 150\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "b916ec7b-4688-3059-b984-0690d3f6f5a6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 150\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "173a466b-a0cc-363b-af7e-0a93313b3eab" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 150\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "770e7738-7c18-3226-9286-c28ea544054f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 150\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "dc6d0e01-0740-3c5a-aa7a-302d81bab389" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 150\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "84b71eb8-aa9e-347d-a31e-2f9c1a14361d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 150\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "613d7a46-c386-3f73-ab37-efda8bd1876d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 150\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "028bbb36-e02e-36e1-a64f-52a825b24fee" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "CERT_CPP-EXP56-a", "level": "warning", "message": { "text": "Do not assing the pointer to the function with C++ language linkage to the pointer to the function with C language linkage", "markdown": "**\\[Line 150\\] Do not assing the pointer to the function with C\\+\\+ language linkage to the pointer to the function with C language linkage**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "f66b0cf9-e7bc-38db-a3ab-91c8f315f5b3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "CODSTA-CPP-96", "level": "warning", "message": { "text": "Do not assing the pointer to the function with C++ language linkage to the pointer to the function with C language linkage", "markdown": "**\\[Line 150\\] Do not assing the pointer to the function with C\\+\\+ language linkage to the pointer to the function with C language linkage**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "a307f17c-ae08-371b-9c65-46f8a2e5b895" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "MISRA2004-16_9", "level": "warning", "message": { "text": "Pointer to function 'Physics_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 150\\] Pointer to function 'Physics\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "11f31d8e-c512-38b0-9dbc-cd364b814f6e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "AUTOSAR-M8_4_4-a", "level": "error", "message": { "text": "Pointer to function 'Physics_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 150\\] Pointer to function 'Physics\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "8709f334-68cf-3bd1-a308-a097e3173bbb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "MISRA2008-8_4_4", "level": "error", "message": { "text": "Pointer to function 'Physics_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 150\\] Pointer to function 'Physics\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "a2499729-ee63-3a28-9adf-f88467c4fb7f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "AUTOSAR-A4_10_1-b", "level": "error", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 150\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "8c191489-f4fe-3d73-a732-bff3e75572f3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "HICPP-2_5_3-a", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 150\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "3032fb13-ea0a-3a3b-89b2-97a128041c7a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "CODSTA-MCPP-04", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 150\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "683ea783-3786-338d-934b-491ae5f80866" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 150\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "57fb8850-cd78-3b98-9482-186635558e12" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 150\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "f34921b7-ef24-3d8a-ad8e-06dc423e6bf4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 150\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "0ec4db24-c3fd-3ee9-a9df-48d80169c284" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 150\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "fa73f33d-5e4a-331a-80e2-b910e09fce6a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 150\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "7847a5c2-227d-3458-b93b-651c9a603114" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 150\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "a48f427e-14a3-3625-a91e-230cea121964" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 150\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "c32793d6-183e-34cf-9eda-bf943035fd24" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 150\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "a22f608c-6e84-3c44-8d25-0d47c809354e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 150\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "72578095-3546-3b1c-be5c-ff05ee42753b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 150\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1305984162", "unbViolId": "18b8d144-94c0-354e-b8a7-9a7d9912988b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 150, "startColumn": 49, "endColumn": 50 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 151\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "1e1b3bb7-0736-3458-a9ba-7a4c072fe464" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 151\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "0f6c2988-ff06-333b-83b2-9a4aeac63d58" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 151\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "8a73c497-ba40-3ac6-ad57-235cf2d0c000" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "BD-PB-VOVR", "level": "warning", "message": { "text": "Value of \"thread4\" is never used", "markdown": "**\\[Line 151\\] Value of \"thread4\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "c77dc5a2-53cf-326b-b425-1685251b5d96" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 1 } } } ] }, { "ruleId": "MISRA2012-RULE-2_2_b", "level": "error", "message": { "text": "Value of \"thread4\" is never used", "markdown": "**\\[Line 151\\] Value of \"thread4\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "2c80d749-cac2-32e2-926d-2ff3801e47ab" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 1 } } } ] }, { "ruleId": "MISRAC2012-RULE_2_2-b", "level": "error", "message": { "text": "Value of \"thread4\" is never used", "markdown": "**\\[Line 151\\] Value of \"thread4\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "d9f90824-c991-3a85-aa10-acef4257bbe7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 1 } } } ] }, { "ruleId": "AUTOSAR-A0_1_1-a", "level": "error", "message": { "text": "Value of \"thread4\" is never used", "markdown": "**\\[Line 151\\] Value of \"thread4\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "f17e6926-01f3-306e-9c00-9f3185ef577a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 1 } } } ] }, { "ruleId": "CERT_C-DCL22-a", "level": "warning", "message": { "text": "Value of \"thread4\" is never used", "markdown": "**\\[Line 151\\] Value of \"thread4\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "b8e3ca6d-b87b-3145-aa53-25ea00be4f38" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 1 } } } ] }, { "ruleId": "MISRA2008-0_1_6", "level": "error", "message": { "text": "Value of \"thread4\" is never used", "markdown": "**\\[Line 151\\] Value of \"thread4\" is never used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "a971d9e4-a2b6-384d-b15a-5d7f7fadb30a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 1 } } } ] }, { "ruleId": "CODSTA-CPP-23", "level": "note", "message": { "text": "The global function 'CreateThread' is called without scope resolution operator '::'", "markdown": "**\\[Line 151\\] The global function 'CreateThread' is called without scope resolution operator '::'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "e520a421-333c-3fa4-9456-12af75199500" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'int' of function argument number '2' does not match declared type 'unsigned long long'", "markdown": "**\\[Line 151\\] The type 'int' of function argument number '2' does not match declared type 'unsigned long long'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "b05772b7-fc93-386b-bfbb-42dd48dc4994" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'int' of function argument number '5' does not match declared type 'unsigned long'", "markdown": "**\\[Line 151\\] The type 'int' of function argument number '5' does not match declared type 'unsigned long'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "61f6112b-b82e-3f21-9fc3-87e34548d92b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "PB-11", "level": "warning", "message": { "text": "The type 'DWORD (void *)*' of function argument number '3' does not match declared type 'DWORD (LPVOID)*'", "markdown": "**\\[Line 151\\] The type 'DWORD \\(void \\*\\)\\*' of function argument number '3' does not match declared type 'DWORD \\(LPVOID\\)\\*'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "a613e020-683e-3e77-bd3a-79d99c8e7ddc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A4_10_1-b", "level": "error", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 151\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "36501d12-4327-3b29-87f5-e9eb1f67f656" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "HICPP-2_5_3-a", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 151\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "080c2b84-802f-383e-bb90-72f60a98d7e9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-MCPP-04", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 151\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "d11d5b11-56a0-3809-a863-a8d57d9da11a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 151\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "e869d65c-b48c-32d7-9fdd-4f016b0088dc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 151\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "c49e24fb-13f8-3593-8038-ce918fef2ad9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '1' argument to function 'CreateThread' ", "markdown": "**\\[Line 151\\] The value '0' is passed as '1' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "7f0dbe5f-e777-394d-803a-0712eac9731d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 25, "endColumn": 26 } } } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 151\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "fd0c65f3-db38-338d-88f5-bf5abcb7c8a4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 151\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "90c33808-4f32-30af-9544-b6c1f9fb494f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used", "markdown": "**\\[Line 151\\] Implicit conversion between signed and unsigned type in the function call on argument '2' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "f72f5026-3c11-3370-9a61-5ca2911e1b4d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 151\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "b2031619-e4d3-37b8-a127-a113e7042c75" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "CERT_CPP-EXP56-a", "level": "warning", "message": { "text": "Do not assing the pointer to the function with C++ language linkage to the pointer to the function with C language linkage", "markdown": "**\\[Line 151\\] Do not assing the pointer to the function with C\\+\\+ language linkage to the pointer to the function with C language linkage**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "339f4f07-f29d-393a-923b-78a294e503eb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "CODSTA-CPP-96", "level": "warning", "message": { "text": "Do not assing the pointer to the function with C++ language linkage to the pointer to the function with C language linkage", "markdown": "**\\[Line 151\\] Do not assing the pointer to the function with C\\+\\+ language linkage to the pointer to the function with C language linkage**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "7f88d2a0-9f7b-3f55-b001-d067f213f4e9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "MISRA2004-16_9", "level": "warning", "message": { "text": "Pointer to function 'Render_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 151\\] Pointer to function 'Render\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "f75df4da-d45e-37a3-976e-2ca1605009d3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "AUTOSAR-M8_4_4-a", "level": "error", "message": { "text": "Pointer to function 'Render_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 151\\] Pointer to function 'Render\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "086412fe-2144-32eb-b1ce-010a90a6af2e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "MISRA2008-8_4_4", "level": "error", "message": { "text": "Pointer to function 'Render_Thread' should be preceded by '&' operator or followed by '()'", "markdown": "**\\[Line 151\\] Pointer to function 'Render\\_Thread' should be preceded by '&' operator or followed by '\\(\\)'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "e00976de-5add-3d86-a59a-15434539bd6f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 31, "endColumn": 32 } } } ] }, { "ruleId": "AUTOSAR-A4_10_1-b", "level": "error", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 151\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "d90d308f-20f7-37f5-86e8-0f114a392d46" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "HICPP-2_5_3-a", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 151\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "e645d723-4272-301d-8866-d7d352fe6866" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "CODSTA-MCPP-04", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 151\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "8095a886-8590-3b35-b38e-9fd23d25bf7f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "MISRA2008-5_0_4_a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 151\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "1b97b7a2-4d88-3f13-a043-7757a1ff7b4b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "AUTOSAR-M5_0_4-a", "level": "error", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 151\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "829c2a6c-7a8b-390b-97b5-6426bf4e07d9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "MISRA2004-10_1_a", "level": "warning", "message": { "text": "Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used", "markdown": "**\\[Line 151\\] Implicit conversion between signed and unsigned type in the function call on argument '5' shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "5f61568f-4c88-31bd-ad36-87d7280de197" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 151\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "6cefdf9f-8b38-3e8e-a2d3-ee90d0017dc4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 151\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "707ad2a9-131b-32cc-b9da-db27e7622712" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '4' argument to function 'CreateThread' ", "markdown": "**\\[Line 151\\] The value '0' is passed as '4' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "75729593-52e5-3c2b-9712-7e9fa0a410e3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 151\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "ccb72eec-cc56-3085-8a91-371ae934c1f7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 151\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "e02042ea-0d56-3966-b1a4-a8a27afa9e12" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "The value '0' is passed as '6' argument to function 'CreateThread' ", "markdown": "**\\[Line 151\\] The value '0' is passed as '6' argument to function 'CreateThread' **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "e8ec9480-dab0-372f-8b61-5abddb70da75" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "HICPP-4_2_1-a", "level": "warning", "message": { "text": "A 'U' suffix shall be applied to constant: 0", "markdown": "**\\[Line 151\\] A 'U' suffix shall be applied to constant: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-604051279", "unbViolId": "517c128b-a9fd-32dc-b0df-a5f2a82c8cc0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 151, "startColumn": 47, "endColumn": 48 } } } ] }, { "ruleId": "METRICS-31", "level": "warning", "message": { "text": "The assertion density is lower than two assertions per function", "markdown": "**\\[Line 1\\] The assertion density is lower than two assertions per function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "2b62c1dc-7830-3d03-989e-c9a71f48b8ef" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "NAMING-03", "level": "warning", "message": { "text": "The filename 'DivisionByZero.cpp' should be in lowercase", "markdown": "**\\[Line 1\\] The filename 'DivisionByZero\\.cpp' should be in lowercase**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "1cadfeb1-b2b7-398b-a811-8835ebb2d7fa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "NAMING-38", "level": "warning", "message": { "text": "Implementation file 'DivisionByZero.cpp' should have the file name extension \".cc\"", "markdown": "**\\[Line 1\\] Implementation file 'DivisionByZero\\.cpp' should have the file name extension \"\\.cc\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "d6336bf4-0646-3f70-8922-225c85017d00" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PFO-04", "level": "note", "message": { "text": "Implementation file 'DivisionByZero.cpp' should declare a local constant string that begins from characters \"@(#)\" ", "markdown": "**\\[Line 1\\] Implementation file 'DivisionByZero\\.cpp' should declare a local constant string that begins from characters \"@\\(\\#\\)\" **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "439dac2d-8d13-37b1-bb78-7115e7052ef9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-02", "level": "warning", "message": { "text": "Add comment containing the copyright information at the begin of file 'DivisionByZero.cpp'", "markdown": "**\\[Line 1\\] Add comment containing the copyright information at the begin of file 'DivisionByZero\\.cpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "669ae033-c3c0-3bb4-bc15-3e3631b3ba87" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-133_b", "level": "warning", "message": { "text": "Add comment containing the copyright information at the begin of file 'DivisionByZero.cpp'", "markdown": "**\\[Line 1\\] Add comment containing the copyright information at the begin of file 'DivisionByZero\\.cpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "70dd592e-6470-3268-92cb-82c21d2e2872" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-03", "level": "warning", "message": { "text": "Add comment containing the information on the file at the begin of file 'DivisionByZero.cpp'", "markdown": "**\\[Line 1\\] Add comment containing the information on the file at the begin of file 'DivisionByZero\\.cpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "c58538d0-1d3e-3795-8456-ea101cdfb724" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-133_a", "level": "warning", "message": { "text": "Add comment containing the information on the file at the begin of file 'DivisionByZero.cpp'", "markdown": "**\\[Line 1\\] Add comment containing the information on the file at the begin of file 'DivisionByZero\\.cpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "864810e0-e55c-316f-a551-bbdce68a8a51" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-032", "level": "warning", "message": { "text": "Not a proper header file (*.h ) is being included: \"Shapes.hpp\"", "markdown": "**\\[Line 1\\] Not a proper header file \\(\\*\\.h \\) is being included: \"Shapes\\.hpp\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "3169432a-5461-3311-9fd0-6d6982a92f61" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-08", "level": "warning", "message": { "text": "Not a proper header file (*.h ) is being included: \"Shapes.hpp\"", "markdown": "**\\[Line 1\\] Not a proper header file \\(\\*\\.h \\) is being included: \"Shapes\\.hpp\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "54806830-af4b-310a-ab66-075da4d1a40f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-09", "level": "error", "message": { "text": "Disallowed #include notation is being used: \"Shapes.hpp\"", "markdown": "**\\[Line 1\\] Disallowed \\#include notation is being used: \"Shapes\\.hpp\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "dce364c6-a91d-3747-9dc7-74cb8ed17e03" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-033", "level": "error", "message": { "text": "Disallowed #include notation is being used: \"Shapes.hpp\"", "markdown": "**\\[Line 1\\] Disallowed \\#include notation is being used: \"Shapes\\.hpp\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "329732047", "unbViolId": "443ab1cc-3b06-3630-8c12-61b6735d4b53" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 3\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "d51e57e5-d45e-3461-8046-6a3d2f300284" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 3\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "4f371479-a0d7-3761-9053-bf11a8ced180" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 3\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "aa228dad-ae6a-360f-a8a6-e80da8faa6db" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 3\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "85f40268-89fb-3672-9ceb-4f4e651df67f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 3\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "5cd08bdf-6d0f-33c9-8bd1-5e69655a2e07" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 3\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "2f3d4f79-5c64-3e08-8296-d3a77a283991" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 3\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "760c8fed-a62a-35cc-b4f5-b938055a7ce9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A8_4_10-a", "level": "error", "message": { "text": "The \"shape1\" parameter of the \"getShapeRatio\" function cannot be NULL and should be passed by reference", "markdown": "**\\[Line 3\\] The \"shape1\" parameter of the \"getShapeRatio\" function cannot be NULL and should be passed by reference**  \n  \n**Function header**&nbsp;  \nDivisionByZero.cpp&nbsp;(3)&nbsp;:&nbsp;double getShapeRatio\\(Shape\\* shape1, Shape\\* shape2\\)  \n**Point where the parameter is dereferenced**  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;shape1\\->getArea\\(\\)" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "-1572071035", "unbViolId": "2e050377-babf-35a5-b235-f7036747bb90" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1 } }, "message": { "text": "Violation Point - Function header" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where the parameter is dereferenced" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "BD-PB-REFPARAM", "level": "warning", "message": { "text": "The \"shape1\" parameter of the \"getShapeRatio\" function cannot be NULL and should be passed by reference", "markdown": "**\\[Line 3\\] The \"shape1\" parameter of the \"getShapeRatio\" function cannot be NULL and should be passed by reference**  \n  \n**Function header**&nbsp;  \nDivisionByZero.cpp&nbsp;(3)&nbsp;:&nbsp;double getShapeRatio\\(Shape\\* shape1, Shape\\* shape2\\)  \n**Point where the parameter is dereferenced**  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;shape1\\->getArea\\(\\)" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "-1572071035", "unbViolId": "3f878971-e7bd-3356-8a4f-91f23d99a0c8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1 } }, "message": { "text": "Violation Point - Function header" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where the parameter is dereferenced" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "AUTOSAR-A8_4_10-a", "level": "error", "message": { "text": "The \"shape2\" parameter of the \"getShapeRatio\" function cannot be NULL and should be passed by reference", "markdown": "**\\[Line 3\\] The \"shape2\" parameter of the \"getShapeRatio\" function cannot be NULL and should be passed by reference**  \n  \n**Function header**&nbsp;  \nDivisionByZero.cpp&nbsp;(3)&nbsp;:&nbsp;double getShapeRatio\\(Shape\\* shape1, Shape\\* shape2\\)  \n**Point where the parameter is dereferenced**  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;shape2\\->getArea\\(\\)" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "-1572071035", "unbViolId": "b6e08984-7334-346a-ba55-eff28f5055c7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1 } }, "message": { "text": "Violation Point - Function header" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where the parameter is dereferenced" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "BD-PB-REFPARAM", "level": "warning", "message": { "text": "The \"shape2\" parameter of the \"getShapeRatio\" function cannot be NULL and should be passed by reference", "markdown": "**\\[Line 3\\] The \"shape2\" parameter of the \"getShapeRatio\" function cannot be NULL and should be passed by reference**  \n  \n**Function header**&nbsp;  \nDivisionByZero.cpp&nbsp;(3)&nbsp;:&nbsp;double getShapeRatio\\(Shape\\* shape1, Shape\\* shape2\\)  \n**Point where the parameter is dereferenced**  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;shape2\\->getArea\\(\\)" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "-1572071035", "unbViolId": "39d95977-aea0-3d19-9ee6-7a4fee5f25a7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1 } }, "message": { "text": "Violation Point - Function header" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where the parameter is dereferenced" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CODSTA-MCPP-08_b", "level": "error", "message": { "text": "The return type of the 'getShapeRatio' function should be declared as 'auto'", "markdown": "**\\[Line 3\\] The return type of the 'getShapeRatio' function should be declared as 'auto'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "96ba9b9a-f6a6-379f-9e95-6fe6757073a0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'getShapeRatio' function is not preceded by a comment", "markdown": "**\\[Line 3\\] The definition of the 'getShapeRatio' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "1404f019-5e29-3f93-8add-8136d309c4a3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'getShapeRatio' function is not preceded by a comment", "markdown": "**\\[Line 3\\] The definition of the 'getShapeRatio' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "375d08a3-6ba0-3c90-9da7-2b2cf9d0ab22" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "OWASP2019-API9-e", "level": "warning", "message": { "text": "Function 'getShapeRatio' has external linkage and is not declared in the header", "markdown": "**\\[Line 3\\] Function 'getShapeRatio' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "4b8ea546-4466-3054-b308-e36c57bf1e10" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A3_3_1-a", "level": "error", "message": { "text": "Function 'getShapeRatio' has external linkage and is not declared in the header", "markdown": "**\\[Line 3\\] Function 'getShapeRatio' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "56ce5055-96e5-3d4a-ace4-c5f55c3caa04" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-137", "level": "warning", "message": { "text": "Function 'getShapeRatio' has external linkage and is not declared in the header", "markdown": "**\\[Line 3\\] Function 'getShapeRatio' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "4e2b68cb-8ee7-359f-89e9-21cb5c7307c0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA-023", "level": "warning", "message": { "text": "Function 'getShapeRatio' has external linkage and is not declared in the header", "markdown": "**\\[Line 3\\] Function 'getShapeRatio' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "d40a3d72-9d95-3e7c-b170-ebac7c479c06" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2008-3_3_1", "level": "error", "message": { "text": "Function 'getShapeRatio' has external linkage and is not declared in the header", "markdown": "**\\[Line 3\\] Function 'getShapeRatio' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "1d3fc66d-f209-3fd9-91f0-9c5072936a85" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CERT_C-DCL15-a", "level": "warning", "message": { "text": "Function 'getShapeRatio' has external linkage and is not declared in the header", "markdown": "**\\[Line 3\\] Function 'getShapeRatio' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "301b4e76-7445-3148-a51b-c7937da9c085" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2004-8_10", "level": "warning", "message": { "text": "Function 'getShapeRatio' has external linkage and is not declared in the header", "markdown": "**\\[Line 3\\] Function 'getShapeRatio' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "ac6e5762-2b1a-32e9-9882-3f6a78c9c2e4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-051", "level": "warning", "message": { "text": "The name 'getShapeRatio' should be composed only of lowercase letters", "markdown": "**\\[Line 3\\] The name 'getShapeRatio' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "eeec62bb-ef83-33ee-b651-1063042e329b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "NAMING-44", "level": "warning", "message": { "text": "The name 'getShapeRatio' should be composed only of lowercase letters", "markdown": "**\\[Line 3\\] The name 'getShapeRatio' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "2ab80fa2-3380-324c-b834-9c60dd99138f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-098", "level": "warning", "message": { "text": "Do not declare the 'getShapeRatio' function in the global namespace", "markdown": "**\\[Line 3\\] Do not declare the 'getShapeRatio' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "9b71cc69-f1c7-35af-9ae2-eea47aaa472e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-M7_3_1-a", "level": "error", "message": { "text": "Do not declare the 'getShapeRatio' function in the global namespace", "markdown": "**\\[Line 3\\] Do not declare the 'getShapeRatio' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "a96bb18d-d676-3b3e-b5df-548b7d71db77" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CODSTA-CPP-36", "level": "warning", "message": { "text": "Do not declare the 'getShapeRatio' function in the global namespace", "markdown": "**\\[Line 3\\] Do not declare the 'getShapeRatio' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "f6e1839e-d61c-3a89-b6aa-94bbfeaaa713" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2008-7_3_1", "level": "error", "message": { "text": "Do not declare the 'getShapeRatio' function in the global namespace", "markdown": "**\\[Line 3\\] Do not declare the 'getShapeRatio' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "acf9aaf8-c986-3ecc-b417-742f4832e691" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'getShapeRatio' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 3\\] The 'getShapeRatio' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "38a81da9-c6df-3188-87c5-df615f50f412" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'getShapeRatio' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 3\\] The 'getShapeRatio' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "9d6f0d17-94f2-3d5d-8f9c-bbbfc1ece98f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'shape1' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 3\\] The 'shape1' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "b20dca65-5884-37b5-bf19-eb0ea508fecd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'shape1' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 3\\] The 'shape1' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "28ad1ec8-1fa7-3419-8db3-65c2c7e8df96" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'shape2' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 3\\] The 'shape2' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "5faf846a-042d-399d-bfff-8479c0a546d8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'shape2' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 3\\] The 'shape2' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "7d0b3c6d-049d-3f3a-8df2-1193a22988d0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'getShapeRatio' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 3\\] The 'getShapeRatio' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "a1795c98-00d0-392b-b7d9-fe852ef8d7d9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'getShapeRatio' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 3\\] The 'getShapeRatio' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "b2a44ee7-5ed9-3284-92d8-7be61c411d7a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "FORMAT-28", "level": "warning", "message": { "text": "Return type is not placed in line before function 'getShapeRatio'", "markdown": "**\\[Line 3\\] Return type is not placed in line before function 'getShapeRatio'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "4292fa48-af0d-3985-bf0c-66e46cad059a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'getShapeRatio' has Cyclomatic Complexity value: 1", "markdown": "**\\[Line 3\\] Function 'getShapeRatio' has Cyclomatic Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "1b6d9d34-af13-3e1d-a9d3-836cd45c05d8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'getShapeRatio' has Essential Complexity value: 1", "markdown": "**\\[Line 3\\] Function 'getShapeRatio' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "fc1e906d-8797-37be-b600-11630b774ce1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "NAMING-17", "level": "warning", "message": { "text": "Naming convention not followed: getShapeRatio", "markdown": "**\\[Line 3\\] Naming convention not followed: getShapeRatio**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "f1701176-792f-3ed5-bfe7-dc0a6ba286f3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "GLOBAL-UNUSEDFUNC", "level": "warning", "message": { "text": "The 'getShapeRatio' function is not used in the testing scope", "markdown": "**\\[Line 3\\] The 'getShapeRatio' function is not used in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "608b79f3-0e4b-3230-9e08-cae567bfec69" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-M0_1_10-a", "level": "warning", "message": { "text": "The 'getShapeRatio' function is not used in the testing scope", "markdown": "**\\[Line 3\\] The 'getShapeRatio' function is not used in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "10f8776e-6ff8-32a9-a80c-263c789d0bf1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2008-0_1_10_b", "level": "error", "message": { "text": "The 'getShapeRatio' function is not used in the testing scope", "markdown": "**\\[Line 3\\] The 'getShapeRatio' function is not used in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "3f27fa37-78fc-309d-894e-99f40b1030f5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The parameter of pointer or array type is declared: shape1", "markdown": "**\\[Line 3\\] The parameter of pointer or array type is declared: shape1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "e36c3ee2-eee6-3af0-bb60-e8ba88452aa6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The parameter of pointer type is declared: shape1", "markdown": "**\\[Line 3\\] The parameter of pointer type is declared: shape1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "19b80942-adac-32d4-b7a8-e30622c22ee7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "CERT_C-API00-a", "level": "warning", "message": { "text": "Parameter 'shape1' is not validated before use", "markdown": "**\\[Line 3\\] Parameter 'shape1' is not validated before use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "7e3cdf5b-acdd-32f6-8218-585e923f7d52" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "CODSTA-86", "level": "warning", "message": { "text": "Parameter 'shape1' is not validated before use", "markdown": "**\\[Line 3\\] Parameter 'shape1' is not validated before use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "14647c25-3867-3486-b9f7-3692fbd2931c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "AUTOSAR-M7_1_2-b", "level": "error", "message": { "text": "Pass parameter \"shape1\" with const specifier", "markdown": "**\\[Line 3\\] Pass parameter \"shape1\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "285d75e0-0e02-39d4-a0e9-28b94f1e35ae" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "MISRAC2012-RULE_8_13-a", "level": "warning", "message": { "text": "Pass parameter \"shape1\" with const specifier", "markdown": "**\\[Line 3\\] Pass parameter \"shape1\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "2abc628f-ca9e-3b50-b810-ade56c3336cf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "CERT_C-DCL13-a", "level": "warning", "message": { "text": "Pass parameter \"shape1\" with const specifier", "markdown": "**\\[Line 3\\] Pass parameter \"shape1\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "13c54d31-5c6b-3857-9937-b6ef92498568" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "MISRA2004-16_7", "level": "warning", "message": { "text": "Pass parameter \"shape1\" with const specifier", "markdown": "**\\[Line 3\\] Pass parameter \"shape1\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "6798fd66-0c1a-3598-856a-a0b54e6495ef" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "MISRA2012-RULE-8_13_a", "level": "warning", "message": { "text": "Pass parameter \"shape1\" with const specifier", "markdown": "**\\[Line 3\\] Pass parameter \"shape1\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "834d0a81-133e-377b-9492-3bbc1c958ae0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "JSF-118", "level": "warning", "message": { "text": "Pass parameter \"shape1\" with const specifier", "markdown": "**\\[Line 3\\] Pass parameter \"shape1\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "0b01fa8f-1aaa-3378-8936-35ac1124ac1f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "MISRA2008-7_1_2_a", "level": "error", "message": { "text": "Pass parameter \"shape1\" with const specifier", "markdown": "**\\[Line 3\\] Pass parameter \"shape1\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "f1af2d1a-e387-381b-a6f1-115874c6b03f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "NAMING-HN-34", "level": "warning", "message": { "text": "The 'shape1' identifier should have the 'p' prefix", "markdown": "**\\[Line 3\\] The 'shape1' identifier should have the 'p' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "78d85a58-b965-30bf-9da2-008548084615" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The parameter of pointer or array type is declared: shape2", "markdown": "**\\[Line 3\\] The parameter of pointer or array type is declared: shape2**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "b6ddcc4e-95bc-3dd0-8e68-e00b7a1a22b3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 44, "endColumn": 45 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The parameter of pointer type is declared: shape2", "markdown": "**\\[Line 3\\] The parameter of pointer type is declared: shape2**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "1c2c778e-4fa6-3052-88cc-a61c32aa37de" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 44, "endColumn": 45 } } } ] }, { "ruleId": "CERT_C-API00-a", "level": "warning", "message": { "text": "Parameter 'shape2' is not validated before use", "markdown": "**\\[Line 3\\] Parameter 'shape2' is not validated before use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "07c0a19d-d30a-3d29-acd7-6880ea091ed5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 44, "endColumn": 45 } } } ] }, { "ruleId": "CODSTA-86", "level": "warning", "message": { "text": "Parameter 'shape2' is not validated before use", "markdown": "**\\[Line 3\\] Parameter 'shape2' is not validated before use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "5e76fe06-38ed-33f7-961e-81fbead276f0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 44, "endColumn": 45 } } } ] }, { "ruleId": "AUTOSAR-M7_1_2-b", "level": "error", "message": { "text": "Pass parameter \"shape2\" with const specifier", "markdown": "**\\[Line 3\\] Pass parameter \"shape2\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "7a8a7488-c97b-3dab-9bd1-d9244719274b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 44, "endColumn": 45 } } } ] }, { "ruleId": "MISRAC2012-RULE_8_13-a", "level": "warning", "message": { "text": "Pass parameter \"shape2\" with const specifier", "markdown": "**\\[Line 3\\] Pass parameter \"shape2\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "cabfc0c7-d67c-3f39-bca8-9a7fe4c23f87" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 44, "endColumn": 45 } } } ] }, { "ruleId": "CERT_C-DCL13-a", "level": "warning", "message": { "text": "Pass parameter \"shape2\" with const specifier", "markdown": "**\\[Line 3\\] Pass parameter \"shape2\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "74d23471-42b1-32f8-9f99-642dc118cf99" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 44, "endColumn": 45 } } } ] }, { "ruleId": "MISRA2004-16_7", "level": "warning", "message": { "text": "Pass parameter \"shape2\" with const specifier", "markdown": "**\\[Line 3\\] Pass parameter \"shape2\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "dde38d8b-0330-3214-9303-1cb392e280db" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 44, "endColumn": 45 } } } ] }, { "ruleId": "MISRA2012-RULE-8_13_a", "level": "warning", "message": { "text": "Pass parameter \"shape2\" with const specifier", "markdown": "**\\[Line 3\\] Pass parameter \"shape2\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "17db9e7e-a0ff-3cfd-b0b3-c34cf3403145" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 44, "endColumn": 45 } } } ] }, { "ruleId": "JSF-118", "level": "warning", "message": { "text": "Pass parameter \"shape2\" with const specifier", "markdown": "**\\[Line 3\\] Pass parameter \"shape2\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "1175cb49-006f-3ace-9691-0d071261df04" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 44, "endColumn": 45 } } } ] }, { "ruleId": "MISRA2008-7_1_2_a", "level": "error", "message": { "text": "Pass parameter \"shape2\" with const specifier", "markdown": "**\\[Line 3\\] Pass parameter \"shape2\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "733778a3-a6e2-3dcd-9af1-75e7ad40d427" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 44, "endColumn": 45 } } } ] }, { "ruleId": "NAMING-HN-34", "level": "warning", "message": { "text": "The 'shape2' identifier should have the 'p' prefix", "markdown": "**\\[Line 3\\] The 'shape2' identifier should have the 'p' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1572071035", "unbViolId": "6f2e8c48-88df-3294-9461-7f51f32110dd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 44, "endColumn": 45 } } } ] }, { "ruleId": "METRICS-19", "level": "warning", "message": { "text": "Percentage of comment lines vs. all method's lines is: 0", "markdown": "**\\[Line 4\\] Percentage of comment lines vs\\. all method's lines is: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "123", "unbViolId": "5133b5e5-7aa4-3c16-bfa9-657fa1a47e21" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 5\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2070090220", "unbViolId": "42f3f7cd-6f1a-3bf3-9961-4eb572a24208" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 5\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2070090220", "unbViolId": "2afbf3af-a81b-3068-aa98-7c56c463c7e7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 5\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2070090220", "unbViolId": "7d1963d9-aa40-3b1c-ae5b-d7b393b26e88" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A5_6_1-a", "level": "error", "message": { "text": "Division by \"shape2.getArea()\" which may possibly be zero", "markdown": "**\\[Line 5\\] Division by \"shape2\\.getArea\\(\\)\" which may possibly be zero**  \n  \n**Start of the path**  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;shape2\\->getArea\\(\\)  \n        Shapes.hpp&nbsp;(19)&nbsp;:&nbsp;double getArea\\(\\) const \\{ return 0; \\}  \n**Point of division by zero**&nbsp;  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;return shape1\\->getArea\\(\\)\/shape2\\->getArea\\(\\);" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "2070090220", "unbViolId": "b1b8c4d3-9d62-3eea-ad14-115aba013b3a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Start of the path" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of division by zero" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "AUTOSAR-M0_3_1-e", "level": "error", "message": { "text": "Division by \"shape2.getArea()\" which may possibly be zero", "markdown": "**\\[Line 5\\] Division by \"shape2\\.getArea\\(\\)\" which may possibly be zero**  \n  \n**Start of the path**  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;shape2\\->getArea\\(\\)  \n        Shapes.hpp&nbsp;(19)&nbsp;:&nbsp;double getArea\\(\\) const \\{ return 0; \\}  \n**Point of division by zero**&nbsp;  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;return shape1\\->getArea\\(\\)\/shape2\\->getArea\\(\\);" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "2070090220", "unbViolId": "434dc4e1-47cf-3eb3-8131-7cf2db67a5f3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Start of the path" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of division by zero" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "BD-PB-ZERO", "level": "error", "message": { "text": "Division by \"shape2.getArea()\" which may possibly be zero", "markdown": "**\\[Line 5\\] Division by \"shape2\\.getArea\\(\\)\" which may possibly be zero**  \n  \n**Start of the path**  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;shape2\\->getArea\\(\\)  \n        Shapes.hpp&nbsp;(19)&nbsp;:&nbsp;double getArea\\(\\) const \\{ return 0; \\}  \n**Point of division by zero**&nbsp;  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;return shape1\\->getArea\\(\\)\/shape2\\->getArea\\(\\);" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "2070090220", "unbViolId": "fe11b227-653f-3b64-9e57-bc3922d85fba" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Start of the path" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of division by zero" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CERT_C-FLP03-a", "level": "warning", "message": { "text": "Division by \"shape2.getArea()\" which may possibly be zero", "markdown": "**\\[Line 5\\] Division by \"shape2\\.getArea\\(\\)\" which may possibly be zero**  \n  \n**Start of the path**  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;shape2\\->getArea\\(\\)  \n        Shapes.hpp&nbsp;(19)&nbsp;:&nbsp;double getArea\\(\\) const \\{ return 0; \\}  \n**Point of division by zero**&nbsp;  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;return shape1\\->getArea\\(\\)\/shape2\\->getArea\\(\\);" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "2070090220", "unbViolId": "acd933d5-852f-3d09-90b8-7cdf30c39666" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Start of the path" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of division by zero" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CERT_C-INT33-a", "level": "error", "message": { "text": "Division by \"shape2.getArea()\" which may possibly be zero", "markdown": "**\\[Line 5\\] Division by \"shape2\\.getArea\\(\\)\" which may possibly be zero**  \n  \n**Start of the path**  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;shape2\\->getArea\\(\\)  \n        Shapes.hpp&nbsp;(19)&nbsp;:&nbsp;double getArea\\(\\) const \\{ return 0; \\}  \n**Point of division by zero**&nbsp;  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;return shape1\\->getArea\\(\\)\/shape2\\->getArea\\(\\);" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "2070090220", "unbViolId": "55525081-6d1d-3524-8caa-d6885277a966" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Start of the path" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of division by zero" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "HICPP-5_5_1-a", "level": "error", "message": { "text": "Division by \"shape2.getArea()\" which may possibly be zero", "markdown": "**\\[Line 5\\] Division by \"shape2\\.getArea\\(\\)\" which may possibly be zero**  \n  \n**Start of the path**  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;shape2\\->getArea\\(\\)  \n        Shapes.hpp&nbsp;(19)&nbsp;:&nbsp;double getArea\\(\\) const \\{ return 0; \\}  \n**Point of division by zero**&nbsp;  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;return shape1\\->getArea\\(\\)\/shape2\\->getArea\\(\\);" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "2070090220", "unbViolId": "441417a8-7fa6-3fb2-a2cc-0fb2b47194d1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Start of the path" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of division by zero" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "MISRA2008-0_3_1_c", "level": "note", "message": { "text": "Division by \"shape2.getArea()\" which may possibly be zero", "markdown": "**\\[Line 5\\] Division by \"shape2\\.getArea\\(\\)\" which may possibly be zero**  \n  \n**Start of the path**  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;shape2\\->getArea\\(\\)  \n        Shapes.hpp&nbsp;(19)&nbsp;:&nbsp;double getArea\\(\\) const \\{ return 0; \\}  \n**Point of division by zero**&nbsp;  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;return shape1\\->getArea\\(\\)\/shape2\\->getArea\\(\\);" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "2070090220", "unbViolId": "0f0a0577-7675-3d3f-a539-a16f21bc59bf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Start of the path" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of division by zero" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "MISRA2012-DIR-4_1_c", "level": "error", "message": { "text": "Division by \"shape2.getArea()\" which may possibly be zero", "markdown": "**\\[Line 5\\] Division by \"shape2\\.getArea\\(\\)\" which may possibly be zero**  \n  \n**Start of the path**  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;shape2\\->getArea\\(\\)  \n        Shapes.hpp&nbsp;(19)&nbsp;:&nbsp;double getArea\\(\\) const \\{ return 0; \\}  \n**Point of division by zero**&nbsp;  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;return shape1\\->getArea\\(\\)\/shape2\\->getArea\\(\\);" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "2070090220", "unbViolId": "108f4f72-f2fb-3e96-8f72-096c2b70b5ba" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Start of the path" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of division by zero" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "MISRA2012-RULE-1_3_a", "level": "error", "message": { "text": "Division by \"shape2.getArea()\" which may possibly be zero", "markdown": "**\\[Line 5\\] Division by \"shape2\\.getArea\\(\\)\" which may possibly be zero**  \n  \n**Start of the path**  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;shape2\\->getArea\\(\\)  \n        Shapes.hpp&nbsp;(19)&nbsp;:&nbsp;double getArea\\(\\) const \\{ return 0; \\}  \n**Point of division by zero**&nbsp;  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;return shape1\\->getArea\\(\\)\/shape2\\->getArea\\(\\);" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "2070090220", "unbViolId": "c0e89c07-0946-3662-b72f-5f2ec1f66193" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Start of the path" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of division by zero" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "MISRAC2012-DIR_4_1-c", "level": "error", "message": { "text": "Division by \"shape2.getArea()\" which may possibly be zero", "markdown": "**\\[Line 5\\] Division by \"shape2\\.getArea\\(\\)\" which may possibly be zero**  \n  \n**Start of the path**  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;shape2\\->getArea\\(\\)  \n        Shapes.hpp&nbsp;(19)&nbsp;:&nbsp;double getArea\\(\\) const \\{ return 0; \\}  \n**Point of division by zero**&nbsp;  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;return shape1\\->getArea\\(\\)\/shape2\\->getArea\\(\\);" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "2070090220", "unbViolId": "48132907-f762-35dd-9df1-50560c46c438" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Start of the path" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of division by zero" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "MISRAC2012-RULE_1_3-a", "level": "error", "message": { "text": "Division by \"shape2.getArea()\" which may possibly be zero", "markdown": "**\\[Line 5\\] Division by \"shape2\\.getArea\\(\\)\" which may possibly be zero**  \n  \n**Start of the path**  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;shape2\\->getArea\\(\\)  \n        Shapes.hpp&nbsp;(19)&nbsp;:&nbsp;double getArea\\(\\) const \\{ return 0; \\}  \n**Point of division by zero**&nbsp;  \nDivisionByZero.cpp&nbsp;(5)&nbsp;:&nbsp;return shape1\\->getArea\\(\\)\/shape2\\->getArea\\(\\);" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "2070090220", "unbViolId": "81e60122-7e15-3403-950e-f89ccfe7478b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Start of the path" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1 } } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of division by zero" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "FORMAT-25_b", "level": "warning", "message": { "text": "'return' statement should be used with parenthesis", "markdown": "**\\[Line 5\\] 'return' statement should be used with parenthesis**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2070090220", "unbViolId": "823954f0-ff67-300f-82fb-26643c2df5fb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "MISRA2008-0_4_2", "level": "note", "message": { "text": "floating-point arithmetic is not documented", "markdown": "**\\[Line 5\\] floating\\-point arithmetic is not documented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2070090220", "unbViolId": "3232a6cf-92d3-3905-9ed4-827e78d8d794" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "OWASP2019-API9-d", "level": "warning", "message": { "text": "floating-point arithmetic is not documented", "markdown": "**\\[Line 5\\] floating\\-point arithmetic is not documented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2070090220", "unbViolId": "8d3be039-712a-3f4c-832e-5a95554c9fa9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-M0_4_2-a", "level": "error", "message": { "text": "floating-point arithmetic is not documented", "markdown": "**\\[Line 5\\] floating\\-point arithmetic is not documented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2070090220", "unbViolId": "282e8f3d-120a-3028-9027-2e4ceeb3a94a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "COMMENT-10", "level": "warning", "message": { "text": "floating-point arithmetic is not documented", "markdown": "**\\[Line 5\\] floating\\-point arithmetic is not documented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2070090220", "unbViolId": "e7cd8c91-fd7f-3339-8f2b-79426fae5ffc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "PREPROC-18", "level": "warning", "message": { "text": "<stdio.h> library shall not be used", "markdown": "**\\[Line 1\\] <stdio\\.h> library shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1233725276", "unbViolId": "18bce7b6-4cf0-3b31-afd3-2c90f98c5c66" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-022", "level": "error", "message": { "text": "<stdio.h> library shall not be used", "markdown": "**\\[Line 1\\] <stdio\\.h> library shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1233725276", "unbViolId": "39e5049c-ee74-3199-a4fa-23f084121ea4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "METRICS-31", "level": "warning", "message": { "text": "The assertion density is lower than two assertions per function", "markdown": "**\\[Line 1\\] The assertion density is lower than two assertions per function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1233725276", "unbViolId": "468ce302-b750-376c-8c37-07c7980bd4ea" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "NAMING-03", "level": "warning", "message": { "text": "The filename 'MemoryLeak.cpp' should be in lowercase", "markdown": "**\\[Line 1\\] The filename 'MemoryLeak\\.cpp' should be in lowercase**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1233725276", "unbViolId": "1a7152d4-224e-3203-abcf-9da0b8b111d0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "NAMING-38", "level": "warning", "message": { "text": "Implementation file 'MemoryLeak.cpp' should have the file name extension \".cc\"", "markdown": "**\\[Line 1\\] Implementation file 'MemoryLeak\\.cpp' should have the file name extension \"\\.cc\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1233725276", "unbViolId": "9d0c5a00-4804-3b30-84ec-4bb83fed5f45" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PFO-04", "level": "note", "message": { "text": "Implementation file 'MemoryLeak.cpp' should declare a local constant string that begins from characters \"@(#)\" ", "markdown": "**\\[Line 1\\] Implementation file 'MemoryLeak\\.cpp' should declare a local constant string that begins from characters \"@\\(\\#\\)\" **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1233725276", "unbViolId": "acb3281a-0c6c-3f74-8e1d-6f2136608a67" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-18_0_1", "level": "error", "message": { "text": "Instead of C library header '<stdio.h>' the corresponding C++ library header should be used", "markdown": "**\\[Line 1\\] Instead of C library header '<stdio\\.h>' the corresponding C\\+\\+ library header should be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1233725276", "unbViolId": "7a7a5b71-604e-3c8b-954d-bc1f24d3d8a3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-1_3_3-a", "level": "warning", "message": { "text": "Instead of C library header '<stdio.h>' the corresponding C++ library header should be used", "markdown": "**\\[Line 1\\] Instead of C library header '<stdio\\.h>' the corresponding C\\+\\+ library header should be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1233725276", "unbViolId": "f1119544-8961-3b67-bbb4-d99c799eb2c3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A18_0_1-a", "level": "error", "message": { "text": "Instead of C library header '<stdio.h>' the corresponding C++ library header should be used", "markdown": "**\\[Line 1\\] Instead of C library header '<stdio\\.h>' the corresponding C\\+\\+ library header should be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1233725276", "unbViolId": "c6862180-ba9e-3d5e-85f6-b077cd794689" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CODSTA-CPP-59", "level": "warning", "message": { "text": "Instead of C library header '<stdio.h>' the corresponding C++ library header should be used", "markdown": "**\\[Line 1\\] Instead of C library header '<stdio\\.h>' the corresponding C\\+\\+ library header should be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1233725276", "unbViolId": "7391c7e5-17d0-37c2-aaf7-79f971d1fb86" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A1_1_1-d", "level": "error", "message": { "text": "Instead of C library header '<stdio.h>' the corresponding C++ library header should be used", "markdown": "**\\[Line 1\\] Instead of C library header '<stdio\\.h>' the corresponding C\\+\\+ library header should be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1233725276", "unbViolId": "b69c6110-ee80-3ed6-be11-744baafc48a0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-02", "level": "warning", "message": { "text": "Add comment containing the copyright information at the begin of file 'MemoryLeak.cpp'", "markdown": "**\\[Line 1\\] Add comment containing the copyright information at the begin of file 'MemoryLeak\\.cpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1233725276", "unbViolId": "8aa0e7db-7c06-3472-82f2-d087fe076004" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-133_b", "level": "warning", "message": { "text": "Add comment containing the copyright information at the begin of file 'MemoryLeak.cpp'", "markdown": "**\\[Line 1\\] Add comment containing the copyright information at the begin of file 'MemoryLeak\\.cpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1233725276", "unbViolId": "7cabf3d6-a450-395d-b971-8141b6f11d3d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-03", "level": "warning", "message": { "text": "Add comment containing the information on the file at the begin of file 'MemoryLeak.cpp'", "markdown": "**\\[Line 1\\] Add comment containing the information on the file at the begin of file 'MemoryLeak\\.cpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1233725276", "unbViolId": "870ca6ce-ba48-341b-a9a1-25b3c439815d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-133_a", "level": "warning", "message": { "text": "Add comment containing the information on the file at the begin of file 'MemoryLeak.cpp'", "markdown": "**\\[Line 1\\] Add comment containing the information on the file at the begin of file 'MemoryLeak\\.cpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1233725276", "unbViolId": "dd33be6d-9989-390b-9a5b-909e9571a399" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-17_2_1-a", "level": "warning", "message": { "text": "Ensure that C Standard Library is securely used", "markdown": "**\\[Line 1\\] Ensure that C Standard Library is securely used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1233725276", "unbViolId": "f3271005-9112-30f8-bfc9-26b14b8f02a3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-M27_0_1-a", "level": "error", "message": { "text": "<stdio.h> library shall not be used", "markdown": "**\\[Line 1\\] <stdio\\.h> library shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1233725276", "unbViolId": "bd6fa35a-2dd9-3446-9e31-88db14d32bb4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-27_0_1", "level": "error", "message": { "text": "<stdio.h> library shall not be used", "markdown": "**\\[Line 1\\] <stdio\\.h> library shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1233725276", "unbViolId": "af792890-294f-3781-918a-65c7c0aedb94" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-20_9", "level": "warning", "message": { "text": "<stdio.h> library shall not be used", "markdown": "**\\[Line 1\\] <stdio\\.h> library shall not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1233725276", "unbViolId": "05852872-065e-348a-b803-e3ebe4ffb97d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-098", "level": "warning", "message": { "text": "Do not declare the 'IOException' type in the global namespace", "markdown": "**\\[Line 3\\] Do not declare the 'IOException' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-738024550", "unbViolId": "3af2c176-f306-3fc8-a62b-da32d14fcf13" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-M7_3_1-a", "level": "error", "message": { "text": "Do not declare the 'IOException' type in the global namespace", "markdown": "**\\[Line 3\\] Do not declare the 'IOException' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-738024550", "unbViolId": "a85ca288-eb94-3942-a28a-55850ebfac70" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-CPP-36", "level": "warning", "message": { "text": "Do not declare the 'IOException' type in the global namespace", "markdown": "**\\[Line 3\\] Do not declare the 'IOException' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-738024550", "unbViolId": "3af1c1e5-7093-3722-a43e-56d23434b266" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2008-7_3_1", "level": "error", "message": { "text": "Do not declare the 'IOException' type in the global namespace", "markdown": "**\\[Line 3\\] Do not declare the 'IOException' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-738024550", "unbViolId": "6303abab-6154-33fd-b997-863297156f76" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The declaration of the 'IOException' type should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 3\\] The declaration of the 'IOException' type should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-738024550", "unbViolId": "071cccd9-5c48-3bff-b565-88988760d4da" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The declaration of the 'IOException' type should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 3\\] The declaration of the 'IOException' type should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-738024550", "unbViolId": "e9657ae0-c521-3a13-b4b7-b266deda9125" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-CPP-19", "level": "error", "message": { "text": "Class 'IOException' does not define any constructors", "markdown": "**\\[Line 3\\] Class 'IOException' does not define any constructors**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-738024550", "unbViolId": "8a99371f-c9fd-38f0-a04f-e2e1438580a2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A12_4_2-a", "level": "warning", "message": { "text": "Class 'IOException' should be final", "markdown": "**\\[Line 3\\] Class 'IOException' should be final**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-738024550", "unbViolId": "11cdc161-7126-37d5-8017-82d203950c62" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-MCPP-23", "level": "warning", "message": { "text": "Class 'IOException' should be final", "markdown": "**\\[Line 3\\] Class 'IOException' should be final**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-738024550", "unbViolId": "edf87d55-f337-3192-8159-bbcd08faabe2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare default constructor in 'IOException'", "markdown": "**\\[Line 3\\] Explicitly declare default constructor in 'IOException'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-738024550", "unbViolId": "77b5edd6-47ff-308f-9b86-c8cc2eee9957" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare destructor in 'IOException'", "markdown": "**\\[Line 3\\] Explicitly declare destructor in 'IOException'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-738024550", "unbViolId": "dc0f4019-0d42-3d2d-a33e-baf193681337" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare copy assignment operator in 'IOException'", "markdown": "**\\[Line 3\\] Explicitly declare copy assignment operator in 'IOException'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-738024550", "unbViolId": "35ed291c-4ad3-3660-8b53-e5af534c3e30" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare move assignment operator in 'IOException'", "markdown": "**\\[Line 3\\] Explicitly declare move assignment operator in 'IOException'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-738024550", "unbViolId": "dda47c82-93ab-36ea-b617-1b3fdc96ac0f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare copy constructor in 'IOException'", "markdown": "**\\[Line 3\\] Explicitly declare copy constructor in 'IOException'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-738024550", "unbViolId": "d9435e63-f915-3693-b2b9-4de2fb68a3ab" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare move constructor in 'IOException'", "markdown": "**\\[Line 3\\] Explicitly declare move constructor in 'IOException'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-738024550", "unbViolId": "01597a6e-30e0-3d47-be30-20a69dd2b5d9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MRM-04", "level": "warning", "message": { "text": "Class 'IOException' missing assignment operator or special comment", "markdown": "**\\[Line 3\\] Class 'IOException' missing assignment operator or special comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-738024550", "unbViolId": "5da4f583-6973-3383-aa07-fc65c4251a38" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MRM-05", "level": "warning", "message": { "text": "Class 'IOException' missing copy constructor or special comment", "markdown": "**\\[Line 3\\] Class 'IOException' missing copy constructor or special comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-738024550", "unbViolId": "616fa34d-8d7d-35ff-ad89-2d37f742571a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-40", "level": "warning", "message": { "text": "All letters beside the first one in name 'IOException' should be lowercase", "markdown": "**\\[Line 3\\] All letters beside the first one in name 'IOException' should be lowercase**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-738024550", "unbViolId": "581fc115-359d-38cb-bb4c-1467a8e3ce83" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-HN-19", "level": "warning", "message": { "text": "The 'IOException' identifier should have the 'C' prefix", "markdown": "**\\[Line 3\\] The 'IOException' identifier should have the 'C' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-738024550", "unbViolId": "eb7a1e2b-9948-39dc-bab5-73502fa13a81" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "13d3c6e3-345e-340d-bb4f-09d32157ad04" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "4887ddf0-07e4-3543-8a71-e664a07532b8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CODSTA-223", "level": "warning", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 5\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "2ff3f4c0-5de6-3093-903a-e7b64475771f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A3_9_1-b", "level": "error", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 5\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "0435622c-3c2f-38fe-aaa7-7321dd3ebfac" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-7_1_6-b", "level": "warning", "message": { "text": "Do not use the 'int' standard integer type", "markdown": "**\\[Line 5\\] Do not use the 'int' standard integer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "fc5619e2-a78a-3e7f-a4dd-f398a09b8df2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "a3d00261-3bd9-3f12-be46-5dd39127093c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "f4730ede-2ccd-3e4a-add1-58b1a2bea955" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "4157bac2-3a50-3ce9-8478-90e7f42a6163" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "36107363-79d3-3439-9fcc-16ed36929077" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "36aea812-2718-396b-8519-4c29912a0224" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CODSTA-MCPP-08_b", "level": "error", "message": { "text": "The return type of the 'readIntegerArray' function should be declared as 'auto'", "markdown": "**\\[Line 5\\] The return type of the 'readIntegerArray' function should be declared as 'auto'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "05bbb78d-85bb-30a4-b140-be58e1af37bf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'readIntegerArray' function is not preceded by a comment", "markdown": "**\\[Line 5\\] The definition of the 'readIntegerArray' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "fe7c2b6e-9b0e-3f59-9528-a1f049a1ce62" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'readIntegerArray' function is not preceded by a comment", "markdown": "**\\[Line 5\\] The definition of the 'readIntegerArray' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "b833e458-64cc-3619-b003-6e10f0a7c760" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "OWASP2019-API9-e", "level": "warning", "message": { "text": "Function 'readIntegerArray' has external linkage and is not declared in the header", "markdown": "**\\[Line 5\\] Function 'readIntegerArray' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "d0fda93f-38be-3c51-900a-a5fc46c551c3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-A3_3_1-a", "level": "error", "message": { "text": "Function 'readIntegerArray' has external linkage and is not declared in the header", "markdown": "**\\[Line 5\\] Function 'readIntegerArray' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "bc1fad94-c613-371b-91c2-f798e6a91717" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "JSF-137", "level": "warning", "message": { "text": "Function 'readIntegerArray' has external linkage and is not declared in the header", "markdown": "**\\[Line 5\\] Function 'readIntegerArray' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "01bbb09d-0d00-3841-9dfb-ef711ca1ff9e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA-023", "level": "warning", "message": { "text": "Function 'readIntegerArray' has external linkage and is not declared in the header", "markdown": "**\\[Line 5\\] Function 'readIntegerArray' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "746d4b62-dd77-3952-8aa9-52cdbedc7745" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA2008-3_3_1", "level": "error", "message": { "text": "Function 'readIntegerArray' has external linkage and is not declared in the header", "markdown": "**\\[Line 5\\] Function 'readIntegerArray' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "a839c223-5882-3c42-8df1-b584327a19d8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "CERT_C-DCL15-a", "level": "warning", "message": { "text": "Function 'readIntegerArray' has external linkage and is not declared in the header", "markdown": "**\\[Line 5\\] Function 'readIntegerArray' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "0e232cbd-1332-34d5-9cc2-2acc7a2599b6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA2004-8_10", "level": "warning", "message": { "text": "Function 'readIntegerArray' has external linkage and is not declared in the header", "markdown": "**\\[Line 5\\] Function 'readIntegerArray' has external linkage and is not declared in the header**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "e6ba9944-fd39-398e-8011-f4cc877daa86" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "JSF-051", "level": "warning", "message": { "text": "The name 'readIntegerArray' should be composed only of lowercase letters", "markdown": "**\\[Line 5\\] The name 'readIntegerArray' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "d012d048-0d9c-3a37-894f-c639806b7bdd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "NAMING-44", "level": "warning", "message": { "text": "The name 'readIntegerArray' should be composed only of lowercase letters", "markdown": "**\\[Line 5\\] The name 'readIntegerArray' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "bf8ccaf0-7b65-303e-a6ec-0efa699d0edf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "JSF-098", "level": "warning", "message": { "text": "Do not declare the 'readIntegerArray' function in the global namespace", "markdown": "**\\[Line 5\\] Do not declare the 'readIntegerArray' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "fd49a3aa-e3c8-3b8b-aca3-3e27dcbe7347" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-M7_3_1-a", "level": "error", "message": { "text": "Do not declare the 'readIntegerArray' function in the global namespace", "markdown": "**\\[Line 5\\] Do not declare the 'readIntegerArray' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "461d1773-b649-36a8-bbc8-288bd5bf72da" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "CODSTA-CPP-36", "level": "warning", "message": { "text": "Do not declare the 'readIntegerArray' function in the global namespace", "markdown": "**\\[Line 5\\] Do not declare the 'readIntegerArray' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "83685ff5-03b0-38f6-b92c-a66782f38af3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA2008-7_3_1", "level": "error", "message": { "text": "Do not declare the 'readIntegerArray' function in the global namespace", "markdown": "**\\[Line 5\\] Do not declare the 'readIntegerArray' function in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "5d168ad1-1ac0-3471-9b02-b691f22aec49" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "Function 'readIntegerArray' returns a pointer type", "markdown": "**\\[Line 5\\] Function 'readIntegerArray' returns a pointer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "83f96920-6cc3-3a83-9224-8ec4d5404fdc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "Function 'readIntegerArray' returns a pointer type", "markdown": "**\\[Line 5\\] Function 'readIntegerArray' returns a pointer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "441fdd93-5f35-34d3-bbf5-86a4fd6bee62" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'readIntegerArray' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 5\\] The 'readIntegerArray' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "8df11f8b-a04d-3f11-aa33-7ff3b9eb469a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'readIntegerArray' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 5\\] The 'readIntegerArray' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "e7ad3138-77ca-354b-891b-1753ff5c312f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'file' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 5\\] The 'file' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "74d955ae-a6b4-3c16-bc9e-80f5b3349745" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'file' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 5\\] The 'file' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "9bf4007a-d69f-389c-9677-0b9544b14c21" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'pSize' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 5\\] The 'pSize' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "fd569a1b-5781-391e-aa9d-78efc21ff4d5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'pSize' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 5\\] The 'pSize' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "c6003345-bde9-338b-8bd0-617ff75883d3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'readIntegerArray' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 5\\] The 'readIntegerArray' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "71ad1940-fa68-3597-b185-8e72e89eb710" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'readIntegerArray' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 5\\] The 'readIntegerArray' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "04735334-0b8b-31fa-84d9-21c7551f8a88" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "FORMAT-28", "level": "warning", "message": { "text": "Return type is not placed in line before function 'readIntegerArray'", "markdown": "**\\[Line 5\\] Return type is not placed in line before function 'readIntegerArray'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "e010d8a5-f7c5-34e0-be02-c36bdfaf2d5a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'readIntegerArray' has Cyclomatic Complexity value: 3", "markdown": "**\\[Line 5\\] Function 'readIntegerArray' has Cyclomatic Complexity value: 3**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "3cbb68be-3fae-354f-9f8e-7b38a49f6824" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'readIntegerArray' has Essential Complexity value: 1", "markdown": "**\\[Line 5\\] Function 'readIntegerArray' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "265fa9c6-ec25-3f78-976d-eb2f4764f8f0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "NAMING-17", "level": "warning", "message": { "text": "Naming convention not followed: readIntegerArray", "markdown": "**\\[Line 5\\] Naming convention not followed: readIntegerArray**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "f7bd77e8-2199-3365-ba3f-c9a7732470f0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "GLOBAL-UNUSEDFUNC", "level": "warning", "message": { "text": "The 'readIntegerArray' function is not used in the testing scope", "markdown": "**\\[Line 5\\] The 'readIntegerArray' function is not used in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "4d100ac7-5522-3a44-be23-defb54a19c6d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "AUTOSAR-M0_1_10-a", "level": "warning", "message": { "text": "The 'readIntegerArray' function is not used in the testing scope", "markdown": "**\\[Line 5\\] The 'readIntegerArray' function is not used in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "d25af060-3ba0-3957-bd77-9d3eee7687c1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA2008-0_1_10_b", "level": "error", "message": { "text": "The 'readIntegerArray' function is not used in the testing scope", "markdown": "**\\[Line 5\\] The 'readIntegerArray' function is not used in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "bac7bf89-1dbe-3fdb-b268-caf4e2a31110" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier 'file' differs only by case from identifier 'FILE' declared in file 'stdio.h'", "markdown": "**\\[Line 5\\] The identifier 'file' differs only by case from identifier 'FILE' declared in file 'stdio\\.h'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "d0b68e1e-5259-36d2-8d1e-a57f0585ea59" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier 'file' differs only by case from identifier 'FILE' declared in file 'stdio.h'", "markdown": "**\\[Line 5\\] The identifier 'file' differs only by case from identifier 'FILE' declared in file 'stdio\\.h'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "25b4b9e9-8d8c-3170-a9eb-ced1bf21a3d8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The parameter of pointer or array type is declared: file", "markdown": "**\\[Line 5\\] The parameter of pointer or array type is declared: file**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "641c715f-39da-30cd-8652-b8f56feffbe5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The parameter of pointer type is declared: file", "markdown": "**\\[Line 5\\] The parameter of pointer type is declared: file**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "eb1bbbe0-568f-3a18-9668-07e21a4d5d71" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "MISRA2008-2_10_1", "level": "error", "message": { "text": "Identifier name: 'file' differs only by case from its type name: 'FILE'", "markdown": "**\\[Line 5\\] Identifier name: 'file' differs only by case from its type name: 'FILE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "eb3d99b8-6cdb-3ac5-a5ef-f52ae3bae20e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "HICPP-2_4_1-a", "level": "warning", "message": { "text": "Identifier name: 'file' differs only by case from its type name: 'FILE'", "markdown": "**\\[Line 5\\] Identifier name: 'file' differs only by case from its type name: 'FILE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "9d58e475-4f24-33cd-8687-31ef504942fd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "AUTOSAR-M2_10_1-a", "level": "error", "message": { "text": "Identifier name: 'file' differs only by case from its type name: 'FILE'", "markdown": "**\\[Line 5\\] Identifier name: 'file' differs only by case from its type name: 'FILE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "363830dd-fd5c-34d2-9593-2730354aa720" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "NAMING-47", "level": "warning", "message": { "text": "Identifier name: 'file' differs only by case from its type name: 'FILE'", "markdown": "**\\[Line 5\\] Identifier name: 'file' differs only by case from its type name: 'FILE'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "9e4fc11a-a671-3c2d-b3c2-459b1bd7b1c5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "CERT_C-API00-a", "level": "warning", "message": { "text": "Parameter 'file' is not validated before use", "markdown": "**\\[Line 5\\] Parameter 'file' is not validated before use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "93864492-f82c-3244-95ac-20c9844339cf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "CODSTA-86", "level": "warning", "message": { "text": "Parameter 'file' is not validated before use", "markdown": "**\\[Line 5\\] Parameter 'file' is not validated before use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "6279ea3c-1757-3c04-8fa8-af39cae15d34" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "NAMING-HN-34", "level": "warning", "message": { "text": "The 'file' identifier should have the 'p' prefix", "markdown": "**\\[Line 5\\] The 'file' identifier should have the 'p' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "ef1f4196-b1d0-3e73-816c-33b31a0b22e1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 29, "endColumn": 30 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "82d3eada-bae6-38fc-954f-7adec2028cef" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 35, "endColumn": 36 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "1b4a7391-0cd5-3f20-ac97-5045c6462a06" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 35, "endColumn": 36 } } } ] }, { "ruleId": "CODSTA-223", "level": "warning", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 5\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "21e3a216-2b98-301f-a0e3-ece145319228" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 35, "endColumn": 36 } } } ] }, { "ruleId": "AUTOSAR-A3_9_1-b", "level": "error", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 5\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "20dd04d2-f8db-3418-b130-2c550407d2b3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 35, "endColumn": 36 } } } ] }, { "ruleId": "HICPP-7_1_6-b", "level": "warning", "message": { "text": "Do not use the 'int' standard integer type", "markdown": "**\\[Line 5\\] Do not use the 'int' standard integer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "443bd774-216e-3faa-b3b9-1a71dfe2a6b7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 35, "endColumn": 36 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "6667d52f-a997-3621-9bf4-760801d2244f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 35, "endColumn": 36 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "3803eef5-962b-30d8-9514-dac42af6868f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 35, "endColumn": 36 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "caae5845-8d3f-395e-9df3-1db525536554" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 35, "endColumn": 36 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "6fcbd3fa-f3fc-3368-a0e8-0d244db683d2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 35, "endColumn": 36 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "064be661-71d8-39d5-8256-7d7c287443d7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 35, "endColumn": 36 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The parameter of pointer or array type is declared: pSize", "markdown": "**\\[Line 5\\] The parameter of pointer or array type is declared: pSize**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "d427c05f-b657-35b3-af7a-3cd459032081" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The parameter of pointer type is declared: pSize", "markdown": "**\\[Line 5\\] The parameter of pointer type is declared: pSize**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "01e65c17-210b-3c6c-bdb7-719a3ec9b8a8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "CERT_C-API00-a", "level": "warning", "message": { "text": "Parameter 'pSize' is not validated before use", "markdown": "**\\[Line 5\\] Parameter 'pSize' is not validated before use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "6ab4f695-ff30-30ee-bf38-5902c66ef6b7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "CODSTA-86", "level": "warning", "message": { "text": "Parameter 'pSize' is not validated before use", "markdown": "**\\[Line 5\\] Parameter 'pSize' is not validated before use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "2970eb25-d2ff-30b5-a9e2-786675a73df0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "AUTOSAR-M7_1_2-b", "level": "error", "message": { "text": "Pass parameter \"pSize\" with const specifier", "markdown": "**\\[Line 5\\] Pass parameter \"pSize\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "b0f68e82-afe1-37d3-b105-3e1f10184a6b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "MISRAC2012-RULE_8_13-a", "level": "warning", "message": { "text": "Pass parameter \"pSize\" with const specifier", "markdown": "**\\[Line 5\\] Pass parameter \"pSize\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "6f129a38-2d2c-34b5-8775-c1ae294dc979" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "CERT_C-DCL13-a", "level": "warning", "message": { "text": "Pass parameter \"pSize\" with const specifier", "markdown": "**\\[Line 5\\] Pass parameter \"pSize\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "d1b01e04-c5f6-3f0d-a945-36050f081144" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "MISRA2004-16_7", "level": "warning", "message": { "text": "Pass parameter \"pSize\" with const specifier", "markdown": "**\\[Line 5\\] Pass parameter \"pSize\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "b034ba3d-6a73-3bf4-b815-7ab2326b771a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "MISRA2012-RULE-8_13_a", "level": "warning", "message": { "text": "Pass parameter \"pSize\" with const specifier", "markdown": "**\\[Line 5\\] Pass parameter \"pSize\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "a9983e9b-581f-3eb2-a239-4224e0e4e641" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "JSF-118", "level": "warning", "message": { "text": "Pass parameter \"pSize\" with const specifier", "markdown": "**\\[Line 5\\] Pass parameter \"pSize\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "8b761b9f-8236-321f-83a9-48a224d60d9f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "MISRA2008-7_1_2_a", "level": "error", "message": { "text": "Pass parameter \"pSize\" with const specifier", "markdown": "**\\[Line 5\\] Pass parameter \"pSize\" with const specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "6265e0c8-45b3-34bc-9ce8-003024f8c9df" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "NAMING-HN-23", "level": "warning", "message": { "text": "The 'pSize' identifier should have the 'i' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 5\\] The 'pSize' identifier should have the 'i' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "fd0349de-ecc2-3a3b-a4ed-088a4a8a5be2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "NAMING-HN-31", "level": "warning", "message": { "text": "The 'pSize' identifier should have the 'n' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 5\\] The 'pSize' identifier should have the 'n' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "90d91ece-0748-3281-b9b5-05194f378406" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "NAMING-HN-44", "level": "warning", "message": { "text": "The 'pSize' identifier should have the 'i' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 5\\] The 'pSize' identifier should have the 'i' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1086168919", "unbViolId": "ec3b1e7a-8cac-3283-b917-3d56c92d3e54" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "METRICS-19", "level": "warning", "message": { "text": "Percentage of comment lines vs. all method's lines is: 0", "markdown": "**\\[Line 6\\] Percentage of comment lines vs\\. all method's lines is: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "123", "unbViolId": "6c4de0ff-1a9b-32ac-b2cc-dd653855be69" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 7\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "ab65b10d-3ad8-393d-849e-b629b17269bc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 7\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "7c4c6fb7-629d-3138-bc88-5bceaf202c3c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 7\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "15a17f00-9c5b-3ad1-8475-07be9bea6e6d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CERT_C-ERR33-d", "level": "error", "message": { "text": "Value returned from method \"fscanf\" should be checked", "markdown": "**\\[Line 7\\] Value returned from method \"fscanf\" should be checked**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "158667c2-c2d3-3092-a00c-b8521218863f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } } ] }, { "ruleId": "MISRAC2012-RULE_21_6-a", "level": "error", "message": { "text": "The 'fscanf' library function should not be used", "markdown": "**\\[Line 7\\] The 'fscanf' library function should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "8e676af0-0e86-3e5c-afcd-e2db1d3d8c7c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "MISRA2012-RULE-21_6", "level": "error", "message": { "text": "The 'fscanf' library function should not be used", "markdown": "**\\[Line 7\\] The 'fscanf' library function should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "82094e70-410d-37ea-b280-7209524253e0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "CERT_C-ERR02-a", "level": "warning", "message": { "text": "The 'fscanf' library function should not be used", "markdown": "**\\[Line 7\\] The 'fscanf' library function should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "ec29955d-e82e-35ad-81dd-4806fc85a97c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "CODSTA-110", "level": "warning", "message": { "text": "The 'fscanf' library function should not be used", "markdown": "**\\[Line 7\\] The 'fscanf' library function should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "7f66eeae-536b-33a8-aa65-ebadc7b41c49" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "CERT_C-ERR33-a", "level": "error", "message": { "text": "The value returned by the standard library function 'fscanf' should be used", "markdown": "**\\[Line 7\\] The value returned by the standard library function 'fscanf' should be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "e405dcb8-7b7c-3f24-b2bd-379274d5a091" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "APSC_DV-003235-a", "level": "error", "message": { "text": "The value returned by the POSIX library function 'fscanf' should be used", "markdown": "**\\[Line 7\\] The value returned by the POSIX library function 'fscanf' should be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "172f97c9-9162-3a6c-9534-cd8d72d7e1a9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "CERT_C-POS54-a", "level": "error", "message": { "text": "The value returned by the POSIX library function 'fscanf' should be used", "markdown": "**\\[Line 7\\] The value returned by the POSIX library function 'fscanf' should be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "1edeb49c-6aff-3a59-ad7b-70abb8aef89f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "AUTOSAR-A0_1_2-a", "level": "error", "message": { "text": "Unused function's 'fscanf' return value", "markdown": "**\\[Line 7\\] Unused function's 'fscanf' return value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "6ee6c4cb-c3b3-320c-83bf-4d0cf1563705" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "CODSTA-CPP-58", "level": "warning", "message": { "text": "Unused function's 'fscanf' return value", "markdown": "**\\[Line 7\\] Unused function's 'fscanf' return value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "dced824e-d499-3f1f-a428-2f961c255d91" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "MISRA2008-0_1_7", "level": "error", "message": { "text": "Unused function's 'fscanf' return value", "markdown": "**\\[Line 7\\] Unused function's 'fscanf' return value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "544dc567-c55a-3a78-afde-b13deccb5462" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-115_a", "level": "warning", "message": { "text": "Unused function's 'fscanf' return value", "markdown": "**\\[Line 7\\] Unused function's 'fscanf' return value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "2392ff02-d9b7-3bf5-b7d3-85558fed12f1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "CODSTA-122_a", "level": "warning", "message": { "text": "Unused function's \"fscanf\" return value", "markdown": "**\\[Line 7\\] Unused function's \"fscanf\" return value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "8a687662-3e91-3018-b08b-95f3cc18835c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "MISRAC2012-RULE_17_7-a", "level": "error", "message": { "text": "Unused function's \"fscanf\" return value", "markdown": "**\\[Line 7\\] Unused function's \"fscanf\" return value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "95b5d20c-f10c-3a81-bb6d-4bf31ec531e6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "CERT_C-EXP12-a", "level": "warning", "message": { "text": "Unused function's \"fscanf\" return value", "markdown": "**\\[Line 7\\] Unused function's \"fscanf\" return value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "a3e2ef88-11d0-3fe1-aa12-b1c337f15568" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "MISRA2012-RULE-17_7_a", "level": "error", "message": { "text": "Unused function's \"fscanf\" return value", "markdown": "**\\[Line 7\\] Unused function's \"fscanf\" return value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "bc08d56a-97a8-3198-8ad1-9b3f20e8b023" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "MISRA2004-16_10", "level": "warning", "message": { "text": "Unused function's \"fscanf\" return value", "markdown": "**\\[Line 7\\] Unused function's \"fscanf\" return value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "218c886b-e3ac-33ac-ad02-f895d86b4a24" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "AUTOSAR-M0_3_2-a", "level": "error", "message": { "text": "Unused function's \"fscanf\" return value", "markdown": "**\\[Line 7\\] Unused function's \"fscanf\" return value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "7e0057a3-35ab-3e54-8341-eeed5ec4de8d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "MISRA2008-0_3_2", "level": "error", "message": { "text": "Unused function's \"fscanf\" return value", "markdown": "**\\[Line 7\\] Unused function's \"fscanf\" return value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "7a711bb5-9e67-315c-a578-b99274a33795" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-115", "level": "warning", "message": { "text": "Unused function's \"fscanf\" return value", "markdown": "**\\[Line 7\\] Unused function's \"fscanf\" return value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "30a51591-0932-3a62-8e6f-4c6769a420c4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "APSC_DV-002390-c", "level": "error", "message": { "text": "There should be number describing size of variable in '%d' on position:1", "markdown": "**\\[Line 7\\] There should be number describing size of variable in '%d' on position:1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "01ac1057-c526-3741-b1cc-4c08bec084ed" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "SECURITY-14", "level": "error", "message": { "text": "There should be number describing size of variable in '%d' on position:1", "markdown": "**\\[Line 7\\] There should be number describing size of variable in '%d' on position:1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "165d034b-fb6d-3346-bdfd-0bafc53d0cdf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "CODSTA-CPP-01", "level": "note", "message": { "text": "Prefer iostream.h to stdio.h", "markdown": "**\\[Line 7\\] Prefer iostream\\.h to stdio\\.h**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "74e54981-5eaa-370a-acc6-484253bde663" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "CERT_C-STR07-a", "level": "error", "message": { "text": "Unsafe string function 'fscanf' is being used", "markdown": "**\\[Line 7\\] Unsafe string function 'fscanf' is being used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "fb95d7f8-98dc-386c-8eec-a2cd606d8695" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "AUTOSAR-A27_0_4-b", "level": "error", "message": { "text": "Unsafe string function 'fscanf' is being used", "markdown": "**\\[Line 7\\] Unsafe string function 'fscanf' is being used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "a3519cdb-390c-3083-9efe-a60e893afcab" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "CERT_C-INT05-a", "level": "warning", "message": { "text": "Unsafe string function 'fscanf' is being used", "markdown": "**\\[Line 7\\] Unsafe string function 'fscanf' is being used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "797edf31-5f31-372c-b4ad-d89887c7d6c2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "SECURITY-13", "level": "error", "message": { "text": "Unsafe string function 'fscanf' is being used", "markdown": "**\\[Line 7\\] Unsafe string function 'fscanf' is being used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "9bebd9f1-aad8-3fd6-b581-5fecee8e2c99" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "CWE-798-a", "level": "note", "message": { "text": "The string literal is embedded directly in the code: %d", "markdown": "**\\[Line 7\\] The string literal is embedded directly in the code: %d**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "1ec2f6c9-51fc-3468-81c7-51af7789d6ae" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 15, "endColumn": 16 } } } ] }, { "ruleId": "CODSTA-203", "level": "note", "message": { "text": "The string literal is embedded directly in the code: %d", "markdown": "**\\[Line 7\\] The string literal is embedded directly in the code: %d**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "ec5a196c-c328-3725-8d1b-b105af5d2025" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 15, "endColumn": 16 } } } ] }, { "ruleId": "APSC_DV-003110-a", "level": "error", "message": { "text": "The string literal is embedded directly in the code: %d", "markdown": "**\\[Line 7\\] The string literal is embedded directly in the code: %d**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "8a193892-5cc9-38b0-8c2d-e9b469b99307" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 15, "endColumn": 16 } } } ] }, { "ruleId": "CERT_C-MSC41-a", "level": "error", "message": { "text": "The string literal is embedded directly in the code: %d", "markdown": "**\\[Line 7\\] The string literal is embedded directly in the code: %d**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "290ed5fa-ea7c-3e17-bcec-7480368f7fd8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 15, "endColumn": 16 } } } ] }, { "ruleId": "AUTOSAR-A27_0_4-d", "level": "error", "message": { "text": "The string literal should not be passed as an argument of the 'const char *' type in the 'fscanf' function call", "markdown": "**\\[Line 7\\] The string literal should not be passed as an argument of the 'const char \\*' type in the 'fscanf' function call**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "e1fd8590-3495-3ebf-ad48-8604cdafb9df" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 15, "endColumn": 16 } } } ] }, { "ruleId": "PB-76", "level": "warning", "message": { "text": "The string literal should not be passed as an argument of the 'const char *' type in the 'fscanf' function call", "markdown": "**\\[Line 7\\] The string literal should not be passed as an argument of the 'const char \\*' type in the 'fscanf' function call**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1844934654", "unbViolId": "a6722a48-07c9-383c-967c-12e1436ed8b6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 15, "endColumn": 16 } } } ] }, { "ruleId": "CDD-DUPS", "level": "warning", "message": { "text": "Duplicated string: '\"%d\"'", "markdown": "**\\[Line 7\\] Duplicated string: '\"%d\"'**  \n  \nReview duplicate in:&nbsp;MemoryLeak.cpp&nbsp;(7)  \nReview duplicate in:&nbsp;MemoryLeak.cpp&nbsp;(10)" }, "partialFingerprints": { "violType": "DupViol", "lineHash": "-1844934654", "unbViolId": "5230ed7b-6373-3549-8318-0cd87c67cae9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 15, "endColumn": 19 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 15, "endColumn": 19 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 20, "endColumn": 24 } }, "message": { "text": "Review duplicate in" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 8\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "8ef68f1b-33de-39a2-a361-9ec96e6a629d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 8\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "0c926018-9bbd-3791-9d06-8d5a33c59c12" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 8\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "38b776bc-bc06-3c25-9bfc-d5a322f3d09d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "BD-SECURITY-TDALLOC", "level": "error", "message": { "text": "Data obtained from a file (\"*pSize\") is used to determine the size of memory allocation", "markdown": "**\\[Line 8\\] Data obtained from a file \\(\"\\*pSize\"\\) is used to determine the size of memory allocation**  \n  \n**Tainting point**  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where the array is allocated**&nbsp;  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "1773312110", "unbViolId": "a40e4274-573c-3f35-8729-38c5f8ffb0ec" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "Violation Cause - Tainting point" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where the array is allocated" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CWE-770-a", "level": "error", "message": { "text": "Data obtained from a file (\"*pSize\") is used to determine the size of memory allocation", "markdown": "**\\[Line 8\\] Data obtained from a file \\(\"\\*pSize\"\\) is used to determine the size of memory allocation**  \n  \n**Tainting point**  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where the array is allocated**&nbsp;  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "1773312110", "unbViolId": "6bf9634e-49bb-3526-88ea-7f425f73c41c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "Violation Cause - Tainting point" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where the array is allocated" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "OWASP2019-API4-a", "level": "error", "message": { "text": "Data obtained from a file (\"*pSize\") is used to determine the size of memory allocation", "markdown": "**\\[Line 8\\] Data obtained from a file \\(\"\\*pSize\"\\) is used to determine the size of memory allocation**  \n  \n**Tainting point**  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where the array is allocated**&nbsp;  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "1773312110", "unbViolId": "1c0e0620-bf66-3ff2-85bc-190571a73d2b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "Violation Cause - Tainting point" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where the array is allocated" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 8\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "37ddd05c-2483-3fdf-b7ca-431fda0e941d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 8\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "a77d6cbf-0fef-3610-aef4-c7a5334a80cf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "CODSTA-223", "level": "warning", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 8\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "961f2d9f-3bf2-35fb-aa1a-0e666acbb2e3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "AUTOSAR-A3_9_1-b", "level": "error", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 8\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "b4bec3c2-01b0-3131-98ab-6071b9a19570" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-7_1_6-b", "level": "warning", "message": { "text": "Do not use the 'int' standard integer type", "markdown": "**\\[Line 8\\] Do not use the 'int' standard integer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "e9c97bf4-a2b8-36aa-806d-cd7466c5f064" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 8\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "91cbc121-baf2-33ad-8e4d-30ef869e3bed" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 8\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "af11309d-d1a5-367a-99fe-59a584636d41" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 8\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "47600be2-8f0c-3f14-9e76-aba6f0b99e47" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 8\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "b04cc6f0-4157-363f-a342-0b1e1f0d3f22" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 8\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "759abe8b-b717-3e74-b928-6e5afa66b55c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "AUTOSAR-A8_5_2-a", "level": "error", "message": { "text": "The definition of the 'data' variable should contain a braced initializer", "markdown": "**\\[Line 8\\] The definition of the 'data' variable should contain a braced initializer**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "36814746-4c3f-3e95-9b29-5a8b323f9a1b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-MCPP-38", "level": "warning", "message": { "text": "The definition of the 'data' variable should contain a braced initializer", "markdown": "**\\[Line 8\\] The definition of the 'data' variable should contain a braced initializer**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "9db75eec-6aa2-31dd-9ea5-8ac6c987776b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-MCPP-08_a", "level": "error", "message": { "text": "The 'data' variable should be declared with the 'auto' type specifier", "markdown": "**\\[Line 8\\] The 'data' variable should be declared with the 'auto' type specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "1fdb4f90-bd08-32aa-b3f8-802190e18a4c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The variable of pointer or array type is declared: data", "markdown": "**\\[Line 8\\] The variable of pointer or array type is declared: data**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "fef6e69a-8db1-35b0-82db-19c39b6a84df" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The variable of pointer type is declared: data", "markdown": "**\\[Line 8\\] The variable of pointer type is declared: data**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "32afdc20-c60a-39e9-bb71-c9e499b65db1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CERT_C-DCL00-a", "level": "warning", "message": { "text": "Declare local variable 'data' as const", "markdown": "**\\[Line 8\\] Declare local variable 'data' as const**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "bbe51b89-a1de-3b95-a2c3-ec38b7a154a6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A7_1_1-a", "level": "error", "message": { "text": "Declare local variable 'data' as const", "markdown": "**\\[Line 8\\] Declare local variable 'data' as const**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "1c2b9786-3f7a-3b73-9e7a-8a97eea3b743" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2008-7_1_1", "level": "error", "message": { "text": "Declare local variable 'data' as const", "markdown": "**\\[Line 8\\] Declare local variable 'data' as const**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "4a81f343-1464-3428-8d8b-86f5da94bbc1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-CPP-53", "level": "warning", "message": { "text": "Declare local variable 'data' as const", "markdown": "**\\[Line 8\\] Declare local variable 'data' as const**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "4b84f14c-f7d2-3d10-b442-61843c0970c5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-7_1_2-a", "level": "warning", "message": { "text": "Declare local variable 'data' as const", "markdown": "**\\[Line 8\\] Declare local variable 'data' as const**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "e1b9aa85-9da8-3d25-83fd-ebeb21f58ea9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'data' variable should be commented", "markdown": "**\\[Line 8\\] The 'data' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "41c9e58f-63c7-32d5-befd-246bb36318fc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'data' variable should be commented", "markdown": "**\\[Line 8\\] The 'data' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "7ff87e34-3842-3ad4-a607-216a832c7252" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MRM-34", "level": "warning", "message": { "text": "Check the return value of new", "markdown": "**\\[Line 8\\] Check the return value of new**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "d42b21e7-b431-3f31-bd8a-4dec5a6bf8ce" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CERT_CPP-MEM52-a", "level": "error", "message": { "text": "Check the return value of new", "markdown": "**\\[Line 8\\] Check the return value of new**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "5175844a-d7d2-3ff2-a5aa-64b96dba5f32" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-22", "level": "warning", "message": { "text": "Naming convention not followed: data", "markdown": "**\\[Line 8\\] Naming convention not followed: data**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "9657c6a7-dd79-378d-98e1-215b1f7dbd0d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-HN-16", "level": "warning", "message": { "text": "The 'data' identifier should have the 'prg' prefix", "markdown": "**\\[Line 8\\] The 'data' identifier should have the 'prg' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "d7c82a4b-27da-3751-86d6-3f690fb00dba" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-HN-23", "level": "warning", "message": { "text": "The 'data' identifier should have the 'i' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 8\\] The 'data' identifier should have the 'i' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "4a6a8ede-a2b1-3cd3-bc0d-755349f9b815" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-HN-31", "level": "warning", "message": { "text": "The 'data' identifier should have the 'n' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 8\\] The 'data' identifier should have the 'n' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "ee741542-e6a4-3623-a919-0c1c15c800f4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-HN-34", "level": "warning", "message": { "text": "The 'data' identifier should have the 'p' prefix", "markdown": "**\\[Line 8\\] The 'data' identifier should have the 'p' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "b64a3a98-d27b-340e-bf5b-759ed30d77c7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-HN-44", "level": "warning", "message": { "text": "The 'data' identifier should have the 'i' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 8\\] The 'data' identifier should have the 'i' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "55faccaf-215e-3b69-aabc-9e1d7caf69b8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2012-DIR-4_12", "level": "error", "message": { "text": "'new' operator should not be used", "markdown": "**\\[Line 8\\] 'new' operator should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "2829d487-f186-364b-8d98-b6dd134d619b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 14, "endColumn": 15 } } } ] }, { "ruleId": "MISRA2008-18_4_1", "level": "error", "message": { "text": "'new' operator should not be used", "markdown": "**\\[Line 8\\] 'new' operator should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "9c75105a-9453-369e-80ef-9a1f98eab8cc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 14, "endColumn": 15 } } } ] }, { "ruleId": "MISRAC2012-RULE_21_3-a", "level": "error", "message": { "text": "'new' operator should not be used", "markdown": "**\\[Line 8\\] 'new' operator should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "2b1be19b-9675-339d-a5ac-a72cd6111cec" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 14, "endColumn": 15 } } } ] }, { "ruleId": "AUTOSAR-A18_5_2-a", "level": "error", "message": { "text": "'new' operator should not be used", "markdown": "**\\[Line 8\\] 'new' operator should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "f003c4dc-955f-3a42-9ea3-257b8894a684" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 14, "endColumn": 15 } } } ] }, { "ruleId": "JSF-206", "level": "error", "message": { "text": "'new' operator should not be used", "markdown": "**\\[Line 8\\] 'new' operator should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "4788c197-25c9-3106-bb32-5979c9d6d798" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 14, "endColumn": 15 } } } ] }, { "ruleId": "MISRA2012-RULE-21_3", "level": "error", "message": { "text": "'new' operator should not be used", "markdown": "**\\[Line 8\\] 'new' operator should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "a425613e-2d9d-36c0-960a-4002026baa60" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 14, "endColumn": 15 } } } ] }, { "ruleId": "MISRA2004-20_4", "level": "warning", "message": { "text": "'new' operator should not be used", "markdown": "**\\[Line 8\\] 'new' operator should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "b301eaa6-011f-3020-b51b-2e6765bc082d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 14, "endColumn": 15 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_12-a", "level": "error", "message": { "text": "'new' operator should not be used", "markdown": "**\\[Line 8\\] 'new' operator should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "822e8739-c48e-3111-81c7-8f9dbe7ed30e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 14, "endColumn": 15 } } } ] }, { "ruleId": "STL-10", "level": "warning", "message": { "text": "Use vector or string instead of dynamically allocated array", "markdown": "**\\[Line 8\\] Use vector or string instead of dynamically allocated array**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "ecc1f653-646e-3cc9-833e-075e9abec58d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 14, "endColumn": 15 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 8\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "ced983a8-3b6f-391f-9d24-8794c3d4b5af" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 8\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "18ccf23d-10f2-343f-9c88-d953f91b5555" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "CODSTA-223", "level": "warning", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 8\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "b5aaa35e-29ad-3cb6-aa1b-5a8ceccf910e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "AUTOSAR-A3_9_1-b", "level": "error", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 8\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "a15f3c67-e8a9-37cf-bd40-00a5ff11abf9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "HICPP-7_1_6-b", "level": "warning", "message": { "text": "Do not use the 'int' standard integer type", "markdown": "**\\[Line 8\\] Do not use the 'int' standard integer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "8bbed1bd-376c-3e56-9093-ab994fcee030" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 8\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "6a1c6880-5107-3220-a62d-7525e0a0bf9f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 8\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "c081dc54-dcc2-3508-8882-345416f0661b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 8\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "85ac4387-9e36-309b-a913-2c6ffb64f7f2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 8\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "f1c0612c-0eae-3782-bf14-8b2c82df18ca" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 8\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1773312110", "unbViolId": "164089b1-7c8a-351e-8edd-f2561b3e9d62" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 9\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "9a0ddadd-0ed2-3819-8d7c-d8a449b934a5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 9\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "5e3c6f28-f2f1-3f38-ad6b-01b9df9fe6d8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 9\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "8b95177c-0c22-3945-8c8f-f02ee3729763" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-43", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 9\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "afaba1dc-e73e-3bbf-a658-ff7a3ee2bee9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_b", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 9\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "8c1201b5-dd73-3d61-b1c8-045e7c059a65" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 9\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "368e98aa-dd39-36e6-9d41-5cb47382f701" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 9\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "35ea71ff-f1d3-3109-b3fc-1dc229836451" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 9\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "7a3784d1-f91c-30d4-9b11-baf4a333d538" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-02", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 9\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "d9841102-53b0-3ded-a932-eec33824bd9b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "BD-SECURITY-TDLOOP", "level": "error", "message": { "text": "Data obtained from a file (\"*pSize\") is used in a loop condition", "markdown": "**\\[Line 9\\] Data obtained from a file \\(\"\\*pSize\"\\) is used in a loop condition**  \n  \n**Tainting point**  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: pSize\\[\\]_  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];  \n**Tainted data use in a loop condition**&nbsp;  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: pSize\\[0\\]_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "616861252", "unbViolId": "e9aea488-a49c-3eb6-8c14-3d6d91c30eb2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "Violation Cause - Tainting point  *** Tainted data: pSize[]" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "Violation Point - Tainted data use in a loop condition  *** Tainted data: pSize[0]" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CODSTA-83", "level": "warning", "message": { "text": "A loop does not have a fixed upper nor lower bound", "markdown": "**\\[Line 9\\] A loop does not have a fixed upper nor lower bound**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "eacfb25f-5071-369a-bbfe-143c502eb679" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 9\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "7160f05f-de2e-3fb3-8a04-6c472d80f5fd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 9\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "c2bd5e33-62a4-3cd7-8293-1321b3e9c2ac" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-223", "level": "warning", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 9\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "d733a408-6355-35cc-896a-e1487bf50f93" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A3_9_1-b", "level": "error", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 9\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "4cfda825-cd5d-3e29-b6b9-f5b47b2a1627" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-7_1_6-b", "level": "warning", "message": { "text": "Do not use the 'int' standard integer type", "markdown": "**\\[Line 9\\] Do not use the 'int' standard integer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "f3460d92-c6c4-33d4-a1ae-480987a5c421" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 9\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "fd5c4592-67c2-3032-9df8-1d377c8febc1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 9\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "c10233ef-fb71-3511-9ca8-8e18a2eeb264" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 9\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "f759ba8c-79de-3983-bdb7-53bbc78f5237" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 9\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "2cc29043-964e-34d9-b8a8-a193485c4a5c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 9\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "c82a8217-167c-3b12-91bd-f5fccde3121c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A8_5_2-a", "level": "error", "message": { "text": "The definition of the 'i' variable should contain a braced initializer", "markdown": "**\\[Line 9\\] The definition of the 'i' variable should contain a braced initializer**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "1f939f3d-ca5a-38df-b09a-1dc5bb120ef6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "CODSTA-MCPP-38", "level": "warning", "message": { "text": "The definition of the 'i' variable should contain a braced initializer", "markdown": "**\\[Line 9\\] The definition of the 'i' variable should contain a braced initializer**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "b05968bd-008d-38ee-a8db-727ed4dc8fef" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "PORT-13", "level": "warning", "message": { "text": "'i' shall be declared as unsigned int or signed int", "markdown": "**\\[Line 9\\] 'i' shall be declared as unsigned int or signed int**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "3067f2b7-2df2-3e17-8a03-66f99689a14f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'i' variable should be commented", "markdown": "**\\[Line 9\\] The 'i' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "fcd0987f-ea34-3a0a-a7ff-acecb9cc8a29" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'i' variable should be commented", "markdown": "**\\[Line 9\\] The 'i' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "a33520df-dd00-37da-bcab-d28f8b9237c1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "APSC_DV-002560-k", "level": "error", "message": { "text": "User input was directly used as a loop boundary: pSize", "markdown": "**\\[Line 9\\] User input was directly used as a loop boundary: pSize**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "698fe448-c5e1-3537-94c7-8d40969ef39d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "APSC_DV-002550-k", "level": "error", "message": { "text": "User input was directly used as a loop boundary: pSize", "markdown": "**\\[Line 9\\] User input was directly used as a loop boundary: pSize**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "3a6b25f5-e190-39af-8b73-7ebc9950fb1f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "APSC_DV-001290-b", "level": "error", "message": { "text": "User input was directly used as a loop boundary: pSize", "markdown": "**\\[Line 9\\] User input was directly used as a loop boundary: pSize**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "2aad6ee2-5ae4-38fb-a988-19abf3ef41dc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "SECURITY-38", "level": "error", "message": { "text": "User input was directly used as a loop boundary: pSize", "markdown": "**\\[Line 9\\] User input was directly used as a loop boundary: pSize**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "8d9dc6e2-25ba-3b32-9c18-9df9c0692ae8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "CWE-20-j", "level": "error", "message": { "text": "User input was directly used as a loop boundary: pSize", "markdown": "**\\[Line 9\\] User input was directly used as a loop boundary: pSize**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "8b0da81c-bd76-3cd4-9747-3b0a15ec82fc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "APSC_DV-002530-k", "level": "error", "message": { "text": "User input was directly used as a loop boundary: pSize", "markdown": "**\\[Line 9\\] User input was directly used as a loop boundary: pSize**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "aaf21ed1-dc7b-393a-9f86-f3d962bd0823" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "APSC_DV-002520-k", "level": "error", "message": { "text": "User input was directly used as a loop boundary: pSize", "markdown": "**\\[Line 9\\] User input was directly used as a loop boundary: pSize**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "65dc112b-851c-3a5d-bd73-3bbd901845ed" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "OPT-04", "level": "warning", "message": { "text": "Postfix operator applied to variable 'i'; prefer prefix type", "markdown": "**\\[Line 9\\] Postfix operator applied to variable 'i'; prefer prefix type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "616861252", "unbViolId": "3ff1e6b0-f9e3-3ca9-9629-473a5327b75a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 30, "endColumn": 31 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 10\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "9024fa58-ec52-3ef7-9e4e-dd71d9162356" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 10\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "757dff6d-9ef3-3a4d-a043-ff8a133b3cf3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 10\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "6f223bf8-9ab8-3e4f-b4e7-356d0ead344d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-43", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 10\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "573372b2-6dd4-3bf5-9d0a-9146e69aa20a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_b", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 10\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "da30a22e-bd7e-36cd-9850-bc23b1a56f08" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 10\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "ecd47955-505c-3aca-98e0-f11dd96276f1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 10\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "d748d596-2a2c-32cb-aec9-0d58a88e877b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 10\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "5067e589-2b17-31bf-be49-0e46c53a481e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-02", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 10\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "abee8e59-b2f9-34b9-8282-1fdc0c33eb86" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 10\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "ba5990e7-7648-3f81-ae64-d560079af2a1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 10\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "cac065be-da4a-3706-aa9a-258ff55d9fa8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 10\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "83e8ac08-2a0f-3421-aa89-4d88574efddc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "CODSTA-23", "level": "warning", "message": { "text": "The 'if' statement doesn't have an 'else' clause", "markdown": "**\\[Line 10\\] The 'if' statement doesn't have an 'else' clause**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "699064f2-d6f7-3ada-8682-8182d344f571" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "MISRAC2012-RULE_21_6-a", "level": "error", "message": { "text": "The 'fscanf' library function should not be used", "markdown": "**\\[Line 10\\] The 'fscanf' library function should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "1d90dd65-e67a-3088-8fff-920a79d5d052" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2012-RULE-21_6", "level": "error", "message": { "text": "The 'fscanf' library function should not be used", "markdown": "**\\[Line 10\\] The 'fscanf' library function should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "75d766ce-de84-33e6-b891-d9188f322afa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CERT_C-ERR02-a", "level": "warning", "message": { "text": "The 'fscanf' library function should not be used", "markdown": "**\\[Line 10\\] The 'fscanf' library function should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "319577dc-28b9-3408-a800-b1f4b6bc135d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-110", "level": "warning", "message": { "text": "The 'fscanf' library function should not be used", "markdown": "**\\[Line 10\\] The 'fscanf' library function should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "09d5b26a-659c-34cc-8d08-931e2d07083a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "APSC_DV-002390-c", "level": "error", "message": { "text": "There should be number describing size of variable in '%d' on position:1", "markdown": "**\\[Line 10\\] There should be number describing size of variable in '%d' on position:1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "7abd94e3-790f-3bc3-8219-18bb86e7ef5f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "SECURITY-14", "level": "error", "message": { "text": "There should be number describing size of variable in '%d' on position:1", "markdown": "**\\[Line 10\\] There should be number describing size of variable in '%d' on position:1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "81846eb3-32e4-3635-b70b-1ac419dfdf64" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-CPP-01", "level": "note", "message": { "text": "Prefer iostream.h to stdio.h", "markdown": "**\\[Line 10\\] Prefer iostream\\.h to stdio\\.h**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "b4405cf6-1b42-3552-a0bd-570c67c61f8f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CERT_C-STR07-a", "level": "error", "message": { "text": "Unsafe string function 'fscanf' is being used", "markdown": "**\\[Line 10\\] Unsafe string function 'fscanf' is being used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "f5c4faf5-314a-30ec-846d-11fcb2c8239f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A27_0_4-b", "level": "error", "message": { "text": "Unsafe string function 'fscanf' is being used", "markdown": "**\\[Line 10\\] Unsafe string function 'fscanf' is being used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "96c8d062-139d-30c3-af40-cebaf76ea80d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CERT_C-INT05-a", "level": "warning", "message": { "text": "Unsafe string function 'fscanf' is being used", "markdown": "**\\[Line 10\\] Unsafe string function 'fscanf' is being used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "1fdfbd87-51c4-301b-9d53-4b83454265e4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "SECURITY-13", "level": "error", "message": { "text": "Unsafe string function 'fscanf' is being used", "markdown": "**\\[Line 10\\] Unsafe string function 'fscanf' is being used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "b4178ff9-399a-3b56-9bf9-1f156879980d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CWE-798-a", "level": "note", "message": { "text": "The string literal is embedded directly in the code: %d", "markdown": "**\\[Line 10\\] The string literal is embedded directly in the code: %d**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "ed3f73d3-1536-3920-9c9e-bac291726c64" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "CODSTA-203", "level": "note", "message": { "text": "The string literal is embedded directly in the code: %d", "markdown": "**\\[Line 10\\] The string literal is embedded directly in the code: %d**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "8cafaf80-1708-3060-84d9-cdcf93d3e16c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "APSC_DV-003110-a", "level": "error", "message": { "text": "The string literal is embedded directly in the code: %d", "markdown": "**\\[Line 10\\] The string literal is embedded directly in the code: %d**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "9164f424-9fc4-345e-8b8d-5f061723de8c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "CERT_C-MSC41-a", "level": "error", "message": { "text": "The string literal is embedded directly in the code: %d", "markdown": "**\\[Line 10\\] The string literal is embedded directly in the code: %d**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "53ea00c8-0b9b-3c08-ac37-bee68ae30f9f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "AUTOSAR-A27_0_4-d", "level": "error", "message": { "text": "The string literal should not be passed as an argument of the 'const char *' type in the 'fscanf' function call", "markdown": "**\\[Line 10\\] The string literal should not be passed as an argument of the 'const char \\*' type in the 'fscanf' function call**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "59d1aa1c-21a0-39e6-b4d1-2fd445e918df" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "PB-76", "level": "warning", "message": { "text": "The string literal should not be passed as an argument of the 'const char *' type in the 'fscanf' function call", "markdown": "**\\[Line 10\\] The string literal should not be passed as an argument of the 'const char \\*' type in the 'fscanf' function call**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "541d5eeb-a54a-3b2f-ac86-dff32e7052dd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "MISRA2004-17_4", "level": "warning", "message": { "text": "Avoid indexing non-array objects", "markdown": "**\\[Line 10\\] Avoid indexing non\\-array objects**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "6d99b551-3b02-31f7-9750-056dfd480242" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "MISRA2008-5_0_15", "level": "error", "message": { "text": "Avoid indexing non-array objects", "markdown": "**\\[Line 10\\] Avoid indexing non\\-array objects**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "6f99f067-7636-3868-925f-2ed593ad68fe" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "AUTOSAR-M5_0_15-a", "level": "error", "message": { "text": "Avoid indexing non-array objects", "markdown": "**\\[Line 10\\] Avoid indexing non\\-array objects**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "700522989", "unbViolId": "4530b801-a5c9-3b56-bec0-934ded0f2266" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 27, "endColumn": 28 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 11\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541829676", "unbViolId": "1f526277-0903-34d7-87d3-ce50d813daf6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 11\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541829676", "unbViolId": "3205b347-5a08-39ca-b4b4-1f526c117a27" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 11\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541829676", "unbViolId": "76a47b28-b19b-3238-844d-4417ba45563d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 11\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541829676", "unbViolId": "bdbfe311-a842-33ea-9e8a-29b88489b876" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 11\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541829676", "unbViolId": "c5de304f-c7ce-3a3f-a6ed-c1b436f35459" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 11\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541829676", "unbViolId": "869c3ca6-0536-344e-ab42-87e57a46dc7c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 11\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541829676", "unbViolId": "2d74d753-d7dc-37c6-978c-d90e0b2fd123" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 11\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541829676", "unbViolId": "9d35b4e1-c0bc-3b14-8aed-26b2b2173e1d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 11\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541829676", "unbViolId": "e715ca27-2e74-32ea-8fc3-fc6189254067" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "JSF-208", "level": "error", "message": { "text": "c++ exception handling structure is used in function 'readIntegerArray'", "markdown": "**\\[Line 11\\] c\\+\\+ exception handling structure is used in function 'readIntegerArray'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541829676", "unbViolId": "8817aae3-cc57-39a4-a281-467a711b6fed" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "EXCEPT-05", "level": "error", "message": { "text": "c++ exception handling structure is used in function 'readIntegerArray'", "markdown": "**\\[Line 11\\] c\\+\\+ exception handling structure is used in function 'readIntegerArray'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-541829676", "unbViolId": "3b501813-200b-31e2-9234-34dc41899a25" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 4, "endColumn": 5 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 12\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "9053", "unbViolId": "5daae81f-538e-36f2-bc9b-e436ce9a3370" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 12\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "9053", "unbViolId": "43ee6029-af60-37a3-ab0d-8359803b862c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 12\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "9053", "unbViolId": "aefa0614-b408-32cc-a9d8-3f2e8374a32f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 12\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "9053", "unbViolId": "27b00388-e00c-30b9-8855-d34ada38ab21" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 12\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "9053", "unbViolId": "d95da4d3-a059-36e4-862e-6a3e9492f359" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 12\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "9053", "unbViolId": "3585bc18-4e81-382f-bd88-1f5c8937b85b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 13\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "404", "unbViolId": "2209666d-436e-3e02-bee5-1b7dd146d7e6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 13\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "404", "unbViolId": "cee71f6a-f250-384b-8980-fb3dc03f525d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 13\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "404", "unbViolId": "84d125bd-a8e1-3476-bf6b-fa5accd8d00b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 14\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1006431594", "unbViolId": "9757cfba-ab2e-3533-866e-453a1c02b054" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 14, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 14\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1006431594", "unbViolId": "6a4e6d5d-a163-30de-96bf-556a8a1f0fe1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 14, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 14\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1006431594", "unbViolId": "bc76a7f1-1a76-3c2d-9d92-0f6e19d4699f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 14, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-25_b", "level": "warning", "message": { "text": "'return' statement should be used with parenthesis", "markdown": "**\\[Line 14\\] 'return' statement should be used with parenthesis**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1006431594", "unbViolId": "46c382bc-4a1a-37c7-bdba-9e77348ca840" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 14, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "APSC_DV-002000-a", "level": "error", "message": { "text": "Memory not deallocated: data", "markdown": "**\\[Line 15\\] Memory not deallocated: data**  \n  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where memory is allocated**  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < \\*pSize\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nMemoryLeak.cpp&nbsp;(10)&nbsp;:&nbsp;if \\(fscanf\\(file, \"%d\", &data\\[i\\]\\) == EOF\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(fscanf\\(\\.\\.\\.\\) == \\-1\\) \\(assuming true\\)_  \nMemoryLeak.cpp&nbsp;(11)&nbsp;:&nbsp;throw IOException\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point where allocated memory is lost**&nbsp;  \nMemoryLeak.cpp&nbsp;(15)&nbsp;:&nbsp;\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "125", "unbViolId": "279eef1e-7831-3930-a529-4cbe49c1cd53" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where memory is allocated  *** Allocated memory: data" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < *pSize) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (fscanf(...) == -1) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where allocated memory is lost  *** Allocated memory: data" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "AUTOSAR-A15_0_2-a", "level": "error", "message": { "text": "Memory not deallocated: data", "markdown": "**\\[Line 15\\] Memory not deallocated: data**  \n  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where memory is allocated**  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < \\*pSize\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nMemoryLeak.cpp&nbsp;(10)&nbsp;:&nbsp;if \\(fscanf\\(file, \"%d\", &data\\[i\\]\\) == EOF\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(fscanf\\(\\.\\.\\.\\) == \\-1\\) \\(assuming true\\)_  \nMemoryLeak.cpp&nbsp;(11)&nbsp;:&nbsp;throw IOException\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point where allocated memory is lost**&nbsp;  \nMemoryLeak.cpp&nbsp;(15)&nbsp;:&nbsp;\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "125", "unbViolId": "d68ef7b4-fa32-3e3b-9558-cdf85c83bcd3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where memory is allocated  *** Allocated memory: data" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < *pSize) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (fscanf(...) == -1) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where allocated memory is lost  *** Allocated memory: data" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "AUTOSAR-A15_1_4-a", "level": "error", "message": { "text": "Memory not deallocated: data", "markdown": "**\\[Line 15\\] Memory not deallocated: data**  \n  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where memory is allocated**  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < \\*pSize\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nMemoryLeak.cpp&nbsp;(10)&nbsp;:&nbsp;if \\(fscanf\\(file, \"%d\", &data\\[i\\]\\) == EOF\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(fscanf\\(\\.\\.\\.\\) == \\-1\\) \\(assuming true\\)_  \nMemoryLeak.cpp&nbsp;(11)&nbsp;:&nbsp;throw IOException\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point where allocated memory is lost**&nbsp;  \nMemoryLeak.cpp&nbsp;(15)&nbsp;:&nbsp;\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "125", "unbViolId": "4caf1254-84c9-320b-816b-3640fe048447" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where memory is allocated  *** Allocated memory: data" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < *pSize) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (fscanf(...) == -1) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where allocated memory is lost  *** Allocated memory: data" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "BD-RES-LEAKS", "level": "error", "message": { "text": "Memory not deallocated: data", "markdown": "**\\[Line 15\\] Memory not deallocated: data**  \n  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where memory is allocated**  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < \\*pSize\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nMemoryLeak.cpp&nbsp;(10)&nbsp;:&nbsp;if \\(fscanf\\(file, \"%d\", &data\\[i\\]\\) == EOF\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(fscanf\\(\\.\\.\\.\\) == \\-1\\) \\(assuming true\\)_  \nMemoryLeak.cpp&nbsp;(11)&nbsp;:&nbsp;throw IOException\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point where allocated memory is lost**&nbsp;  \nMemoryLeak.cpp&nbsp;(15)&nbsp;:&nbsp;\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "125", "unbViolId": "cdcf01a6-65ab-33db-a9e4-55e11b29ca27" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where memory is allocated  *** Allocated memory: data" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < *pSize) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (fscanf(...) == -1) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where allocated memory is lost  *** Allocated memory: data" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CERT_C-CON30-a", "level": "warning", "message": { "text": "Memory not deallocated: data", "markdown": "**\\[Line 15\\] Memory not deallocated: data**  \n  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where memory is allocated**  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < \\*pSize\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nMemoryLeak.cpp&nbsp;(10)&nbsp;:&nbsp;if \\(fscanf\\(file, \"%d\", &data\\[i\\]\\) == EOF\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(fscanf\\(\\.\\.\\.\\) == \\-1\\) \\(assuming true\\)_  \nMemoryLeak.cpp&nbsp;(11)&nbsp;:&nbsp;throw IOException\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point where allocated memory is lost**&nbsp;  \nMemoryLeak.cpp&nbsp;(15)&nbsp;:&nbsp;\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "125", "unbViolId": "96b2fd31-e5ea-3f52-8fac-d2a75ac30cc0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where memory is allocated  *** Allocated memory: data" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < *pSize) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (fscanf(...) == -1) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where allocated memory is lost  *** Allocated memory: data" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CERT_C-FIO22-a", "level": "warning", "message": { "text": "Memory not deallocated: data", "markdown": "**\\[Line 15\\] Memory not deallocated: data**  \n  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where memory is allocated**  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < \\*pSize\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nMemoryLeak.cpp&nbsp;(10)&nbsp;:&nbsp;if \\(fscanf\\(file, \"%d\", &data\\[i\\]\\) == EOF\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(fscanf\\(\\.\\.\\.\\) == \\-1\\) \\(assuming true\\)_  \nMemoryLeak.cpp&nbsp;(11)&nbsp;:&nbsp;throw IOException\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point where allocated memory is lost**&nbsp;  \nMemoryLeak.cpp&nbsp;(15)&nbsp;:&nbsp;\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "125", "unbViolId": "af64d153-d5fc-3971-9875-436b986fbed9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where memory is allocated  *** Allocated memory: data" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < *pSize) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (fscanf(...) == -1) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where allocated memory is lost  *** Allocated memory: data" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CERT_C-FIO42-a", "level": "warning", "message": { "text": "Memory not deallocated: data", "markdown": "**\\[Line 15\\] Memory not deallocated: data**  \n  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where memory is allocated**  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < \\*pSize\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nMemoryLeak.cpp&nbsp;(10)&nbsp;:&nbsp;if \\(fscanf\\(file, \"%d\", &data\\[i\\]\\) == EOF\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(fscanf\\(\\.\\.\\.\\) == \\-1\\) \\(assuming true\\)_  \nMemoryLeak.cpp&nbsp;(11)&nbsp;:&nbsp;throw IOException\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point where allocated memory is lost**&nbsp;  \nMemoryLeak.cpp&nbsp;(15)&nbsp;:&nbsp;\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "125", "unbViolId": "312d7f71-0130-3935-9671-98ef8d30161d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where memory is allocated  *** Allocated memory: data" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < *pSize) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (fscanf(...) == -1) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where allocated memory is lost  *** Allocated memory: data" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CERT_C-MEM00-e", "level": "error", "message": { "text": "Memory not deallocated: data", "markdown": "**\\[Line 15\\] Memory not deallocated: data**  \n  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where memory is allocated**  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < \\*pSize\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nMemoryLeak.cpp&nbsp;(10)&nbsp;:&nbsp;if \\(fscanf\\(file, \"%d\", &data\\[i\\]\\) == EOF\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(fscanf\\(\\.\\.\\.\\) == \\-1\\) \\(assuming true\\)_  \nMemoryLeak.cpp&nbsp;(11)&nbsp;:&nbsp;throw IOException\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point where allocated memory is lost**&nbsp;  \nMemoryLeak.cpp&nbsp;(15)&nbsp;:&nbsp;\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "125", "unbViolId": "d232c8f5-01a0-364b-92b3-bc919c90871a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where memory is allocated  *** Allocated memory: data" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < *pSize) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (fscanf(...) == -1) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where allocated memory is lost  *** Allocated memory: data" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CERT_C-MEM12-a", "level": "warning", "message": { "text": "Memory not deallocated: data", "markdown": "**\\[Line 15\\] Memory not deallocated: data**  \n  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where memory is allocated**  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < \\*pSize\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nMemoryLeak.cpp&nbsp;(10)&nbsp;:&nbsp;if \\(fscanf\\(file, \"%d\", &data\\[i\\]\\) == EOF\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(fscanf\\(\\.\\.\\.\\) == \\-1\\) \\(assuming true\\)_  \nMemoryLeak.cpp&nbsp;(11)&nbsp;:&nbsp;throw IOException\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point where allocated memory is lost**&nbsp;  \nMemoryLeak.cpp&nbsp;(15)&nbsp;:&nbsp;\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "125", "unbViolId": "ebd02cf6-c3a2-31ff-8773-0072f616bc9e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where memory is allocated  *** Allocated memory: data" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < *pSize) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (fscanf(...) == -1) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where allocated memory is lost  *** Allocated memory: data" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CERT_C-MEM31-a", "level": "error", "message": { "text": "Memory not deallocated: data", "markdown": "**\\[Line 15\\] Memory not deallocated: data**  \n  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where memory is allocated**  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < \\*pSize\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nMemoryLeak.cpp&nbsp;(10)&nbsp;:&nbsp;if \\(fscanf\\(file, \"%d\", &data\\[i\\]\\) == EOF\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(fscanf\\(\\.\\.\\.\\) == \\-1\\) \\(assuming true\\)_  \nMemoryLeak.cpp&nbsp;(11)&nbsp;:&nbsp;throw IOException\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point where allocated memory is lost**&nbsp;  \nMemoryLeak.cpp&nbsp;(15)&nbsp;:&nbsp;\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "125", "unbViolId": "42fb92a9-0757-3935-9535-4657f05ddc2b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where memory is allocated  *** Allocated memory: data" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < *pSize) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (fscanf(...) == -1) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where allocated memory is lost  *** Allocated memory: data" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CERT_C-WIN30-a", "level": "error", "message": { "text": "Memory not deallocated: data", "markdown": "**\\[Line 15\\] Memory not deallocated: data**  \n  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where memory is allocated**  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < \\*pSize\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nMemoryLeak.cpp&nbsp;(10)&nbsp;:&nbsp;if \\(fscanf\\(file, \"%d\", &data\\[i\\]\\) == EOF\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(fscanf\\(\\.\\.\\.\\) == \\-1\\) \\(assuming true\\)_  \nMemoryLeak.cpp&nbsp;(11)&nbsp;:&nbsp;throw IOException\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point where allocated memory is lost**&nbsp;  \nMemoryLeak.cpp&nbsp;(15)&nbsp;:&nbsp;\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "125", "unbViolId": "09cf7e3f-2435-3b22-81d4-17422cd37856" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where memory is allocated  *** Allocated memory: data" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < *pSize) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (fscanf(...) == -1) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where allocated memory is lost  *** Allocated memory: data" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CERT_CPP-ERR57-a", "level": "warning", "message": { "text": "Memory not deallocated: data", "markdown": "**\\[Line 15\\] Memory not deallocated: data**  \n  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where memory is allocated**  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < \\*pSize\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nMemoryLeak.cpp&nbsp;(10)&nbsp;:&nbsp;if \\(fscanf\\(file, \"%d\", &data\\[i\\]\\) == EOF\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(fscanf\\(\\.\\.\\.\\) == \\-1\\) \\(assuming true\\)_  \nMemoryLeak.cpp&nbsp;(11)&nbsp;:&nbsp;throw IOException\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point where allocated memory is lost**&nbsp;  \nMemoryLeak.cpp&nbsp;(15)&nbsp;:&nbsp;\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "125", "unbViolId": "feba8474-ee56-3d34-aee1-f2e1a35ba190" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where memory is allocated  *** Allocated memory: data" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < *pSize) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (fscanf(...) == -1) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where allocated memory is lost  *** Allocated memory: data" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CERT_CPP-FIO51-a", "level": "warning", "message": { "text": "Memory not deallocated: data", "markdown": "**\\[Line 15\\] Memory not deallocated: data**  \n  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where memory is allocated**  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < \\*pSize\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nMemoryLeak.cpp&nbsp;(10)&nbsp;:&nbsp;if \\(fscanf\\(file, \"%d\", &data\\[i\\]\\) == EOF\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(fscanf\\(\\.\\.\\.\\) == \\-1\\) \\(assuming true\\)_  \nMemoryLeak.cpp&nbsp;(11)&nbsp;:&nbsp;throw IOException\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point where allocated memory is lost**&nbsp;  \nMemoryLeak.cpp&nbsp;(15)&nbsp;:&nbsp;\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "125", "unbViolId": "e7de4ae0-25a9-3ec6-9bcd-62ad0ab3e2c3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where memory is allocated  *** Allocated memory: data" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < *pSize) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (fscanf(...) == -1) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where allocated memory is lost  *** Allocated memory: data" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CWE-772-a", "level": "error", "message": { "text": "Memory not deallocated: data", "markdown": "**\\[Line 15\\] Memory not deallocated: data**  \n  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where memory is allocated**  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < \\*pSize\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nMemoryLeak.cpp&nbsp;(10)&nbsp;:&nbsp;if \\(fscanf\\(file, \"%d\", &data\\[i\\]\\) == EOF\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(fscanf\\(\\.\\.\\.\\) == \\-1\\) \\(assuming true\\)_  \nMemoryLeak.cpp&nbsp;(11)&nbsp;:&nbsp;throw IOException\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point where allocated memory is lost**&nbsp;  \nMemoryLeak.cpp&nbsp;(15)&nbsp;:&nbsp;\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "125", "unbViolId": "d4c84633-4209-3cdb-8727-ce08998991ba" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where memory is allocated  *** Allocated memory: data" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < *pSize) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (fscanf(...) == -1) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where allocated memory is lost  *** Allocated memory: data" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "MISRA2012-DIR-4_13_a", "level": "warning", "message": { "text": "Memory not deallocated: data", "markdown": "**\\[Line 15\\] Memory not deallocated: data**  \n  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where memory is allocated**  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < \\*pSize\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nMemoryLeak.cpp&nbsp;(10)&nbsp;:&nbsp;if \\(fscanf\\(file, \"%d\", &data\\[i\\]\\) == EOF\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(fscanf\\(\\.\\.\\.\\) == \\-1\\) \\(assuming true\\)_  \nMemoryLeak.cpp&nbsp;(11)&nbsp;:&nbsp;throw IOException\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point where allocated memory is lost**&nbsp;  \nMemoryLeak.cpp&nbsp;(15)&nbsp;:&nbsp;\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "125", "unbViolId": "e4804989-db39-3dfb-908e-0c9ccd7a2d6e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where memory is allocated  *** Allocated memory: data" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < *pSize) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (fscanf(...) == -1) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where allocated memory is lost  *** Allocated memory: data" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "MISRA2012-RULE-22_1", "level": "error", "message": { "text": "Memory not deallocated: data", "markdown": "**\\[Line 15\\] Memory not deallocated: data**  \n  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where memory is allocated**  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < \\*pSize\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nMemoryLeak.cpp&nbsp;(10)&nbsp;:&nbsp;if \\(fscanf\\(file, \"%d\", &data\\[i\\]\\) == EOF\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(fscanf\\(\\.\\.\\.\\) == \\-1\\) \\(assuming true\\)_  \nMemoryLeak.cpp&nbsp;(11)&nbsp;:&nbsp;throw IOException\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point where allocated memory is lost**&nbsp;  \nMemoryLeak.cpp&nbsp;(15)&nbsp;:&nbsp;\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "125", "unbViolId": "567360ec-1333-3cc1-9ceb-3f77b77368cd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where memory is allocated  *** Allocated memory: data" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < *pSize) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (fscanf(...) == -1) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where allocated memory is lost  *** Allocated memory: data" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "MISRAC2012-DIR_4_13-a", "level": "warning", "message": { "text": "Memory not deallocated: data", "markdown": "**\\[Line 15\\] Memory not deallocated: data**  \n  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where memory is allocated**  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < \\*pSize\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nMemoryLeak.cpp&nbsp;(10)&nbsp;:&nbsp;if \\(fscanf\\(file, \"%d\", &data\\[i\\]\\) == EOF\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(fscanf\\(\\.\\.\\.\\) == \\-1\\) \\(assuming true\\)_  \nMemoryLeak.cpp&nbsp;(11)&nbsp;:&nbsp;throw IOException\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point where allocated memory is lost**&nbsp;  \nMemoryLeak.cpp&nbsp;(15)&nbsp;:&nbsp;\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "125", "unbViolId": "02b515b0-ed19-388a-8e32-f6ad37a2e307" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where memory is allocated  *** Allocated memory: data" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < *pSize) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (fscanf(...) == -1) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where allocated memory is lost  *** Allocated memory: data" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "MISRAC2012-RULE_22_1-a", "level": "error", "message": { "text": "Memory not deallocated: data", "markdown": "**\\[Line 15\\] Memory not deallocated: data**  \n  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where memory is allocated**  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < \\*pSize\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nMemoryLeak.cpp&nbsp;(10)&nbsp;:&nbsp;if \\(fscanf\\(file, \"%d\", &data\\[i\\]\\) == EOF\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(fscanf\\(\\.\\.\\.\\) == \\-1\\) \\(assuming true\\)_  \nMemoryLeak.cpp&nbsp;(11)&nbsp;:&nbsp;throw IOException\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point where allocated memory is lost**&nbsp;  \nMemoryLeak.cpp&nbsp;(15)&nbsp;:&nbsp;\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "125", "unbViolId": "1b43c445-4844-37c3-9ff9-61cfa8758aea" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where memory is allocated  *** Allocated memory: data" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < *pSize) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (fscanf(...) == -1) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where allocated memory is lost  *** Allocated memory: data" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "OWASP2019-API4-b", "level": "error", "message": { "text": "Memory not deallocated: data", "markdown": "**\\[Line 15\\] Memory not deallocated: data**  \n  \nMemoryLeak.cpp&nbsp;(7)&nbsp;:&nbsp;fscanf\\(file, \"%d\", pSize\\);  \n**Point where memory is allocated**  \nMemoryLeak.cpp&nbsp;(8)&nbsp;:&nbsp;int\\* data = new int\\[\\*pSize\\];&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_  \nMemoryLeak.cpp&nbsp;(9)&nbsp;:&nbsp;for \\(int i = 0; i < \\*pSize; i\\+\\+\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Loop condition evaluation: \\(i < \\*pSize\\) \\(assuming true\\)_&nbsp;&nbsp;_\\*\\*\\*&nbsp;Entering the loop_  \nMemoryLeak.cpp&nbsp;(10)&nbsp;:&nbsp;if \\(fscanf\\(file, \"%d\", &data\\[i\\]\\) == EOF\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(fscanf\\(\\.\\.\\.\\) == \\-1\\) \\(assuming true\\)_  \nMemoryLeak.cpp&nbsp;(11)&nbsp;:&nbsp;throw IOException\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Throws an exception_  \n**Point where allocated memory is lost**&nbsp;  \nMemoryLeak.cpp&nbsp;(15)&nbsp;:&nbsp;\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Allocated memory: data_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "125", "unbViolId": "70ac3218-00fc-343a-9376-3c82db16a6b8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where memory is allocated  *** Allocated memory: data" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Loop condition evaluation: (i < *pSize) (assuming true)  *** Entering the loop" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (fscanf(...) == -1) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Throws an exception" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1 } }, "message": { "text": "Violation Point - Point where allocated memory is lost  *** Allocated memory: data" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "METRICS-31", "level": "warning", "message": { "text": "The assertion density is lower than two assertions per function", "markdown": "**\\[Line 1\\] The assertion density is lower than two assertions per function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1179647073", "unbViolId": "d7574248-e882-3586-895a-5efe00d7953b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "NAMING-03", "level": "warning", "message": { "text": "The filename 'NullPointer.cpp' should be in lowercase", "markdown": "**\\[Line 1\\] The filename 'NullPointer\\.cpp' should be in lowercase**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1179647073", "unbViolId": "38a40d85-2f35-31e4-a40b-05361ce469fa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "NAMING-38", "level": "warning", "message": { "text": "Implementation file 'NullPointer.cpp' should have the file name extension \".cc\"", "markdown": "**\\[Line 1\\] Implementation file 'NullPointer\\.cpp' should have the file name extension \"\\.cc\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1179647073", "unbViolId": "381cde71-c374-3943-aa2f-b0517b76499a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PFO-04", "level": "note", "message": { "text": "Implementation file 'NullPointer.cpp' should declare a local constant string that begins from characters \"@(#)\" ", "markdown": "**\\[Line 1\\] Implementation file 'NullPointer\\.cpp' should declare a local constant string that begins from characters \"@\\(\\#\\)\" **" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1179647073", "unbViolId": "40a84482-4978-31e7-9fd2-b3d46e904344" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-02", "level": "warning", "message": { "text": "Add comment containing the copyright information at the begin of file 'NullPointer.cpp'", "markdown": "**\\[Line 1\\] Add comment containing the copyright information at the begin of file 'NullPointer\\.cpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1179647073", "unbViolId": "0bf8bdd8-42a3-3ea7-87da-5ac62ab13847" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-133_b", "level": "warning", "message": { "text": "Add comment containing the copyright information at the begin of file 'NullPointer.cpp'", "markdown": "**\\[Line 1\\] Add comment containing the copyright information at the begin of file 'NullPointer\\.cpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1179647073", "unbViolId": "ff8d667c-dfc0-386b-b9cd-25d3c4f19a1f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-03", "level": "warning", "message": { "text": "Add comment containing the information on the file at the begin of file 'NullPointer.cpp'", "markdown": "**\\[Line 1\\] Add comment containing the information on the file at the begin of file 'NullPointer\\.cpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1179647073", "unbViolId": "4fdca382-21a8-3577-8d80-245011b42c78" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-133_a", "level": "warning", "message": { "text": "Add comment containing the information on the file at the begin of file 'NullPointer.cpp'", "markdown": "**\\[Line 1\\] Add comment containing the information on the file at the begin of file 'NullPointer\\.cpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1179647073", "unbViolId": "af713a23-d5e7-358c-b236-076749be56c0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-032", "level": "warning", "message": { "text": "Not a proper header file (*.h ) is being included: \"Point.hpp\"", "markdown": "**\\[Line 1\\] Not a proper header file \\(\\*\\.h \\) is being included: \"Point\\.hpp\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1179647073", "unbViolId": "d2cac3ca-0104-3c97-8fa7-fa7a7c816e4c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-08", "level": "warning", "message": { "text": "Not a proper header file (*.h ) is being included: \"Point.hpp\"", "markdown": "**\\[Line 1\\] Not a proper header file \\(\\*\\.h \\) is being included: \"Point\\.hpp\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1179647073", "unbViolId": "407ae428-3d38-370b-921e-c23c63bf82de" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-09", "level": "error", "message": { "text": "Disallowed #include notation is being used: \"Point.hpp\"", "markdown": "**\\[Line 1\\] Disallowed \\#include notation is being used: \"Point\\.hpp\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1179647073", "unbViolId": "04be904b-132e-3df6-8cb0-9db51f18bf3a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-033", "level": "error", "message": { "text": "Disallowed #include notation is being used: \"Point.hpp\"", "markdown": "**\\[Line 1\\] Disallowed \\#include notation is being used: \"Point\\.hpp\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1179647073", "unbViolId": "7b9067a4-91ed-3a49-8967-d427ceda00df" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRA2008-18_0_1", "level": "error", "message": { "text": "Instead of C library header '<stdlib.h>' the corresponding C++ library header should be used", "markdown": "**\\[Line 3\\] Instead of C library header '<stdlib\\.h>' the corresponding C\\+\\+ library header should be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-327381023", "unbViolId": "63ec3d46-dd00-3a57-bec1-8b8cb24eb413" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-1_3_3-a", "level": "warning", "message": { "text": "Instead of C library header '<stdlib.h>' the corresponding C++ library header should be used", "markdown": "**\\[Line 3\\] Instead of C library header '<stdlib\\.h>' the corresponding C\\+\\+ library header should be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-327381023", "unbViolId": "bc573662-fb5a-36ab-b210-d5cbe2c3c3a0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A18_0_1-a", "level": "error", "message": { "text": "Instead of C library header '<stdlib.h>' the corresponding C++ library header should be used", "markdown": "**\\[Line 3\\] Instead of C library header '<stdlib\\.h>' the corresponding C\\+\\+ library header should be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-327381023", "unbViolId": "41dd6c64-71a9-3391-9d8c-3354f356dfea" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CODSTA-CPP-59", "level": "warning", "message": { "text": "Instead of C library header '<stdlib.h>' the corresponding C++ library header should be used", "markdown": "**\\[Line 3\\] Instead of C library header '<stdlib\\.h>' the corresponding C\\+\\+ library header should be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-327381023", "unbViolId": "45906b4a-39cb-3524-a5b6-aeae71ba352c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A1_1_1-d", "level": "error", "message": { "text": "Instead of C library header '<stdlib.h>' the corresponding C++ library header should be used", "markdown": "**\\[Line 3\\] Instead of C library header '<stdlib\\.h>' the corresponding C\\+\\+ library header should be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-327381023", "unbViolId": "913f17e9-ab69-328c-9e48-731dee18b9e7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-17_2_1-a", "level": "warning", "message": { "text": "Ensure that C Standard Library is securely used", "markdown": "**\\[Line 3\\] Ensure that C Standard Library is securely used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-327381023", "unbViolId": "d99b65aa-5f7e-39da-9041-4abe0ffbaefd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 3, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'main' function is not preceded by a comment", "markdown": "**\\[Line 5\\] The definition of the 'main' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "1d925cf6-f421-32e8-a6c5-a6c87a1f6e6b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'main' function is not preceded by a comment", "markdown": "**\\[Line 5\\] The definition of the 'main' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "73908da9-1515-38a7-ae57-298a4a933307" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'main' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 5\\] The 'main' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "96bdabb8-c575-3c33-9134-0aef6010b508" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'main' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 5\\] The 'main' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "2658c3d8-1f10-37d8-9bb1-7de91162b8e5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'argc' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 5\\] The 'argc' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "a60e36bf-c543-3dac-96df-d3f81f083522" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'argc' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 5\\] The 'argc' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "c0e702a4-fec5-3889-bac7-7eccae0d78fa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'argv' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 5\\] The 'argv' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "f8ac98ac-45c0-31fd-88cd-8c94ab065201" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'argv' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 5\\] The 'argv' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "0b3fe538-b583-328f-a7e5-6aa318ee2186" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'main' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 5\\] The 'main' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "41b99302-f9ec-3e18-a43b-9f58d34a7c39" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'main' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 5\\] The 'main' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "08c6b95c-e6a9-355f-905a-c48ed8b3a769" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "PORT-13", "level": "warning", "message": { "text": "'main' shall be declared as unsigned int or signed int", "markdown": "**\\[Line 5\\] 'main' shall be declared as unsigned int or signed int**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "e8b06fb7-a906-3f75-a3ef-040330dab1dc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "CERT_CPP-ERR50-d", "level": "warning", "message": { "text": "The 'main' function does not contain a catch(...) to catch all unhandled exceptions", "markdown": "**\\[Line 5\\] The 'main' function does not contain a catch\\(\\.\\.\\.\\) to catch all unhandled exceptions**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "c8e6a608-46a9-3aa4-870e-c087a4a3c7f4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A15_3_3-a", "level": "error", "message": { "text": "The 'main' function does not contain a catch(...) to catch all unhandled exceptions", "markdown": "**\\[Line 5\\] The 'main' function does not contain a catch\\(\\.\\.\\.\\) to catch all unhandled exceptions**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "ed583c53-d672-3bb1-9942-8266a5657e60" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "HICPP-15_3_2-b", "level": "warning", "message": { "text": "The 'main' function does not contain a catch(...) to catch all unhandled exceptions", "markdown": "**\\[Line 5\\] The 'main' function does not contain a catch\\(\\.\\.\\.\\) to catch all unhandled exceptions**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "3bdb9fae-1ba4-3381-853d-dc0c86fc52b2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2008-15_3_2", "level": "warning", "message": { "text": "The 'main' function does not contain a catch(...) to catch all unhandled exceptions", "markdown": "**\\[Line 5\\] The 'main' function does not contain a catch\\(\\.\\.\\.\\) to catch all unhandled exceptions**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "e4c92b6c-cfa8-3e9c-9bb3-849ccc46b1ed" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A15_5_3-d", "level": "error", "message": { "text": "The 'main' function does not contain a catch(...) to catch all unhandled exceptions", "markdown": "**\\[Line 5\\] The 'main' function does not contain a catch\\(\\.\\.\\.\\) to catch all unhandled exceptions**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "1a17f46a-7617-3b20-873f-6f873903b02b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "EXCEPT-06", "level": "warning", "message": { "text": "The 'main' function does not contain a catch(...) to catch all unhandled exceptions", "markdown": "**\\[Line 5\\] The 'main' function does not contain a catch\\(\\.\\.\\.\\) to catch all unhandled exceptions**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "c4fc71da-255a-3077-af76-b617190b0494" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2008-15_5_3_d", "level": "error", "message": { "text": "The 'main' function does not contain a catch(...) to catch all unhandled exceptions", "markdown": "**\\[Line 5\\] The 'main' function does not contain a catch\\(\\.\\.\\.\\) to catch all unhandled exceptions**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "8a84e075-56e5-364e-a086-598a23ec43ba" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "FORMAT-28", "level": "warning", "message": { "text": "Return type is not placed in line before function 'main'", "markdown": "**\\[Line 5\\] Return type is not placed in line before function 'main'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "3b8c5337-b721-32f4-8fd4-bef147a28b04" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'main' has Cyclomatic Complexity value: 2", "markdown": "**\\[Line 5\\] Function 'main' has Cyclomatic Complexity value: 2**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "4ac2ed0d-4513-3174-8630-3a2e861931d1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'main' has Essential Complexity value: 1", "markdown": "**\\[Line 5\\] Function 'main' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "6a1be106-0cb7-3826-9136-78533f65d52f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "ae6852e6-e998-3f5b-bf98-b387dc2d4235" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "a3da49f5-6bc3-3c45-9031-e59e5496f4d3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "PORT-13", "level": "warning", "message": { "text": "'argc' shall be declared as unsigned int or signed int", "markdown": "**\\[Line 5\\] 'argc' shall be declared as unsigned int or signed int**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "fdde6392-7462-3234-a3be-d675288d4fe3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 14, "endColumn": 15 } } } ] }, { "ruleId": "NAMING-HN-22", "level": "warning", "message": { "text": "The 'argc' identifier should have the 'i' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 5\\] The 'argc' identifier should have the 'i' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "58f505c9-7090-3f44-aab2-90db41788b79" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 14, "endColumn": 15 } } } ] }, { "ruleId": "NAMING-HN-30", "level": "warning", "message": { "text": "The 'argc' identifier should have the 'n' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 5\\] The 'argc' identifier should have the 'n' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "c325733d-2c1c-3037-b7b5-a902ec81fd0d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 14, "endColumn": 15 } } } ] }, { "ruleId": "NAMING-HN-43", "level": "warning", "message": { "text": "The 'argc' identifier should have the 'i' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 5\\] The 'argc' identifier should have the 'i' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "e8a0ad00-5952-36a5-ad92-ab9dc8088e8b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 14, "endColumn": 15 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'char' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'char' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "aa86e30b-8ca9-36b3-96e5-5ce726e98fd5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'char' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'char' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "35922090-3b6c-3ed9-8603-6120c925e70e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The parameter of pointer or array type is declared: argv", "markdown": "**\\[Line 5\\] The parameter of pointer or array type is declared: argv**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "0833430e-b47b-30a0-9a36-3adb494e0ffd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 26, "endColumn": 27 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The parameter of pointer type is declared: argv", "markdown": "**\\[Line 5\\] The parameter of pointer type is declared: argv**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "d8f00e61-db8b-35a5-8fb5-0ea6f0742098" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 26, "endColumn": 27 } } } ] }, { "ruleId": "JSF-097_c", "level": "error", "message": { "text": "Parameter 'argv' with array type was found in 'main' function declaration", "markdown": "**\\[Line 5\\] Parameter 'argv' with array type was found in 'main' function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "d4c8eda1-b81a-3ad6-9167-59c2698e473f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 26, "endColumn": 27 } } } ] }, { "ruleId": "CODSTA-142", "level": "error", "message": { "text": "Parameter 'argv' with array type was found in 'main' function declaration", "markdown": "**\\[Line 5\\] Parameter 'argv' with array type was found in 'main' function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "98857a25-10b6-3767-b886-e0b0e3a35241" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 26, "endColumn": 27 } } } ] }, { "ruleId": "CERT_C-API00-a", "level": "warning", "message": { "text": "Parameter 'argv' is not validated before use", "markdown": "**\\[Line 5\\] Parameter 'argv' is not validated before use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "5b73f2d6-cecc-3f6f-b7ea-afef3deda22a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 26, "endColumn": 27 } } } ] }, { "ruleId": "CODSTA-86", "level": "warning", "message": { "text": "Parameter 'argv' is not validated before use", "markdown": "**\\[Line 5\\] Parameter 'argv' is not validated before use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-332596053", "unbViolId": "4db56ea2-b2b9-3854-b5d1-405e51f05c23" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 26, "endColumn": 27 } } } ] }, { "ruleId": "METRICS-19", "level": "warning", "message": { "text": "Percentage of comment lines vs. all method's lines is: 0", "markdown": "**\\[Line 6\\] Percentage of comment lines vs\\. all method's lines is: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "123", "unbViolId": "8765c43f-5f87-3c1b-8bff-64638513750f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 7\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "8809e03f-e141-30b7-b191-c2b89384d69a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 7\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "bbe19688-0864-3aac-8bbd-38bff0a7c715" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 7\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "4a1cf254-f2c1-312f-bb1a-19f8ed5f5509" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A8_5_2-a", "level": "error", "message": { "text": "The definition of the 'point' variable should contain a braced initializer", "markdown": "**\\[Line 7\\] The definition of the 'point' variable should contain a braced initializer**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "d7f5b33c-9b84-33ba-8141-38e968001896" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-MCPP-38", "level": "warning", "message": { "text": "The definition of the 'point' variable should contain a braced initializer", "markdown": "**\\[Line 7\\] The definition of the 'point' variable should contain a braced initializer**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "b9544cbe-b925-33da-8599-2bad9be789ca" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier 'point' differs only by case from identifier 'Point' declared in file 'Point.hpp'", "markdown": "**\\[Line 7\\] The identifier 'point' differs only by case from identifier 'Point' declared in file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "a896271e-4135-3ac2-8c6e-e04b0e37b37c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier 'point' differs only by case from identifier 'Point' declared in file 'Point.hpp'", "markdown": "**\\[Line 7\\] The identifier 'point' differs only by case from identifier 'Point' declared in file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "b161a764-f217-3477-aa0f-85b7072fdab0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-94", "level": "warning", "message": { "text": "The variable of pointer or array type is declared: point", "markdown": "**\\[Line 7\\] The variable of pointer or array type is declared: point**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "663d51ba-82ca-3207-8b3a-ef30228a2711" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-95", "level": "warning", "message": { "text": "The variable of pointer type is declared: point", "markdown": "**\\[Line 7\\] The variable of pointer type is declared: point**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "f2545288-46c3-3560-a419-fb529a45ec35" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "MISRA2008-2_10_1", "level": "error", "message": { "text": "Identifier name: 'point' differs only by case from its type name: 'Point'", "markdown": "**\\[Line 7\\] Identifier name: 'point' differs only by case from its type name: 'Point'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "21c42da7-d640-3e0f-bd12-7772e2a91646" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "HICPP-2_4_1-a", "level": "warning", "message": { "text": "Identifier name: 'point' differs only by case from its type name: 'Point'", "markdown": "**\\[Line 7\\] Identifier name: 'point' differs only by case from its type name: 'Point'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "99dd9cf5-dcca-3fc2-9bcf-8563806f19dc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-M2_10_1-a", "level": "error", "message": { "text": "Identifier name: 'point' differs only by case from its type name: 'Point'", "markdown": "**\\[Line 7\\] Identifier name: 'point' differs only by case from its type name: 'Point'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "dff0ca63-4338-318e-98f2-c3f47c32dae3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-47", "level": "warning", "message": { "text": "Identifier name: 'point' differs only by case from its type name: 'Point'", "markdown": "**\\[Line 7\\] Identifier name: 'point' differs only by case from its type name: 'Point'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "59876f09-6297-36bf-8c34-e7ab0ad04d99" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "MRM-18", "level": "warning", "message": { "text": "Locally allocated memory is not deleted locally for : point", "markdown": "**\\[Line 7\\] Locally allocated memory is not deleted locally for : point**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "0adef6b3-fe13-3664-b0e7-07b9040c55f4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CERT_C-MEM00-a", "level": "error", "message": { "text": "Locally allocated memory is not deleted locally for : point", "markdown": "**\\[Line 7\\] Locally allocated memory is not deleted locally for : point**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "a3535f52-604e-3ad9-8e36-7f6f7034f26d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-132_a", "level": "warning", "message": { "text": "The 'point' variable should be commented", "markdown": "**\\[Line 7\\] The 'point' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "19dbda17-4a38-37bc-a171-64a053f32ee3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "COMMENT-05", "level": "warning", "message": { "text": "The 'point' variable should be commented", "markdown": "**\\[Line 7\\] The 'point' variable should be commented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "630944d4-4f89-313b-addc-46e96341571b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-A4_10_1-b", "level": "error", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 7\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "1c4ecde6-a07f-3fab-a0cb-1aa7e86c1861" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "HICPP-2_5_3-a", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 7\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "ed6dfb60-7732-3972-8388-57b72e66e453" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "CODSTA-MCPP-04", "level": "warning", "message": { "text": "Prefer 'nullptr' to '0' as the null pointer value", "markdown": "**\\[Line 7\\] Prefer 'nullptr' to '0' as the null pointer value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "5818ec17-d0c4-3da9-bc03-03f63f5339e4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_a", "level": "error", "message": { "text": "Variable 'point' of pointer type is initialized with '0'", "markdown": "**\\[Line 7\\] Variable 'point' of pointer type is initialized with '0'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "88baac15-99ed-3982-a6af-8ae343a11d1e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "AUTOSAR-M4_10_2-a", "level": "error", "message": { "text": "Variable 'point' of pointer type is initialized with '0'", "markdown": "**\\[Line 7\\] Variable 'point' of pointer type is initialized with '0'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "8552ad22-a6a5-33fb-973e-b5088696b103" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "MISRA2008-4_10_2", "level": "error", "message": { "text": "Variable 'point' of pointer type is initialized with '0'", "markdown": "**\\[Line 7\\] Variable 'point' of pointer type is initialized with '0'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "4cb52da2-7bc2-3f24-b4c0-f0f19f658243" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "CODSTA-CPP-63", "level": "warning", "message": { "text": "Variable 'point' of pointer type is initialized with '0'", "markdown": "**\\[Line 7\\] Variable 'point' of pointer type is initialized with '0'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "0c91a646-8b8f-3f69-9fa8-1ab73cf17be4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-a", "level": "error", "message": { "text": "Variable 'point' of pointer type is initialized with '0'", "markdown": "**\\[Line 7\\] Variable 'point' of pointer type is initialized with '0'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "47eb2ca5-e2df-33ce-9f92-8264eb664a5e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "CODSTA-131", "level": "warning", "message": { "text": "Variable 'point' of pointer type is initialized with '0'", "markdown": "**\\[Line 7\\] Variable 'point' of pointer type is initialized with '0'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "09974971-dcc5-3c3a-9c18-5008cdb0bfb9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "MISRA2012-RULE-11_9_b", "level": "error", "message": { "text": "Variable 'point' of pointer type is initialized with '0'", "markdown": "**\\[Line 7\\] Variable 'point' of pointer type is initialized with '0'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "506c97da-cf22-3960-89a2-e5303cd0ac10" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "MISRAC2012-RULE_11_9-b", "level": "error", "message": { "text": "Variable 'point' of pointer type is initialized with '0'", "markdown": "**\\[Line 7\\] Variable 'point' of pointer type is initialized with '0'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "264435611", "unbViolId": "bde24ad1-f8f9-30c4-9c84-db924cfcba12" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 8\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-620226472", "unbViolId": "95bdb294-265e-3323-b076-1a0a7c43bd75" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 8\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-620226472", "unbViolId": "6ee6ff90-dc36-38ca-877c-c4020ed803ac" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 8\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-620226472", "unbViolId": "5b39ecb4-147d-3201-97c3-d2fcf7c878d5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-43", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 8\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-620226472", "unbViolId": "0587615d-780e-3ba7-9d6e-898677f02404" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_b", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 8\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-620226472", "unbViolId": "7fbf1729-bc2a-3505-8a67-a8b84e206942" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 8\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-620226472", "unbViolId": "c0e7e140-f11e-3f21-8379-2d9304471cc3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 8\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-620226472", "unbViolId": "ceaf0355-c016-3f99-a935-4af7348bb042" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 8\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-620226472", "unbViolId": "5caa5a77-a56b-3cd1-90a7-e3178d71e315" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-02", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 8\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-620226472", "unbViolId": "8a3981f3-d519-374c-9be6-87dced7bc8db" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "CODSTA-23", "level": "warning", "message": { "text": "The 'if' statement doesn't have an 'else' clause", "markdown": "**\\[Line 8\\] The 'if' statement doesn't have an 'else' clause**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-620226472", "unbViolId": "6b47e144-5ad9-3b38-bd43-758408ae70c0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "SECURITY-35", "level": "error", "message": { "text": "No value of command line should be trusted: argc", "markdown": "**\\[Line 8\\] No value of command line should be trusted: argc**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-620226472", "unbViolId": "d0535bf9-a21f-3bed-b45d-1c5286142675" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "JSF-151", "level": "warning", "message": { "text": "Literal constant '3' is used", "markdown": "**\\[Line 8\\] Literal constant '3' is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-620226472", "unbViolId": "05480f03-71ea-3bd2-8940-1649ce29b66a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "CODSTA-26", "level": "warning", "message": { "text": "Literal constant '3' is used", "markdown": "**\\[Line 8\\] Literal constant '3' is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-620226472", "unbViolId": "ce7b31e6-be1f-3d06-9187-5b9aea6fb7d7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "AUTOSAR-A5_1_1-a", "level": "error", "message": { "text": "Literal constant '3' is used", "markdown": "**\\[Line 8\\] Literal constant '3' is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-620226472", "unbViolId": "5bd04cdc-5ac6-32a2-ac18-49ba00c6a2a0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "HICPP-5_1_1-a", "level": "warning", "message": { "text": "Literal constant '3' is used", "markdown": "**\\[Line 8\\] Literal constant '3' is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-620226472", "unbViolId": "c135a10a-dfcc-34f6-910e-1c521a8b36b0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 9\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "fbf255a5-3b18-39dd-ac80-361c0476bc16" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 9\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "93392e65-8612-34a8-b2d6-9027013c7414" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 9\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "12138454-babf-35b3-8dbb-d690ae3b197d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 9\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "e9f9b9c6-fbbf-3df9-88ec-a57f17d99abb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 9\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "d6e6e250-01b7-3c58-a09b-9e530e6c8d5c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 9\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "a69d7a66-90d1-3da9-b937-fb5fcb340976" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "SECURITY-35", "level": "error", "message": { "text": "No value of command line should be trusted: argv", "markdown": "**\\[Line 9\\] No value of command line should be trusted: argv**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "fbce0178-39a4-3b47-877a-9d9a10406de5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "MRM-34", "level": "warning", "message": { "text": "Check the return value of new", "markdown": "**\\[Line 9\\] Check the return value of new**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "7ea1eda8-866b-3c33-aede-3a4ec9b0c0bc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "CERT_CPP-MEM52-a", "level": "error", "message": { "text": "Check the return value of new", "markdown": "**\\[Line 9\\] Check the return value of new**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "d02175f5-4b1e-37bc-a533-c9e266e0ba37" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 3, "endColumn": 4 } } } ] }, { "ruleId": "MISRA2012-DIR-4_12", "level": "error", "message": { "text": "'new' operator should not be used", "markdown": "**\\[Line 9\\] 'new' operator should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "ae6a222a-dc1a-30ae-9044-a5a26bc2bb13" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "MISRA2008-18_4_1", "level": "error", "message": { "text": "'new' operator should not be used", "markdown": "**\\[Line 9\\] 'new' operator should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "bf807de4-c512-3bbc-8934-d4f76470d567" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "MISRAC2012-RULE_21_3-a", "level": "error", "message": { "text": "'new' operator should not be used", "markdown": "**\\[Line 9\\] 'new' operator should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "2540a19c-6b4c-3c9d-9d9f-76972b13c8f8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "AUTOSAR-A18_5_2-a", "level": "error", "message": { "text": "'new' operator should not be used", "markdown": "**\\[Line 9\\] 'new' operator should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "cdda492d-9898-36d6-884f-31d40236ca67" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "JSF-206", "level": "error", "message": { "text": "'new' operator should not be used", "markdown": "**\\[Line 9\\] 'new' operator should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "de30d1d2-602c-3717-86fe-8328594866d5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "MISRA2012-RULE-21_3", "level": "error", "message": { "text": "'new' operator should not be used", "markdown": "**\\[Line 9\\] 'new' operator should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "98c036cc-c67d-3a18-b1e0-8d50c0d6c631" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "MISRA2004-20_4", "level": "warning", "message": { "text": "'new' operator should not be used", "markdown": "**\\[Line 9\\] 'new' operator should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "13f5deb4-bf7a-30e0-ad15-d2049a94fad8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_12-a", "level": "error", "message": { "text": "'new' operator should not be used", "markdown": "**\\[Line 9\\] 'new' operator should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "85edb105-aa75-30f7-bd4b-68e6149d0d2c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "SECURITY-35", "level": "error", "message": { "text": "No value of command line should be trusted: argv", "markdown": "**\\[Line 9\\] No value of command line should be trusted: argv**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "78642179-c83e-39ac-98c9-abe0d00b43e8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "MISRAC2012-RULE_21_7-a", "level": "error", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "bd45f2f4-90f2-3ad1-92dc-0fa0a39ab0b6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 21, "endColumn": 22 } } } ] }, { "ruleId": "CERT_CPP-ERR62-a", "level": "warning", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "756b4fd4-ee8b-34af-8626-e068abc8d1ec" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 21, "endColumn": 22 } } } ] }, { "ruleId": "MISRA2008-18_0_2", "level": "error", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "12550245-e5a2-344f-b323-282c6cdf4120" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 21, "endColumn": 22 } } } ] }, { "ruleId": "CERT_C-ERR34-a", "level": "warning", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "edd4dba1-bfe2-38b0-aa56-1bc92cfcb4d8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 21, "endColumn": 22 } } } ] }, { "ruleId": "MISRA2004-20_10", "level": "warning", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "a1005115-af47-351e-836d-7a2b663d66ee" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 21, "endColumn": 22 } } } ] }, { "ruleId": "CERT_C-MSC24-a", "level": "warning", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "59b38f3b-3578-3229-8ee3-09db5f1ed823" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 21, "endColumn": 22 } } } ] }, { "ruleId": "CERT_C-ERR07-a", "level": "error", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "4f9122c4-2818-3d64-bb61-1cf90e0d9615" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 21, "endColumn": 22 } } } ] }, { "ruleId": "AUTOSAR-A18_0_2-a", "level": "error", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "b3267f86-4850-30e0-978d-c3d6cd03477d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 21, "endColumn": 22 } } } ] }, { "ruleId": "MISRA2012-RULE-21_7", "level": "error", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "8be31c23-23e1-3626-8810-79458e619eec" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 21, "endColumn": 22 } } } ] }, { "ruleId": "JSF-023", "level": "error", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "c0e8365f-0a70-31cd-9fc6-eb206e50ee94" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 21, "endColumn": 22 } } } ] }, { "ruleId": "SECURITY-35", "level": "error", "message": { "text": "No value of command line should be trusted: argv", "markdown": "**\\[Line 9\\] No value of command line should be trusted: argv**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "b6a7298a-7560-3a09-95d4-e97b6e702de3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 21, "endColumn": 22 } } } ] }, { "ruleId": "SECURITY-35", "level": "error", "message": { "text": "No value of command line should be trusted: argv", "markdown": "**\\[Line 9\\] No value of command line should be trusted: argv**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "e0133397-3318-3317-ae36-e555afc7a428" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 26, "endColumn": 27 } } } ] }, { "ruleId": "MISRAC2012-RULE_21_7-a", "level": "error", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "8eeea4a1-0877-34be-9eba-af13f56f9059" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "CERT_CPP-ERR62-a", "level": "warning", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "15b3e40f-7a56-3041-93bf-7d505783bf5d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "MISRA2008-18_0_2", "level": "error", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "36cd799d-1300-3dd8-8276-9deca7c3d015" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "CERT_C-ERR34-a", "level": "warning", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "42f75fe6-a49b-31da-a99e-685a7f426170" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "MISRA2004-20_10", "level": "warning", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "68116ba9-a808-3ec8-8ae1-95c06890645d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "CERT_C-MSC24-a", "level": "warning", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "c57dc2a7-6822-396b-90c4-d65182d9f21f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "CERT_C-ERR07-a", "level": "error", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "e2844691-dda0-3a86-94d6-698c97cfce22" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "AUTOSAR-A18_0_2-a", "level": "error", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "d08161d7-3b9c-3d2e-8913-ef8008efe427" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "MISRA2012-RULE-21_7", "level": "error", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "c0cf45a2-2c0e-3392-bbcd-02787d3b5b6e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "JSF-023", "level": "error", "message": { "text": "Do not use the 'atoi' function", "markdown": "**\\[Line 9\\] Do not use the 'atoi' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "afad7349-26e2-3bb2-a491-d4bb9bc116da" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "SECURITY-35", "level": "error", "message": { "text": "No value of command line should be trusted: argv", "markdown": "**\\[Line 9\\] No value of command line should be trusted: argv**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "44025147-efb9-3681-bd4a-df54d06f2552" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "SECURITY-35", "level": "error", "message": { "text": "No value of command line should be trusted: argv", "markdown": "**\\[Line 9\\] No value of command line should be trusted: argv**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "bb1cc185-0c30-3b81-bb39-9ec015113074" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 41, "endColumn": 42 } } } ] }, { "ruleId": "JSF-151", "level": "warning", "message": { "text": "Literal constant '2' is used", "markdown": "**\\[Line 9\\] Literal constant '2' is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "83d8785f-e355-3c8e-987b-6b3b6266d8d9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 46, "endColumn": 47 } } } ] }, { "ruleId": "CODSTA-26", "level": "warning", "message": { "text": "Literal constant '2' is used", "markdown": "**\\[Line 9\\] Literal constant '2' is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "b721e76e-3c2a-3956-85de-d34841415a1c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 46, "endColumn": 47 } } } ] }, { "ruleId": "AUTOSAR-A5_1_1-a", "level": "error", "message": { "text": "Literal constant '2' is used", "markdown": "**\\[Line 9\\] Literal constant '2' is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "0b68b026-96a8-3a94-8fcf-e42f806ac2b9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 46, "endColumn": 47 } } } ] }, { "ruleId": "HICPP-5_1_1-a", "level": "warning", "message": { "text": "Literal constant '2' is used", "markdown": "**\\[Line 9\\] Literal constant '2' is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "212456074", "unbViolId": "96c1d6a8-3fb6-3ebf-bb1f-5f34bc7060ee" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 46, "endColumn": 47 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 10\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "404", "unbViolId": "2fa5687e-5905-3894-91cf-0ee986b10a69" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 10\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "404", "unbViolId": "8913917d-86e0-3478-b807-dbb558b6710e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 10\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "404", "unbViolId": "a194690b-952d-3187-ba42-7deddf3e672f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 11\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1178067846", "unbViolId": "71b8d80a-2b9f-3ee3-8d35-65a2b454f56a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 11\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1178067846", "unbViolId": "d20156a3-1b6c-38b0-8fd0-04f7f6620c94" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 11\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1178067846", "unbViolId": "d81d14e0-b129-3051-8514-a0463df50e0b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "AUTOSAR-A5_3_2-a", "level": "error", "message": { "text": "\"point\" may possibly be null", "markdown": "**\\[Line 11\\] \"point\" may possibly be null**  \n  \n**Source of null value**  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming false\\)_  \n**Null pointer dereferencing point**&nbsp;  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "1178067846", "unbViolId": "753a48fe-84c1-3c2d-a9f9-816023fc8560" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "Violation Cause - Source of null value  *** Null value carrier: point" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming false)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "Violation Point - Null pointer dereferencing point  *** Null value carrier: point" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "AUTOSAR-M0_3_1-f", "level": "error", "message": { "text": "\"point\" may possibly be null", "markdown": "**\\[Line 11\\] \"point\" may possibly be null**  \n  \n**Source of null value**  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming false\\)_  \n**Null pointer dereferencing point**&nbsp;  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "1178067846", "unbViolId": "9a3cdf58-4eaf-3285-841c-e68db76ec58c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "Violation Cause - Source of null value  *** Null value carrier: point" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming false)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "Violation Point - Null pointer dereferencing point  *** Null value carrier: point" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "BD-PB-NP", "level": "error", "message": { "text": "\"point\" may possibly be null", "markdown": "**\\[Line 11\\] \"point\" may possibly be null**  \n  \n**Source of null value**  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming false\\)_  \n**Null pointer dereferencing point**&nbsp;  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "1178067846", "unbViolId": "490531e2-e1ec-3270-a7b3-cca66b21f1fa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "Violation Cause - Source of null value  *** Null value carrier: point" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming false)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "Violation Point - Null pointer dereferencing point  *** Null value carrier: point" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CERT_C-EXP34-a", "level": "error", "message": { "text": "\"point\" may possibly be null", "markdown": "**\\[Line 11\\] \"point\" may possibly be null**  \n  \n**Source of null value**  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming false\\)_  \n**Null pointer dereferencing point**&nbsp;  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "1178067846", "unbViolId": "16a957f1-c4b2-33e4-b0c4-2d32f24a88e8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "Violation Cause - Source of null value  *** Null value carrier: point" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming false)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "Violation Point - Null pointer dereferencing point  *** Null value carrier: point" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CERT_C-MSC19-b", "level": "warning", "message": { "text": "\"point\" may possibly be null", "markdown": "**\\[Line 11\\] \"point\" may possibly be null**  \n  \n**Source of null value**  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming false\\)_  \n**Null pointer dereferencing point**&nbsp;  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "1178067846", "unbViolId": "ebcef247-87f4-370c-9aa7-21e0c4005600" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "Violation Cause - Source of null value  *** Null value carrier: point" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming false)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "Violation Point - Null pointer dereferencing point  *** Null value carrier: point" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CERT_CPP-STR51-a", "level": "error", "message": { "text": "\"point\" may possibly be null", "markdown": "**\\[Line 11\\] \"point\" may possibly be null**  \n  \n**Source of null value**  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming false\\)_  \n**Null pointer dereferencing point**&nbsp;  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "1178067846", "unbViolId": "e61ac9eb-61da-39bd-9cea-1ead8fb3e4bd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "Violation Cause - Source of null value  *** Null value carrier: point" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming false)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "Violation Point - Null pointer dereferencing point  *** Null value carrier: point" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "CWE-476-a", "level": "error", "message": { "text": "\"point\" may possibly be null", "markdown": "**\\[Line 11\\] \"point\" may possibly be null**  \n  \n**Source of null value**  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming false\\)_  \n**Null pointer dereferencing point**&nbsp;  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "1178067846", "unbViolId": "1878020b-1746-3cca-b215-5337e05307b3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "Violation Cause - Source of null value  *** Null value carrier: point" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming false)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "Violation Point - Null pointer dereferencing point  *** Null value carrier: point" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "HICPP-5_2_1-c", "level": "error", "message": { "text": "\"point\" may possibly be null", "markdown": "**\\[Line 11\\] \"point\" may possibly be null**  \n  \n**Source of null value**  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming false\\)_  \n**Null pointer dereferencing point**&nbsp;  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "1178067846", "unbViolId": "7fc0c547-cd71-31dc-bded-009f7600e40f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "Violation Cause - Source of null value  *** Null value carrier: point" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming false)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "Violation Point - Null pointer dereferencing point  *** Null value carrier: point" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "MISRA2008-0_3_1_b", "level": "note", "message": { "text": "\"point\" may possibly be null", "markdown": "**\\[Line 11\\] \"point\" may possibly be null**  \n  \n**Source of null value**  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming false\\)_  \n**Null pointer dereferencing point**&nbsp;  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "1178067846", "unbViolId": "fd7f6e6e-512e-3fa3-8d36-47c0f58951f1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "Violation Cause - Source of null value  *** Null value carrier: point" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming false)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "Violation Point - Null pointer dereferencing point  *** Null value carrier: point" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "MISRA2012-DIR-4_1_b", "level": "error", "message": { "text": "\"point\" may possibly be null", "markdown": "**\\[Line 11\\] \"point\" may possibly be null**  \n  \n**Source of null value**  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming false\\)_  \n**Null pointer dereferencing point**&nbsp;  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "1178067846", "unbViolId": "b80d04f8-14fc-32ce-8702-963ed7e07e83" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "Violation Cause - Source of null value  *** Null value carrier: point" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming false)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "Violation Point - Null pointer dereferencing point  *** Null value carrier: point" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "MISRAC2012-DIR_4_1-b", "level": "error", "message": { "text": "\"point\" may possibly be null", "markdown": "**\\[Line 11\\] \"point\" may possibly be null**  \n  \n**Source of null value**  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming false\\)_  \n**Null pointer dereferencing point**&nbsp;  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Null value carrier: point_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "1178067846", "unbViolId": "aad3496b-630e-3e9f-982e-0f83553235b1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "Violation Cause - Source of null value  *** Null value carrier: point" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming false)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "Violation Point - Null pointer dereferencing point  *** Null value carrier: point" } }, "nestingLevel": 0 } ] } ] } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 12\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "0", "unbViolId": "1ec131c7-22f1-3f50-a9a3-6576d4111eda" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 12\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "0", "unbViolId": "a2214c53-f164-36d2-bc3a-768de4b9f37f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 12\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "0", "unbViolId": "8f66c7a2-0cda-355d-a94e-de19125cefd1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 13\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1599597842", "unbViolId": "8a193bab-df21-3079-9ab5-091b5159a78b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 13\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1599597842", "unbViolId": "61f7e806-2876-3cd3-ae2b-4bb4693c0cee" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 13\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1599597842", "unbViolId": "8d5c558b-af81-356c-8a18-84fad0afff72" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-25_b", "level": "warning", "message": { "text": "'return' statement should be used with parenthesis", "markdown": "**\\[Line 13\\] 'return' statement should be used with parenthesis**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1599597842", "unbViolId": "69c743e1-4f8e-3e9d-961d-de5bd3e0903f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "COMMENT-02", "level": "warning", "message": { "text": "Add comment containing the copyright information at the begin of file 'Point.hpp'", "markdown": "**\\[Line 1\\] Add comment containing the copyright information at the begin of file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-573060881", "unbViolId": "5f8206e4-650f-3a64-b62f-e49d0c36646d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-133_b", "level": "warning", "message": { "text": "Add comment containing the copyright information at the begin of file 'Point.hpp'", "markdown": "**\\[Line 1\\] Add comment containing the copyright information at the begin of file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-573060881", "unbViolId": "46e1ec91-9f84-32bc-8ece-3753c94b8071" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-03", "level": "warning", "message": { "text": "Add comment containing the information on the file at the begin of file 'Point.hpp'", "markdown": "**\\[Line 1\\] Add comment containing the information on the file at the begin of file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-573060881", "unbViolId": "1d3e5cf9-0149-3e77-aed6-d81e46792ae2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-133_a", "level": "warning", "message": { "text": "Add comment containing the information on the file at the begin of file 'Point.hpp'", "markdown": "**\\[Line 1\\] Add comment containing the information on the file at the begin of file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-573060881", "unbViolId": "6ac34c4b-5ae7-37fb-a3a0-052041f8d9e2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "METRICS-31", "level": "warning", "message": { "text": "The assertion density is lower than two assertions per function", "markdown": "**\\[Line 1\\] The assertion density is lower than two assertions per function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-573060881", "unbViolId": "755222f4-23a9-3ce6-ade7-4e80c13218c2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "NAMING-03", "level": "warning", "message": { "text": "The filename 'Point.hpp' should be in lowercase", "markdown": "**\\[Line 1\\] The filename 'Point\\.hpp' should be in lowercase**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-573060881", "unbViolId": "737bef1f-6c28-38df-a9ee-aea80b245e0e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "NAMING-37", "level": "warning", "message": { "text": "Header file 'Point.hpp' should have the file name extension \".hh\"", "markdown": "**\\[Line 1\\] Header file 'Point\\.hpp' should have the file name extension \"\\.hh\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-573060881", "unbViolId": "4e5daf06-f9ae-3df5-9d15-99383afdca1f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-053", "level": "warning", "message": { "text": "Header file 'Point.hpp' should have the file name extension \".h\"", "markdown": "**\\[Line 1\\] Header file 'Point\\.hpp' should have the file name extension \"\\.h\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-573060881", "unbViolId": "bf1dca9f-eac0-36fc-a93b-2fb0fb625e08" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "NAMING-41", "level": "warning", "message": { "text": "Header file 'Point.hpp' should have the file name extension \".h\"", "markdown": "**\\[Line 1\\] Header file 'Point\\.hpp' should have the file name extension \"\\.h\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-573060881", "unbViolId": "a07ef309-6220-3cc1-aa2d-cfd8f32320e6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "NAMING-43", "level": "warning", "message": { "text": "'Point.hpp' filename extension does not adhere to naming conventions", "markdown": "**\\[Line 1\\] 'Point\\.hpp' filename extension does not adhere to naming conventions**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-573060881", "unbViolId": "59ceee3b-07aa-3d6a-9635-910aed0a8907" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PFO-07", "level": "warning", "message": { "text": "POINT_HPP macro name should appear as first #ifndef or #if preprocessor directive", "markdown": "**\\[Line 1\\] POINT\\_HPP macro name should appear as first \\#ifndef or \\#if preprocessor directive**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-573060881", "unbViolId": "4aa6c163-1e03-3e15-b8cc-f1e3305b2867" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "NAMING-39", "level": "warning", "message": { "text": "File 'Point.hpp'  should have the \".icc\" file name extension", "markdown": "**\\[Line 1\\] File 'Point\\.hpp'  should have the \"\\.icc\" file name extension**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-573060881", "unbViolId": "309f8e03-5a50-36ed-9bb6-353db21074eb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-02", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 4\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "793a9ad2-c5a1-3798-a55b-9615ad366bb2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-34", "level": "warning", "message": { "text": "Opening '{' and closing '}' should be in the same column", "markdown": "**\\[Line 4\\] Opening '\\{' and closing '\\}' should be in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "c8bc5fde-7845-3c0a-b65d-dc9ea7891a32" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier 'Point' differs only by case from identifier 'point' declared in file 'NullPointer.cpp'", "markdown": "**\\[Line 4\\] The identifier 'Point' differs only by case from identifier 'point' declared in file 'NullPointer\\.cpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "a9c73d8a-8545-386c-96e3-80ed961e87f4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier 'Point' differs only by case from identifier 'point' declared in file 'NullPointer.cpp'", "markdown": "**\\[Line 4\\] The identifier 'Point' differs only by case from identifier 'point' declared in file 'NullPointer\\.cpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "f0b2a06a-146a-3250-852c-d63069b52318" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-098", "level": "warning", "message": { "text": "Do not declare the 'Point' type in the global namespace", "markdown": "**\\[Line 4\\] Do not declare the 'Point' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "9675bbb7-a67c-3a78-b61b-fe0a1ffb8042" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-M7_3_1-a", "level": "error", "message": { "text": "Do not declare the 'Point' type in the global namespace", "markdown": "**\\[Line 4\\] Do not declare the 'Point' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "7d63782d-623d-3c37-a49e-ee52079f13e8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-CPP-36", "level": "warning", "message": { "text": "Do not declare the 'Point' type in the global namespace", "markdown": "**\\[Line 4\\] Do not declare the 'Point' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "3d074216-0381-3aee-ae88-0679804666de" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2008-7_3_1", "level": "error", "message": { "text": "Do not declare the 'Point' type in the global namespace", "markdown": "**\\[Line 4\\] Do not declare the 'Point' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "751a0022-ac58-3e7b-a7cd-e9dd8b9f46bc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The declaration of the 'Point' type should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 4\\] The declaration of the 'Point' type should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "96bc9509-186d-306d-8048-7e45eac31c58" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The declaration of the 'Point' type should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 4\\] The declaration of the 'Point' type should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "cd66ae82-7c74-38e9-9dc1-bd601ead1aa9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-057_a", "level": "warning", "message": { "text": "Public section must be before protected and private sections", "markdown": "**\\[Line 4\\] Public section must be before protected and private sections**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "a241a10a-472f-3486-9fe8-a3fdf9194421" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-CPP-46", "level": "warning", "message": { "text": "Public section must be before protected and private sections", "markdown": "**\\[Line 4\\] Public section must be before protected and private sections**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "10983b64-8b24-3b3f-b607-1fed790933c1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A12_4_2-a", "level": "warning", "message": { "text": "Class 'Point' should be final", "markdown": "**\\[Line 4\\] Class 'Point' should be final**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "8bbf08f1-29f2-38f8-8913-1690382db5cd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-MCPP-23", "level": "warning", "message": { "text": "Class 'Point' should be final", "markdown": "**\\[Line 4\\] Class 'Point' should be final**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "ab8a169b-00f7-38e0-b89c-86b210fd2683" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare default constructor in 'Point'", "markdown": "**\\[Line 4\\] Explicitly declare default constructor in 'Point'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "63c976b3-f9d4-315b-b776-fe2633d7dc65" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare destructor in 'Point'", "markdown": "**\\[Line 4\\] Explicitly declare destructor in 'Point'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "e2958401-93d6-3299-b787-4bec2de2ef89" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare copy assignment operator in 'Point'", "markdown": "**\\[Line 4\\] Explicitly declare copy assignment operator in 'Point'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "592f8d8c-0b36-3033-b40f-fbdcafac69eb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare move assignment operator in 'Point'", "markdown": "**\\[Line 4\\] Explicitly declare move assignment operator in 'Point'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "17439364-ae03-3a7f-86e4-6ba676fa97a3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare copy constructor in 'Point'", "markdown": "**\\[Line 4\\] Explicitly declare copy constructor in 'Point'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "e752eda4-423d-36c1-811a-b4ab301f10b4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare move constructor in 'Point'", "markdown": "**\\[Line 4\\] Explicitly declare move constructor in 'Point'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "b77befc1-2864-3e88-8a5a-ffd2dd05b4f1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MRM-04", "level": "warning", "message": { "text": "Class 'Point' missing assignment operator or special comment", "markdown": "**\\[Line 4\\] Class 'Point' missing assignment operator or special comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "360d0037-7eeb-3323-913e-c38a837001da" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MRM-05", "level": "warning", "message": { "text": "Class 'Point' missing copy constructor or special comment", "markdown": "**\\[Line 4\\] Class 'Point' missing copy constructor or special comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "d315d818-c29f-350a-9d1d-34e0cfa09f4a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MRM-47", "level": "warning", "message": { "text": "Class 'Point' missing assignment operator or special comment", "markdown": "**\\[Line 4\\] Class 'Point' missing assignment operator or special comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "6ea190aa-4df1-3928-9b09-add59fbb6a3d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MRM-48", "level": "warning", "message": { "text": "Class 'Point' missing copy constructor or special comment", "markdown": "**\\[Line 4\\] Class 'Point' missing copy constructor or special comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "f7a12b7b-31c0-302b-9381-66f5f96fa040" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-HN-19", "level": "warning", "message": { "text": "The 'Point' identifier should have the 'C' prefix", "markdown": "**\\[Line 4\\] The 'Point' identifier should have the 'C' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "b12a140c-84b9-382a-90d0-b93ad85e29f4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2012-RULE-5_7_a", "level": "error", "message": { "text": "The type name 'Point' is not a unique identifier in the testing scope", "markdown": "**\\[Line 4\\] The type name 'Point' is not a unique identifier in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "0ca3e4a8-9f0a-3a8d-bc13-78f56a9a1341" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRAC2012-RULE_5_7-a", "level": "error", "message": { "text": "The type name 'Point' is not a unique identifier in the testing scope", "markdown": "**\\[Line 4\\] The type name 'Point' is not a unique identifier in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "08c6fc8c-78d9-32fc-b396-a97f25f6c2a1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier 'Point' differs only by case from identifier 'POINT' declared in file 'windef.h'", "markdown": "**\\[Line 4\\] The identifier 'Point' differs only by case from identifier 'POINT' declared in file 'windef\\.h'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "0bd057fe-f1fb-3812-84d2-ad9825db48c4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier 'Point' differs only by case from identifier 'POINT' declared in file 'windef.h'", "markdown": "**\\[Line 4\\] The identifier 'Point' differs only by case from identifier 'POINT' declared in file 'windef\\.h'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "fc21ca7f-87e5-37cb-89c7-b31d27a65ae3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier 'Point' differs only by case from identifier 'point' declared in file 'Shapes.hpp'", "markdown": "**\\[Line 4\\] The identifier 'Point' differs only by case from identifier 'point' declared in file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "090083e5-f3dc-3d25-9328-6038696c14c9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier 'Point' differs only by case from identifier 'point' declared in file 'Shapes.hpp'", "markdown": "**\\[Line 4\\] The identifier 'Point' differs only by case from identifier 'point' declared in file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "90ba9b96-b6db-37fa-8b87-371017ace130" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier 'Point' differs only by case from identifier 'point' declared in file 'Point.hpp'", "markdown": "**\\[Line 4\\] The identifier 'Point' differs only by case from identifier 'point' declared in file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "19e4aeaf-fdde-3ffe-ba63-56ec3102eb6f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier 'Point' differs only by case from identifier 'point' declared in file 'Point.hpp'", "markdown": "**\\[Line 4\\] The identifier 'Point' differs only by case from identifier 'point' declared in file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-2055333085", "unbViolId": "39a59443-9811-3549-bad3-f34a7308d470" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "e8187d81-7f3f-3152-bae9-3ba45b3c8bbc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "6472058d-6040-3bd9-b5c5-689fc732d2ac" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "CODSTA-223", "level": "warning", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 5\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "ede79d15-d9c0-38b1-8b8a-0f6923f51a2e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A3_9_1-b", "level": "error", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 5\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "e9059f56-8533-38a3-80be-1470e4bf2494" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "HICPP-7_1_6-b", "level": "warning", "message": { "text": "Do not use the 'int' standard integer type", "markdown": "**\\[Line 5\\] Do not use the 'int' standard integer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "c13e3958-a979-3f48-82a0-b19d27a6daec" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "1033ff3a-c9fc-318c-9972-98f7bdf86209" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "872c0da1-c640-33cd-9ed5-8f0ff419dde0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "43f51a2d-bec4-3001-a121-f70755602dc2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "d6425426-54a6-3ade-9cd7-4a7bd8910f20" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 5\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "18e9d2e5-bb64-3f2e-9805-d3edc6a6fa55" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The '_x' member variable should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 5\\] The '\\_x' member variable should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "99e21cd9-b0e8-325e-80c7-49c463263278" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The '_x' member variable should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 5\\] The '\\_x' member variable should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "a7676f92-f9b7-333e-96ee-d00791a8808a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "PORT-13", "level": "warning", "message": { "text": "'_x' shall be declared as unsigned int or signed int", "markdown": "**\\[Line 5\\] '\\_x' shall be declared as unsigned int or signed int**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "347a9a96-2aa3-3be8-a2b3-46f86fd9bba3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-07", "level": "warning", "message": { "text": "Member variable '_x' shall begin with a lowercase letter", "markdown": "**\\[Line 5\\] Member variable '\\_x' shall begin with a lowercase letter**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "305d8ea9-6664-3113-8d4b-0f3944cf6c2a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-14", "level": "warning", "message": { "text": "Naming convention not followed: _x", "markdown": "**\\[Line 5\\] Naming convention not followed: \\_x**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "79e652c2-d5ca-3604-90ee-ff199880de35" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-19", "level": "warning", "message": { "text": "Naming convention not followed: _x", "markdown": "**\\[Line 5\\] Naming convention not followed: \\_x**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "7f09afab-4ab7-376f-a38a-70be9e87c93c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-33", "level": "warning", "message": { "text": "Using underscore at the beginning of the name '_x' is not allowed", "markdown": "**\\[Line 5\\] Using underscore at the beginning of the name '\\_x' is not allowed**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "c141132e-c85a-331e-b7d5-b623634439d4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-047", "level": "warning", "message": { "text": "Using underscore at the beginning of the name '_x' is not allowed", "markdown": "**\\[Line 5\\] Using underscore at the beginning of the name '\\_x' is not allowed**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "e188b2f6-07ca-3fab-ab7a-cc2280f915f3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-HN-22", "level": "warning", "message": { "text": "The '_x' identifier should have the 'i' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 5\\] The '\\_x' identifier should have the 'i' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "6173ee3a-43ba-3436-bafc-1ab267b8ba88" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-HN-29", "level": "warning", "message": { "text": "The '_x' identifier should have the 'm_' prefix", "markdown": "**\\[Line 5\\] The '\\_x' identifier should have the 'm\\_' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "7d939319-ca93-387f-a157-09094e566ea3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-HN-30", "level": "warning", "message": { "text": "The '_x' identifier should have the 'n' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 5\\] The '\\_x' identifier should have the 'n' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "ee9ab9af-838a-3bca-b5a7-19dcb8e59ffe" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-HN-43", "level": "warning", "message": { "text": "The '_x' identifier should have the 'i' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 5\\] The '\\_x' identifier should have the 'i' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "3618e9e3-58c1-308b-8565-48986f81d47a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier '_x' differs only by presence\/absence of the underscore character from identifier 'x' declared in file 'Point.hpp'", "markdown": "**\\[Line 5\\] The identifier '\\_x' differs only by presence\/absence of the underscore character from identifier 'x' declared in file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "bbc2c4dd-131b-3e66-ad0e-5b8923b721ef" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier '_x' differs only by presence\/absence of the underscore character from identifier 'x' declared in file 'Point.hpp'", "markdown": "**\\[Line 5\\] The identifier '\\_x' differs only by presence\/absence of the underscore character from identifier 'x' declared in file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "ddfa9666-6ed9-38f5-83d6-db97a7e36c0d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier '_y' differs only by presence\/absence of the underscore character from identifier 'y' declared in file 'Point.hpp'", "markdown": "**\\[Line 5\\] The identifier '\\_y' differs only by presence\/absence of the underscore character from identifier 'y' declared in file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "ec14bf8a-3033-3d68-a2b0-68d7914ff946" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier '_y' differs only by presence\/absence of the underscore character from identifier 'y' declared in file 'Point.hpp'", "markdown": "**\\[Line 5\\] The identifier '\\_y' differs only by presence\/absence of the underscore character from identifier 'y' declared in file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "b93ace15-b8f4-34d7-8bbb-9f1cbca44396" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The '_y' member variable should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 5\\] The '\\_y' member variable should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "3dea4560-e4b5-3a4d-9b3d-2dfd521b7aae" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The '_y' member variable should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 5\\] The '\\_y' member variable should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "8648dcd4-df25-3d25-988b-edb248f5f890" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "JSF-152", "level": "error", "message": { "text": "Declare variable '_y' in a separate line", "markdown": "**\\[Line 5\\] Declare variable '\\_y' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "9941703a-3133-38c6-87d9-10c0290acc44" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "AUTOSAR-A7_1_7-b", "level": "error", "message": { "text": "Declare variable '_y' in a separate line", "markdown": "**\\[Line 5\\] Declare variable '\\_y' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "6fe0cd97-c30a-3069-acab-39c8f9cbe2ad" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "HICPP-7_1_1-a", "level": "warning", "message": { "text": "Declare variable '_y' in a separate line", "markdown": "**\\[Line 5\\] Declare variable '\\_y' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "21bc867c-5156-3d93-9bdf-8e682e4fc18f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "FORMAT-29", "level": "warning", "message": { "text": "Declare variable '_y' in a separate line", "markdown": "**\\[Line 5\\] Declare variable '\\_y' in a separate line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "1b8e7754-5d95-3a7e-abe3-97ad28db05ea" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "AUTOSAR-A7_1_7-c", "level": "error", "message": { "text": "Declare variable '_y' in a separate declaration statement", "markdown": "**\\[Line 5\\] Declare variable '\\_y' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "0b1a93aa-fb0e-3410-b330-6871cbbd82f1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "FORMAT-33", "level": "warning", "message": { "text": "Declare variable '_y' in a separate declaration statement", "markdown": "**\\[Line 5\\] Declare variable '\\_y' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "737071c4-5659-3e90-9f30-f5802b3cd354" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "MISRA2008-8_0_1", "level": "error", "message": { "text": "Declare variable '_y' in a separate declaration statement", "markdown": "**\\[Line 5\\] Declare variable '\\_y' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "8c3b8374-9e2e-3315-97cf-1322a60e944f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "HICPP-7_1_1-b", "level": "warning", "message": { "text": "Declare variable '_y' in a separate declaration statement", "markdown": "**\\[Line 5\\] Declare variable '\\_y' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "f98cff5a-2b48-3685-aafe-aa6540bd4cdc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "AUTOSAR-M8_0_1-a", "level": "error", "message": { "text": "Declare variable '_y' in a separate declaration statement", "markdown": "**\\[Line 5\\] Declare variable '\\_y' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "ce1e9e76-216e-390c-acd0-ba07259f9727" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "CERT_C-DCL04-a", "level": "warning", "message": { "text": "Declare variable '_y' in a separate declaration statement", "markdown": "**\\[Line 5\\] Declare variable '\\_y' in a separate declaration statement**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "7b974e77-06f3-3970-8ed2-3bd00e1cf114" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "PORT-13", "level": "warning", "message": { "text": "'_y' shall be declared as unsigned int or signed int", "markdown": "**\\[Line 5\\] '\\_y' shall be declared as unsigned int or signed int**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "0429b55c-795e-307f-a197-866583940714" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "NAMING-07", "level": "warning", "message": { "text": "Member variable '_y' shall begin with a lowercase letter", "markdown": "**\\[Line 5\\] Member variable '\\_y' shall begin with a lowercase letter**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "ce5aebb4-a082-3cf2-8ba9-05284f9a224a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "NAMING-14", "level": "warning", "message": { "text": "Naming convention not followed: _y", "markdown": "**\\[Line 5\\] Naming convention not followed: \\_y**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "008de985-da9f-3e25-ba87-b3da9a09b639" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "NAMING-19", "level": "warning", "message": { "text": "Naming convention not followed: _y", "markdown": "**\\[Line 5\\] Naming convention not followed: \\_y**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "54ebff45-56d6-3df0-b7e0-93e6f60e700c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "NAMING-33", "level": "warning", "message": { "text": "Using underscore at the beginning of the name '_y' is not allowed", "markdown": "**\\[Line 5\\] Using underscore at the beginning of the name '\\_y' is not allowed**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "4efeff23-36ab-358d-919c-cacbcb5c3c68" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "JSF-047", "level": "warning", "message": { "text": "Using underscore at the beginning of the name '_y' is not allowed", "markdown": "**\\[Line 5\\] Using underscore at the beginning of the name '\\_y' is not allowed**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "b458624c-0203-3946-b788-3743f54485b4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "NAMING-HN-22", "level": "warning", "message": { "text": "The '_y' identifier should have the 'i' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 5\\] The '\\_y' identifier should have the 'i' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "c00c9b68-caac-3285-84fd-f095c77ce500" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "NAMING-HN-29", "level": "warning", "message": { "text": "The '_y' identifier should have the 'm_' prefix", "markdown": "**\\[Line 5\\] The '\\_y' identifier should have the 'm\\_' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "0d7db531-56e7-33a7-aa06-f9b6be1660db" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "NAMING-HN-30", "level": "warning", "message": { "text": "The '_y' identifier should have the 'n' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 5\\] The '\\_y' identifier should have the 'n' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "21f74801-e8ea-38f2-9a56-969b3ed6d43e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "NAMING-HN-43", "level": "warning", "message": { "text": "The '_y' identifier should have the 'i' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 5\\] The '\\_y' identifier should have the 'i' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-487498237", "unbViolId": "4640183a-5ec3-3c7e-8e8d-4a73232ab31d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 7\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "09b3ed89-b496-3f21-aba4-c13e30c3db25" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 7\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "3645d5a4-89f6-3f59-bfe6-4658ea59c3be" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 7\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "971c01af-85b2-38ad-8d7e-efd038f11a31" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-43", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 7\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "20e96992-1ce9-3548-b98f-00655013560d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_b", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 7\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "7c126a6f-0845-3e53-b86a-b46e6e687498" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "METRICS-19", "level": "warning", "message": { "text": "Percentage of comment lines vs. all method's lines is: 0", "markdown": "**\\[Line 7\\] Percentage of comment lines vs\\. all method's lines is: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "a7753de6-d864-34a1-912e-cbf18b28a498" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'Point' function is not preceded by a comment", "markdown": "**\\[Line 7\\] The definition of the 'Point' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "596b3a9d-ed26-3f16-942e-42cc883ce0d3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'Point' function is not preceded by a comment", "markdown": "**\\[Line 7\\] The definition of the 'Point' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "ab9c1236-f251-3969-8460-ca5687834198" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier 'Point' differs only by case from identifier 'POINT' declared in file 'windef.h'", "markdown": "**\\[Line 7\\] The identifier 'Point' differs only by case from identifier 'POINT' declared in file 'windef\\.h'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "ef4ed45c-68fe-3fba-8227-8970c29775ce" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier 'Point' differs only by case from identifier 'POINT' declared in file 'windef.h'", "markdown": "**\\[Line 7\\] The identifier 'Point' differs only by case from identifier 'POINT' declared in file 'windef\\.h'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "8b395409-611f-3f47-86d7-149ad30cafd9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier 'Point' differs only by case from identifier 'point' declared in file 'Point.hpp'", "markdown": "**\\[Line 7\\] The identifier 'Point' differs only by case from identifier 'point' declared in file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "53195aec-9a21-3935-a7bc-cbcedd78f0e5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier 'Point' differs only by case from identifier 'point' declared in file 'Point.hpp'", "markdown": "**\\[Line 7\\] The identifier 'Point' differs only by case from identifier 'point' declared in file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "240e00f7-5c04-3d92-b82c-7f0cce18197c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'Point' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 7\\] The 'Point' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "0aa01a07-5542-35a2-9c4e-9a084d58aab7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'Point' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 7\\] The 'Point' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "2f7707ab-583d-32a3-a077-2b7d4a90d6a8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'x' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 7\\] The 'x' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "866b0940-097c-31ff-a24f-b1a78dd18516" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'x' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 7\\] The 'x' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "56a8946d-4250-39d9-a760-8adc0416e503" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'y' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 7\\] The 'y' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "d9c8cb3c-e2a2-35c0-8cec-5e1ae8311692" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'y' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 7\\] The 'y' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "2a8f45e7-bfc3-38eb-bb6f-0cc88eefd3cf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "OPT-17", "level": "warning", "message": { "text": "Class 'Point' defines an inline constructor", "markdown": "**\\[Line 7\\] Class 'Point' defines an inline constructor**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "6cda4bab-8387-3418-99a3-8e5dfbfd0257" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A15_4_4-a", "level": "error", "message": { "text": "The 'Point' function should be declared 'noexcept'", "markdown": "**\\[Line 7\\] The 'Point' function should be declared 'noexcept'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "90fefb40-fb83-317f-be5e-a05a64bb1a06" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "CODSTA-MCPP-09", "level": "warning", "message": { "text": "The 'Point' function should be declared 'noexcept'", "markdown": "**\\[Line 7\\] The 'Point' function should be declared 'noexcept'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "3a25c9c6-8f31-3344-ac3b-4502f0dc8b89" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'Point' has Cyclomatic Complexity value: 1", "markdown": "**\\[Line 7\\] Function 'Point' has Cyclomatic Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "ff9067e6-5925-38f6-881c-8a3144dec2a4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'Point' has Essential Complexity value: 1", "markdown": "**\\[Line 7\\] Function 'Point' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "20a1f99c-4415-3be6-9a60-f96fb2bb85c8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2012-RULE-5_7_a", "level": "error", "message": { "text": "The 'Point' identifier is the same as the name of a type defined in the testing scope", "markdown": "**\\[Line 7\\] The 'Point' identifier is the same as the name of a type defined in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "8046f216-92e7-3593-8599-dd360d82058a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRAC2012-RULE_5_7-a", "level": "error", "message": { "text": "The 'Point' identifier is the same as the name of a type defined in the testing scope", "markdown": "**\\[Line 7\\] The 'Point' identifier is the same as the name of a type defined in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "e53de0f8-cd04-32ba-821c-b37da9952240" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 7\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "7e3959bc-87db-303c-8e4f-bb11a80e14d0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 7\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "c0c1288c-f556-3d94-8900-e5c44f22e963" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "CODSTA-223", "level": "warning", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 7\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "07c0b116-7ca6-335c-adf3-57705d893dfd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "AUTOSAR-A3_9_1-b", "level": "error", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 7\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "94f39e86-ec44-3680-b804-d0610f11a7a9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "HICPP-7_1_6-b", "level": "warning", "message": { "text": "Do not use the 'int' standard integer type", "markdown": "**\\[Line 7\\] Do not use the 'int' standard integer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "f33de2b8-aa7a-30be-99c8-520b0fcca2b2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 7\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "9ac13180-72fc-3356-b962-bd05fbc46471" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 7\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "81df56ba-34bd-371b-8de1-296e5f495d03" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 7\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "b4bf35dc-cfb5-3d91-883c-2f043506e4c3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 7\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "f6e39f96-c2fe-32c7-8d32-7f0fc37b5da3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 7\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "ae8a427d-d5a4-3631-82d0-21922cf31014" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 11, "endColumn": 12 } } } ] }, { "ruleId": "MISRA2008-2_10_1", "level": "error", "message": { "text": "Identifier name: 'x' differs only by presence\/absence of the underscore character from identifier name: '_x' declared in class", "markdown": "**\\[Line 7\\] Identifier name: 'x' differs only by presence\/absence of the underscore character from identifier name: '\\_x' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "62a2d97c-d675-3482-a116-a96555fd20a4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 15, "endColumn": 16 } } } ] }, { "ruleId": "HICPP-2_4_1-a", "level": "warning", "message": { "text": "Identifier name: 'x' differs only by presence\/absence of the underscore character from identifier name: '_x' declared in class", "markdown": "**\\[Line 7\\] Identifier name: 'x' differs only by presence\/absence of the underscore character from identifier name: '\\_x' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "b1ca2670-8c19-3c09-a506-4928fe2c6117" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 15, "endColumn": 16 } } } ] }, { "ruleId": "AUTOSAR-M2_10_1-a", "level": "error", "message": { "text": "Identifier name: 'x' differs only by presence\/absence of the underscore character from identifier name: '_x' declared in class", "markdown": "**\\[Line 7\\] Identifier name: 'x' differs only by presence\/absence of the underscore character from identifier name: '\\_x' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "93014195-5538-3ced-a2cd-8ee713252590" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 15, "endColumn": 16 } } } ] }, { "ruleId": "NAMING-47", "level": "warning", "message": { "text": "Identifier name: 'x' differs only by presence\/absence of the underscore character from identifier name: '_x' declared in class", "markdown": "**\\[Line 7\\] Identifier name: 'x' differs only by presence\/absence of the underscore character from identifier name: '\\_x' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "ca7592ad-b82b-34d6-8d60-8681b57c83b9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 15, "endColumn": 16 } } } ] }, { "ruleId": "PORT-13", "level": "warning", "message": { "text": "'x' shall be declared as unsigned int or signed int", "markdown": "**\\[Line 7\\] 'x' shall be declared as unsigned int or signed int**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "22ced47e-cbcb-35da-b436-23bd8de14448" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 15, "endColumn": 16 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier 'x' differs only by presence\/absence of the underscore character from identifier '_x' declared in file 'Point.hpp'", "markdown": "**\\[Line 7\\] The identifier 'x' differs only by presence\/absence of the underscore character from identifier '\\_x' declared in file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "6835de0a-2b18-38fa-9148-0d94121693a0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 15, "endColumn": 16 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier 'x' differs only by presence\/absence of the underscore character from identifier '_x' declared in file 'Point.hpp'", "markdown": "**\\[Line 7\\] The identifier 'x' differs only by presence\/absence of the underscore character from identifier '\\_x' declared in file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "a5242412-b5da-346b-afa9-1ee780bd69ba" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 15, "endColumn": 16 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 7\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "665197c7-bada-3e70-84b3-9f3d3906f4a8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 7\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "c67396c6-0452-372e-b6e6-789f0a545414" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "CODSTA-223", "level": "warning", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 7\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "7575f592-7bc1-3868-b1b1-fd4a16fb4817" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "AUTOSAR-A3_9_1-b", "level": "error", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 7\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "e337c1b2-7f7e-3d77-9ffc-86a8b1838e33" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "HICPP-7_1_6-b", "level": "warning", "message": { "text": "Do not use the 'int' standard integer type", "markdown": "**\\[Line 7\\] Do not use the 'int' standard integer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "4eb4bba8-7bb6-3d3b-a0c4-18fbdb30ca22" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 7\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "46be5260-edb9-3474-a6b8-201fb7da58f4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 7\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "89011c93-8d69-35ba-bbfc-3d6bb0810dd8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 7\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "840d7952-7005-3afc-8278-c5e159e8dd56" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 7\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "b90deeb1-0991-3992-b2ab-3a4304bda651" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 7\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "5d61e6b9-3166-3674-8280-2fec2f3ffe57" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "MISRA2008-2_10_1", "level": "error", "message": { "text": "Identifier name: 'y' differs only by presence\/absence of the underscore character from identifier name: '_y' declared in class", "markdown": "**\\[Line 7\\] Identifier name: 'y' differs only by presence\/absence of the underscore character from identifier name: '\\_y' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "b4bb7f0e-7948-39ff-be9b-1118b8141935" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 22, "endColumn": 23 } } } ] }, { "ruleId": "HICPP-2_4_1-a", "level": "warning", "message": { "text": "Identifier name: 'y' differs only by presence\/absence of the underscore character from identifier name: '_y' declared in class", "markdown": "**\\[Line 7\\] Identifier name: 'y' differs only by presence\/absence of the underscore character from identifier name: '\\_y' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "e2c01990-6b0e-3aea-a8ff-e2c23200168f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 22, "endColumn": 23 } } } ] }, { "ruleId": "AUTOSAR-M2_10_1-a", "level": "error", "message": { "text": "Identifier name: 'y' differs only by presence\/absence of the underscore character from identifier name: '_y' declared in class", "markdown": "**\\[Line 7\\] Identifier name: 'y' differs only by presence\/absence of the underscore character from identifier name: '\\_y' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "13a976e3-954e-37c3-b337-d74408c611dc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 22, "endColumn": 23 } } } ] }, { "ruleId": "NAMING-47", "level": "warning", "message": { "text": "Identifier name: 'y' differs only by presence\/absence of the underscore character from identifier name: '_y' declared in class", "markdown": "**\\[Line 7\\] Identifier name: 'y' differs only by presence\/absence of the underscore character from identifier name: '\\_y' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "c4501d0a-59fe-33fd-8a1e-af374023d600" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 22, "endColumn": 23 } } } ] }, { "ruleId": "PORT-13", "level": "warning", "message": { "text": "'y' shall be declared as unsigned int or signed int", "markdown": "**\\[Line 7\\] 'y' shall be declared as unsigned int or signed int**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "b28dc251-09b7-3327-a22a-e63d2eeb47cb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 22, "endColumn": 23 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier 'y' differs only by presence\/absence of the underscore character from identifier '_y' declared in file 'Point.hpp'", "markdown": "**\\[Line 7\\] The identifier 'y' differs only by presence\/absence of the underscore character from identifier '\\_y' declared in file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "732c8b19-5aa2-37ca-903f-7673d8074566" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 22, "endColumn": 23 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier 'y' differs only by presence\/absence of the underscore character from identifier '_y' declared in file 'Point.hpp'", "markdown": "**\\[Line 7\\] The identifier 'y' differs only by presence\/absence of the underscore character from identifier '\\_y' declared in file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "735b4a35-3885-3c43-8bb5-04a0c51236d0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 22, "endColumn": 23 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 7\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "a23b1b31-6f83-3d00-9b55-4f68d0330e84" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 41, "endColumn": 42 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 7\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "324b5d80-6195-3e77-9a61-b1beb1bc9e75" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 41, "endColumn": 42 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 7\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-33300074", "unbViolId": "dd17fe25-b012-3bed-968e-a99aaabd5787" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 41, "endColumn": 42 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'reflectAcrossX' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 8\\] The 'reflectAcrossX' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1965707959", "unbViolId": "f1a94ec1-5494-3794-8329-450119806775" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'reflectAcrossX' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 8\\] The 'reflectAcrossX' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1965707959", "unbViolId": "9990f0f7-be69-3a15-8869-e267d8f2e9fc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "AUTOSAR-A15_4_4-a", "level": "error", "message": { "text": "The 'reflectAcrossX' function should be declared 'noexcept'", "markdown": "**\\[Line 8\\] The 'reflectAcrossX' function should be declared 'noexcept'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1965707959", "unbViolId": "53f7ac8a-25ac-3f56-9259-d5a7eb3e0b9e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "CODSTA-MCPP-09", "level": "warning", "message": { "text": "The 'reflectAcrossX' function should be declared 'noexcept'", "markdown": "**\\[Line 8\\] The 'reflectAcrossX' function should be declared 'noexcept'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1965707959", "unbViolId": "2d343c87-4b32-35b8-b50f-5efd4fadfad0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "FORMAT-28", "level": "warning", "message": { "text": "Return type is not placed in line before function 'reflectAcrossX'", "markdown": "**\\[Line 8\\] Return type is not placed in line before function 'reflectAcrossX'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1965707959", "unbViolId": "e4b4d6eb-b5af-3b63-bb14-a206c81e3ead" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'reflectAcrossX' has Cyclomatic Complexity value: 1", "markdown": "**\\[Line 8\\] Function 'reflectAcrossX' has Cyclomatic Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1965707959", "unbViolId": "d00fdb9e-0be6-362b-834a-0b58aa415d65" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'reflectAcrossX' has Essential Complexity value: 1", "markdown": "**\\[Line 8\\] Function 'reflectAcrossX' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1965707959", "unbViolId": "660c84ee-d1df-310f-8735-5f23f5c3d12b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "NAMING-17", "level": "warning", "message": { "text": "Naming convention not followed: reflectAcrossX", "markdown": "**\\[Line 8\\] Naming convention not followed: reflectAcrossX**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1965707959", "unbViolId": "677e7cb4-2ae4-3a4a-ad16-ae99a4485f34" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'reflectAcrossX' function is not preceded by a comment", "markdown": "**\\[Line 8\\] The definition of the 'reflectAcrossX' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1965707959", "unbViolId": "c36852b2-efd3-3795-8c3c-82d0fd5a3336" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'reflectAcrossX' function is not preceded by a comment", "markdown": "**\\[Line 8\\] The definition of the 'reflectAcrossX' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1965707959", "unbViolId": "a80f7e5a-6c09-3722-b24c-1018ebd15136" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "JSF-051", "level": "warning", "message": { "text": "The name 'reflectAcrossX' should be composed only of lowercase letters", "markdown": "**\\[Line 8\\] The name 'reflectAcrossX' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1965707959", "unbViolId": "9aa5b9c5-8120-3cd7-9d1d-4dda86168c66" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "NAMING-44", "level": "warning", "message": { "text": "The name 'reflectAcrossX' should be composed only of lowercase letters", "markdown": "**\\[Line 8\\] The name 'reflectAcrossX' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1965707959", "unbViolId": "bdc92e3c-2a7d-3104-9826-d8d018ee5d88" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "METRICS-19", "level": "warning", "message": { "text": "Percentage of comment lines vs. all method's lines is: 0", "markdown": "**\\[Line 9\\] Percentage of comment lines vs\\. all method's lines is: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "30537851", "unbViolId": "76391dfb-423c-3a87-b208-5e5c200fadaa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "APSC_DV-002520-f", "level": "error", "message": { "text": "Evaluation of \"-this->_y\" may result in possible overflow\/underflow", "markdown": "**\\[Line 10\\] Evaluation of \"\\-this\\->\\_y\" may result in possible overflow\/underflow**  \n  \n**Point where value is defined by tainting function**  \nNullPointer.cpp&nbsp;(5)&nbsp;:&nbsp;int main\\(int argc, char\\* argv\\[\\]\\)&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: argv\\[\\]_  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming true\\)_  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;atoi\\(\\.\\.\\.\\)  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;Point\\(\\.\\.\\.\\)&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: atoi\\(\\.\\.\\.\\)_  \n        Point.hpp&nbsp;(7)&nbsp;:&nbsp;Point\\(int x, int y\\) : \\_x\\(x\\), \\_y\\(y\\) \\{\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: y_  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;point = new Point\\(atoi\\(argv\\[1\\]\\), atoi\\(argv\\[2\\]\\)\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: new Point\\->\\_y_  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: point\\->\\_y_  \n        **Point of possible overflow\/underflow**&nbsp;  \n        Point.hpp&nbsp;(10)&nbsp;:&nbsp;\\_y = \\-\\_y;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: this\\->\\_y_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "-796707555", "unbViolId": "8b33f0f6-abd9-39e8-ab99-768dd43734a9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where value is defined by tainting function  *** Tainted data: argv[]" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: atoi(...)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: y" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: new Point->_y" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: point->_y" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of possible overflow\/underflow  *** Tainted data: this->_y" } }, "nestingLevel": 1 } ] } ] } ] }, { "ruleId": "APSC_DV-002530-f", "level": "error", "message": { "text": "Evaluation of \"-this->_y\" may result in possible overflow\/underflow", "markdown": "**\\[Line 10\\] Evaluation of \"\\-this\\->\\_y\" may result in possible overflow\/underflow**  \n  \n**Point where value is defined by tainting function**  \nNullPointer.cpp&nbsp;(5)&nbsp;:&nbsp;int main\\(int argc, char\\* argv\\[\\]\\)&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: argv\\[\\]_  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming true\\)_  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;atoi\\(\\.\\.\\.\\)  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;Point\\(\\.\\.\\.\\)&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: atoi\\(\\.\\.\\.\\)_  \n        Point.hpp&nbsp;(7)&nbsp;:&nbsp;Point\\(int x, int y\\) : \\_x\\(x\\), \\_y\\(y\\) \\{\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: y_  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;point = new Point\\(atoi\\(argv\\[1\\]\\), atoi\\(argv\\[2\\]\\)\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: new Point\\->\\_y_  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: point\\->\\_y_  \n        **Point of possible overflow\/underflow**&nbsp;  \n        Point.hpp&nbsp;(10)&nbsp;:&nbsp;\\_y = \\-\\_y;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: this\\->\\_y_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "-796707555", "unbViolId": "41af47f1-29c8-3147-9a41-8996e4efd08b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where value is defined by tainting function  *** Tainted data: argv[]" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: atoi(...)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: y" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: new Point->_y" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: point->_y" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of possible overflow\/underflow  *** Tainted data: this->_y" } }, "nestingLevel": 1 } ] } ] } ] }, { "ruleId": "APSC_DV-002550-f", "level": "error", "message": { "text": "Evaluation of \"-this->_y\" may result in possible overflow\/underflow", "markdown": "**\\[Line 10\\] Evaluation of \"\\-this\\->\\_y\" may result in possible overflow\/underflow**  \n  \n**Point where value is defined by tainting function**  \nNullPointer.cpp&nbsp;(5)&nbsp;:&nbsp;int main\\(int argc, char\\* argv\\[\\]\\)&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: argv\\[\\]_  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming true\\)_  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;atoi\\(\\.\\.\\.\\)  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;Point\\(\\.\\.\\.\\)&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: atoi\\(\\.\\.\\.\\)_  \n        Point.hpp&nbsp;(7)&nbsp;:&nbsp;Point\\(int x, int y\\) : \\_x\\(x\\), \\_y\\(y\\) \\{\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: y_  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;point = new Point\\(atoi\\(argv\\[1\\]\\), atoi\\(argv\\[2\\]\\)\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: new Point\\->\\_y_  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: point\\->\\_y_  \n        **Point of possible overflow\/underflow**&nbsp;  \n        Point.hpp&nbsp;(10)&nbsp;:&nbsp;\\_y = \\-\\_y;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: this\\->\\_y_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "-796707555", "unbViolId": "aca74ba9-e24b-3aae-8b73-b0ed58d4a6ce" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where value is defined by tainting function  *** Tainted data: argv[]" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: atoi(...)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: y" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: new Point->_y" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: point->_y" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of possible overflow\/underflow  *** Tainted data: this->_y" } }, "nestingLevel": 1 } ] } ] } ] }, { "ruleId": "APSC_DV-002560-f", "level": "error", "message": { "text": "Evaluation of \"-this->_y\" may result in possible overflow\/underflow", "markdown": "**\\[Line 10\\] Evaluation of \"\\-this\\->\\_y\" may result in possible overflow\/underflow**  \n  \n**Point where value is defined by tainting function**  \nNullPointer.cpp&nbsp;(5)&nbsp;:&nbsp;int main\\(int argc, char\\* argv\\[\\]\\)&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: argv\\[\\]_  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming true\\)_  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;atoi\\(\\.\\.\\.\\)  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;Point\\(\\.\\.\\.\\)&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: atoi\\(\\.\\.\\.\\)_  \n        Point.hpp&nbsp;(7)&nbsp;:&nbsp;Point\\(int x, int y\\) : \\_x\\(x\\), \\_y\\(y\\) \\{\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: y_  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;point = new Point\\(atoi\\(argv\\[1\\]\\), atoi\\(argv\\[2\\]\\)\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: new Point\\->\\_y_  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: point\\->\\_y_  \n        **Point of possible overflow\/underflow**&nbsp;  \n        Point.hpp&nbsp;(10)&nbsp;:&nbsp;\\_y = \\-\\_y;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: this\\->\\_y_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "-796707555", "unbViolId": "a9f7490c-278e-34cf-8aaf-d9470e692b77" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where value is defined by tainting function  *** Tainted data: argv[]" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: atoi(...)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: y" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: new Point->_y" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: point->_y" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of possible overflow\/underflow  *** Tainted data: this->_y" } }, "nestingLevel": 1 } ] } ] } ] }, { "ruleId": "APSC_DV-002590-g", "level": "error", "message": { "text": "Evaluation of \"-this->_y\" may result in possible overflow\/underflow", "markdown": "**\\[Line 10\\] Evaluation of \"\\-this\\->\\_y\" may result in possible overflow\/underflow**  \n  \n**Point where value is defined by tainting function**  \nNullPointer.cpp&nbsp;(5)&nbsp;:&nbsp;int main\\(int argc, char\\* argv\\[\\]\\)&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: argv\\[\\]_  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming true\\)_  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;atoi\\(\\.\\.\\.\\)  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;Point\\(\\.\\.\\.\\)&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: atoi\\(\\.\\.\\.\\)_  \n        Point.hpp&nbsp;(7)&nbsp;:&nbsp;Point\\(int x, int y\\) : \\_x\\(x\\), \\_y\\(y\\) \\{\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: y_  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;point = new Point\\(atoi\\(argv\\[1\\]\\), atoi\\(argv\\[2\\]\\)\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: new Point\\->\\_y_  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: point\\->\\_y_  \n        **Point of possible overflow\/underflow**&nbsp;  \n        Point.hpp&nbsp;(10)&nbsp;:&nbsp;\\_y = \\-\\_y;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: this\\->\\_y_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "-796707555", "unbViolId": "8c1af8e9-7f1a-3133-adcc-d5458a770f51" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where value is defined by tainting function  *** Tainted data: argv[]" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: atoi(...)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: y" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: new Point->_y" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: point->_y" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of possible overflow\/underflow  *** Tainted data: this->_y" } }, "nestingLevel": 1 } ] } ] } ] }, { "ruleId": "CERT_C-INT04-a", "level": "error", "message": { "text": "Evaluation of \"-this->_y\" may result in possible overflow\/underflow", "markdown": "**\\[Line 10\\] Evaluation of \"\\-this\\->\\_y\" may result in possible overflow\/underflow**  \n  \n**Point where value is defined by tainting function**  \nNullPointer.cpp&nbsp;(5)&nbsp;:&nbsp;int main\\(int argc, char\\* argv\\[\\]\\)&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: argv\\[\\]_  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming true\\)_  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;atoi\\(\\.\\.\\.\\)  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;Point\\(\\.\\.\\.\\)&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: atoi\\(\\.\\.\\.\\)_  \n        Point.hpp&nbsp;(7)&nbsp;:&nbsp;Point\\(int x, int y\\) : \\_x\\(x\\), \\_y\\(y\\) \\{\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: y_  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;point = new Point\\(atoi\\(argv\\[1\\]\\), atoi\\(argv\\[2\\]\\)\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: new Point\\->\\_y_  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: point\\->\\_y_  \n        **Point of possible overflow\/underflow**&nbsp;  \n        Point.hpp&nbsp;(10)&nbsp;:&nbsp;\\_y = \\-\\_y;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: this\\->\\_y_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "-796707555", "unbViolId": "4bc43586-0372-3cd4-b72c-b8d0a5d32ad2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where value is defined by tainting function  *** Tainted data: argv[]" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: atoi(...)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: y" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: new Point->_y" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: point->_y" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of possible overflow\/underflow  *** Tainted data: this->_y" } }, "nestingLevel": 1 } ] } ] } ] }, { "ruleId": "CWE-20-b", "level": "error", "message": { "text": "Evaluation of \"-this->_y\" may result in possible overflow\/underflow", "markdown": "**\\[Line 10\\] Evaluation of \"\\-this\\->\\_y\" may result in possible overflow\/underflow**  \n  \n**Point where value is defined by tainting function**  \nNullPointer.cpp&nbsp;(5)&nbsp;:&nbsp;int main\\(int argc, char\\* argv\\[\\]\\)&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: argv\\[\\]_  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming true\\)_  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;atoi\\(\\.\\.\\.\\)  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;Point\\(\\.\\.\\.\\)&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: atoi\\(\\.\\.\\.\\)_  \n        Point.hpp&nbsp;(7)&nbsp;:&nbsp;Point\\(int x, int y\\) : \\_x\\(x\\), \\_y\\(y\\) \\{\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: y_  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;point = new Point\\(atoi\\(argv\\[1\\]\\), atoi\\(argv\\[2\\]\\)\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: new Point\\->\\_y_  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: point\\->\\_y_  \n        **Point of possible overflow\/underflow**&nbsp;  \n        Point.hpp&nbsp;(10)&nbsp;:&nbsp;\\_y = \\-\\_y;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: this\\->\\_y_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "-796707555", "unbViolId": "658b3d26-e6b4-3e7a-a58b-fd15481a73c0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where value is defined by tainting function  *** Tainted data: argv[]" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: atoi(...)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: y" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: new Point->_y" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: point->_y" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of possible overflow\/underflow  *** Tainted data: this->_y" } }, "nestingLevel": 1 } ] } ] } ] }, { "ruleId": "MISRA2012-DIR-4_14_b", "level": "error", "message": { "text": "Evaluation of \"-this->_y\" may result in possible overflow\/underflow", "markdown": "**\\[Line 10\\] Evaluation of \"\\-this\\->\\_y\" may result in possible overflow\/underflow**  \n  \n**Point where value is defined by tainting function**  \nNullPointer.cpp&nbsp;(5)&nbsp;:&nbsp;int main\\(int argc, char\\* argv\\[\\]\\)&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: argv\\[\\]_  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming true\\)_  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;atoi\\(\\.\\.\\.\\)  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;Point\\(\\.\\.\\.\\)&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: atoi\\(\\.\\.\\.\\)_  \n        Point.hpp&nbsp;(7)&nbsp;:&nbsp;Point\\(int x, int y\\) : \\_x\\(x\\), \\_y\\(y\\) \\{\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: y_  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;point = new Point\\(atoi\\(argv\\[1\\]\\), atoi\\(argv\\[2\\]\\)\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: new Point\\->\\_y_  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: point\\->\\_y_  \n        **Point of possible overflow\/underflow**&nbsp;  \n        Point.hpp&nbsp;(10)&nbsp;:&nbsp;\\_y = \\-\\_y;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: this\\->\\_y_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "-796707555", "unbViolId": "74230a38-387d-3380-bc95-ef76b3edc291" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where value is defined by tainting function  *** Tainted data: argv[]" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: atoi(...)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: y" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: new Point->_y" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: point->_y" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of possible overflow\/underflow  *** Tainted data: this->_y" } }, "nestingLevel": 1 } ] } ] } ] }, { "ruleId": "MISRAC2012-DIR_4_14-b", "level": "error", "message": { "text": "Evaluation of \"-this->_y\" may result in possible overflow\/underflow", "markdown": "**\\[Line 10\\] Evaluation of \"\\-this\\->\\_y\" may result in possible overflow\/underflow**  \n  \n**Point where value is defined by tainting function**  \nNullPointer.cpp&nbsp;(5)&nbsp;:&nbsp;int main\\(int argc, char\\* argv\\[\\]\\)&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: argv\\[\\]_  \nNullPointer.cpp&nbsp;(7)&nbsp;:&nbsp;Point\\* point = 0;  \nNullPointer.cpp&nbsp;(8)&nbsp;:&nbsp;if \\(argc > 3\\) \\{&nbsp;&nbsp;_\\*\\*\\*&nbsp;Condition evaluation: \\(argc > 3\\) \\(assuming true\\)_  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;atoi\\(\\.\\.\\.\\)  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;Point\\(\\.\\.\\.\\)&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: atoi\\(\\.\\.\\.\\)_  \n        Point.hpp&nbsp;(7)&nbsp;:&nbsp;Point\\(int x, int y\\) : \\_x\\(x\\), \\_y\\(y\\) \\{\\}&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: y_  \nNullPointer.cpp&nbsp;(9)&nbsp;:&nbsp;point = new Point\\(atoi\\(argv\\[1\\]\\), atoi\\(argv\\[2\\]\\)\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: new Point\\->\\_y_  \nNullPointer.cpp&nbsp;(11)&nbsp;:&nbsp;point\\->reflectAcrossX\\(\\);&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: point\\->\\_y_  \n        **Point of possible overflow\/underflow**&nbsp;  \n        Point.hpp&nbsp;(10)&nbsp;:&nbsp;\\_y = \\-\\_y;&nbsp;&nbsp;_\\*\\*\\*&nbsp;Tainted data: this\\->\\_y_" }, "partialFingerprints": { "violType": "FlowViol", "lineHash": "-796707555", "unbViolId": "22ff0f02-c67b-3695-8765-63c71bc3c7b5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } } } ], "codeFlows": [ { "threadFlows": [ { "locations": [ { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 5, "startColumn": 1 } }, "message": { "text": "Violation Cause - Point where value is defined by tainting function  *** Tainted data: argv[]" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 8, "startColumn": 1 } }, "message": { "text": "  *** Condition evaluation: (argc > 3) (assuming true)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: atoi(...)" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: y" } }, "nestingLevel": 1 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: new Point->_y" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 11, "startColumn": 1 } }, "message": { "text": "  *** Tainted data: point->_y" } }, "nestingLevel": 0 }, { "location": { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1 } }, "message": { "text": "Violation Point - Point of possible overflow\/underflow  *** Tainted data: this->_y" } }, "nestingLevel": 1 } ] } ] } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'translate' function is not preceded by a comment", "markdown": "**\\[Line 13\\] The definition of the 'translate' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "3330e3f6-72a1-3196-8932-e9506513143c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'translate' function is not preceded by a comment", "markdown": "**\\[Line 13\\] The definition of the 'translate' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "9306f41f-9c9b-3b9d-83e5-7ca4bd6c9ad4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'translate' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 13\\] The 'translate' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "f375fcaa-a734-3420-87d2-4934bf61b40c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'translate' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 13\\] The 'translate' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "feb3b867-8be9-3ca4-b3e7-3456c824f02e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'vector' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 13\\] The 'vector' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "4c3f06fa-3c12-34ce-a908-9601b83e5cbf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'vector' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 13\\] The 'vector' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "17edca79-4ff1-3f6d-8a43-6c2f3643abb0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "AUTOSAR-A15_4_4-a", "level": "error", "message": { "text": "The 'translate' function should be declared 'noexcept'", "markdown": "**\\[Line 13\\] The 'translate' function should be declared 'noexcept'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "5e073e05-8138-39f1-aaee-1bc75b501d99" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "CODSTA-MCPP-09", "level": "warning", "message": { "text": "The 'translate' function should be declared 'noexcept'", "markdown": "**\\[Line 13\\] The 'translate' function should be declared 'noexcept'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "cc3fed18-32f4-35e7-aac1-9bdeb8352102" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "FORMAT-28", "level": "warning", "message": { "text": "Return type is not placed in line before function 'translate'", "markdown": "**\\[Line 13\\] Return type is not placed in line before function 'translate'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "78d1fe9a-1849-3357-b07a-6a08cf74a397" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'translate' has Cyclomatic Complexity value: 1", "markdown": "**\\[Line 13\\] Function 'translate' has Cyclomatic Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "d04d1d1e-2a2f-398e-a732-5a0aff22a2b6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'translate' has Essential Complexity value: 1", "markdown": "**\\[Line 13\\] Function 'translate' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "6951a3e8-6c8a-32e6-81cc-e4f4261a1f0e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "NAMING-17", "level": "warning", "message": { "text": "Naming convention not followed: translate", "markdown": "**\\[Line 13\\] Naming convention not followed: translate**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "b50b4283-0dc1-39f7-892a-4a0eec274f45" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 10, "endColumn": 11 } } } ] }, { "ruleId": "FORMAT-47_a", "level": "warning", "message": { "text": "The 'const' qualifier should be placed on the right hand side of the type", "markdown": "**\\[Line 13\\] The 'const' qualifier should be placed on the right hand side of the type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "107aae23-5102-3bdc-a4d9-d06b851cd907" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "HICPP-7_1_4-a", "level": "warning", "message": { "text": "The 'const' qualifier should be placed on the right hand side of the type", "markdown": "**\\[Line 13\\] The 'const' qualifier should be placed on the right hand side of the type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "1add82e4-b691-3ff0-a716-9051e7143896" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "AUTOSAR-A8_4_7-a", "level": "error", "message": { "text": "Consider passing the 'vector' parameter by value instead of by const reference", "markdown": "**\\[Line 13\\] Consider passing the 'vector' parameter by value instead of by const reference**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "9d9e2884-cafb-3506-9b74-f114e9f3583a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 33, "endColumn": 34 } } } ] }, { "ruleId": "HICPP-8_2_3-a", "level": "warning", "message": { "text": "The 'vector' parameter should be passed by value instead of by const reference", "markdown": "**\\[Line 13\\] The 'vector' parameter should be passed by value instead of by const reference**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "3062529c-1466-32af-b47c-de3529bc83f1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 33, "endColumn": 34 } } } ] }, { "ruleId": "CERT_C-API00-a", "level": "warning", "message": { "text": "Parameter 'vector' is not validated before use", "markdown": "**\\[Line 13\\] Parameter 'vector' is not validated before use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "c4736fe8-0481-3c6a-bd1e-4a98b9f87b92" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 33, "endColumn": 34 } } } ] }, { "ruleId": "CODSTA-86", "level": "warning", "message": { "text": "Parameter 'vector' is not validated before use", "markdown": "**\\[Line 13\\] Parameter 'vector' is not validated before use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "4a73c8d0-5b39-326d-aa1d-7e395b72c3f1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 33, "endColumn": 34 } } } ] }, { "ruleId": "NAMING-HN-11", "level": "warning", "message": { "text": "The 'vector' identifier should have the 'k' prefix", "markdown": "**\\[Line 13\\] The 'vector' identifier should have the 'k' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "76d17e94-6440-3ee9-b9bf-a82b963f6360" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 33, "endColumn": 34 } } } ] }, { "ruleId": "NAMING-HN-35", "level": "warning", "message": { "text": "The 'vector' identifier should have the 'r' prefix", "markdown": "**\\[Line 13\\] The 'vector' identifier should have the 'r' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1158187041", "unbViolId": "6bf6c885-67a3-3171-8a7d-7dca6a83f70a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 13, "startColumn": 33, "endColumn": 34 } } } ] }, { "ruleId": "METRICS-19", "level": "warning", "message": { "text": "Percentage of comment lines vs. all method's lines is: 0", "markdown": "**\\[Line 14\\] Percentage of comment lines vs\\. all method's lines is: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "30537851", "unbViolId": "56ca6b94-36aa-39fa-a2e2-f56b3b674855" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 14, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 15\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "931387847", "unbViolId": "8615f6a8-bd58-3ec8-b2fb-bb3c77c0bca8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 15\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "931387847", "unbViolId": "096b5837-4c85-3dd9-8ad3-46bca4913ece" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 15\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "931387847", "unbViolId": "16735777-d486-3ca4-bfd2-df707dbf0943" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 16\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1856027609", "unbViolId": "d58c4c20-a481-37cf-b52c-9f8a62658e9f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 16\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1856027609", "unbViolId": "919c5a51-6de5-3e05-8e6f-5579b2cfd034" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 16\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1856027609", "unbViolId": "cf56b7f7-ab08-387d-9d66-8c2bd251ac00" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "CODSTA-223", "level": "warning", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 19\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "3f850598-669b-3f30-9e48-9f5cbe5d1690" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A3_9_1-b", "level": "error", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 19\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "941506b9-ddf2-30e6-a451-ccda0f887b54" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "HICPP-7_1_6-b", "level": "warning", "message": { "text": "Do not use the 'int' standard integer type", "markdown": "**\\[Line 19\\] Do not use the 'int' standard integer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "328c19d1-859f-356d-b700-750172a89793" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 19\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "071d1b99-1b79-31ec-bb58-fb8b4973709a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 19\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "6ef5764c-bbf6-33db-a149-1338d095ae7c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 19\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "52c88af5-86c4-350b-9c1d-31ce16bda87b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 19\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "663fead4-1036-39e3-b35b-1dcd8c27021e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 19\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "bba0aae6-b071-3636-9cf6-6281f5867cba" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 19\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "f2867863-cf47-3fd6-9374-27560fa11122" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 19\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "6d7ef451-2eef-3902-834b-7c5d50835e5a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'squareDistanceTo' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 19\\] The 'squareDistanceTo' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "ca7462d7-9b8e-370a-864e-03d98443b84a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'squareDistanceTo' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 19\\] The 'squareDistanceTo' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "4f662ce1-d564-3134-b20f-82d4c2f7b349" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'point' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 19\\] The 'point' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "0da40ab5-dfd7-3e9a-8c6d-68348de83a6b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'point' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 19\\] The 'point' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "2fdee9e0-c952-3f77-a5c6-4327be558059" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'squareDistanceTo' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 19\\] The 'squareDistanceTo' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "97fd5c46-34d6-3068-ac28-dc3ff7ca70d1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'squareDistanceTo' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 19\\] The 'squareDistanceTo' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "f230358b-b6ab-3ba6-ad4e-26695a5712ad" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "PORT-13", "level": "warning", "message": { "text": "'squareDistanceTo' shall be declared as unsigned int or signed int", "markdown": "**\\[Line 19\\] 'squareDistanceTo' shall be declared as unsigned int or signed int**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "e02cb4b5-906c-3c25-b604-c9dc2156230a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-CPP-54", "level": "warning", "message": { "text": "Member function 'squareDistanceTo' should be declared as const", "markdown": "**\\[Line 19\\] Member function 'squareDistanceTo' should be declared as const**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "999178a8-1ab6-3b41-b77f-cd98a4f02ecb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-069", "level": "warning", "message": { "text": "Member function 'squareDistanceTo' should be declared as const", "markdown": "**\\[Line 19\\] Member function 'squareDistanceTo' should be declared as const**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "03daec28-3e27-3e5f-83a0-4baf955d6994" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "HICPP-9_1_1-a", "level": "warning", "message": { "text": "Member function 'squareDistanceTo' should be declared as const", "markdown": "**\\[Line 19\\] Member function 'squareDistanceTo' should be declared as const**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "a0688335-b0b0-3fdd-9ae4-6c59ce9ed32a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-M9_3_3-a", "level": "error", "message": { "text": "Member function 'squareDistanceTo' should be declared as const", "markdown": "**\\[Line 19\\] Member function 'squareDistanceTo' should be declared as const**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "0cd23980-0875-3cc9-802a-967918ca270a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-CPP-78", "level": "warning", "message": { "text": "Member function 'squareDistanceTo' should be declared as const", "markdown": "**\\[Line 19\\] Member function 'squareDistanceTo' should be declared as const**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "f8548455-ff26-32c8-86fa-1fb7a7285375" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "MISRA2008-9_3_3", "level": "error", "message": { "text": "Member function 'squareDistanceTo' should be declared as const", "markdown": "**\\[Line 19\\] Member function 'squareDistanceTo' should be declared as const**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "0a147a29-8ce4-3ba0-b5ec-5912bf561e4f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-A15_4_4-a", "level": "error", "message": { "text": "The 'squareDistanceTo' function should be declared 'noexcept'", "markdown": "**\\[Line 19\\] The 'squareDistanceTo' function should be declared 'noexcept'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "683314c8-705c-376e-b032-cb358eeb66a9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-MCPP-09", "level": "warning", "message": { "text": "The 'squareDistanceTo' function should be declared 'noexcept'", "markdown": "**\\[Line 19\\] The 'squareDistanceTo' function should be declared 'noexcept'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "12859fdd-74bc-30e7-b771-9a817bab60bc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "FORMAT-28", "level": "warning", "message": { "text": "Return type is not placed in line before function 'squareDistanceTo'", "markdown": "**\\[Line 19\\] Return type is not placed in line before function 'squareDistanceTo'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "2558aa5c-458f-3333-ad52-fa86d000e511" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'squareDistanceTo' has Cyclomatic Complexity value: 1", "markdown": "**\\[Line 19\\] Function 'squareDistanceTo' has Cyclomatic Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "dcb41f0c-9b86-3395-b276-b9a0b67fc62e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'squareDistanceTo' has Essential Complexity value: 1", "markdown": "**\\[Line 19\\] Function 'squareDistanceTo' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "5363c0f8-1139-3db3-8de3-9f71db892fbd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-17", "level": "warning", "message": { "text": "Naming convention not followed: squareDistanceTo", "markdown": "**\\[Line 19\\] Naming convention not followed: squareDistanceTo**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "8ac6cd5f-247b-3258-883e-f40fb7768493" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "CODSTA-MCPP-08_b", "level": "error", "message": { "text": "The return type of the 'squareDistanceTo' function should be declared as 'auto'", "markdown": "**\\[Line 19\\] The return type of the 'squareDistanceTo' function should be declared as 'auto'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "9267a308-b2e6-36ee-901f-20d5429bbdef" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'squareDistanceTo' function is not preceded by a comment", "markdown": "**\\[Line 19\\] The definition of the 'squareDistanceTo' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "e6a8f2b9-aa32-3a91-b273-b478ef15edda" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'squareDistanceTo' function is not preceded by a comment", "markdown": "**\\[Line 19\\] The definition of the 'squareDistanceTo' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "e15216c9-a898-30b6-ae80-d3281bea73fe" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-051", "level": "warning", "message": { "text": "The name 'squareDistanceTo' should be composed only of lowercase letters", "markdown": "**\\[Line 19\\] The name 'squareDistanceTo' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "a57a2e3b-1597-3e83-85ad-0f63c92f314d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-44", "level": "warning", "message": { "text": "The name 'squareDistanceTo' should be composed only of lowercase letters", "markdown": "**\\[Line 19\\] The name 'squareDistanceTo' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "76a75148-59f2-34a1-817c-e10e2ec73030" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "FORMAT-47_a", "level": "warning", "message": { "text": "The 'const' qualifier should be placed on the right hand side of the type", "markdown": "**\\[Line 19\\] The 'const' qualifier should be placed on the right hand side of the type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "19d680ff-eb51-3390-8af4-f0b861edd6ca" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 26, "endColumn": 27 } } } ] }, { "ruleId": "HICPP-7_1_4-a", "level": "warning", "message": { "text": "The 'const' qualifier should be placed on the right hand side of the type", "markdown": "**\\[Line 19\\] The 'const' qualifier should be placed on the right hand side of the type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "a2dc86ed-dc57-34e7-94ee-50327094b499" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 26, "endColumn": 27 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier 'point' differs only by case from identifier 'POINT' declared in file 'windef.h'", "markdown": "**\\[Line 19\\] The identifier 'point' differs only by case from identifier 'POINT' declared in file 'windef\\.h'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "c6219835-9f84-3373-97d5-ba75cd19a92e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier 'point' differs only by case from identifier 'POINT' declared in file 'windef.h'", "markdown": "**\\[Line 19\\] The identifier 'point' differs only by case from identifier 'POINT' declared in file 'windef\\.h'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "d5994f89-b8ee-3b12-9d09-2bdebcdd705e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier 'point' differs only by case from identifier 'Point' declared in file 'Point.hpp'", "markdown": "**\\[Line 19\\] The identifier 'point' differs only by case from identifier 'Point' declared in file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "3c4db69e-179d-3c91-ab56-c1b875bcbbf1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier 'point' differs only by case from identifier 'Point' declared in file 'Point.hpp'", "markdown": "**\\[Line 19\\] The identifier 'point' differs only by case from identifier 'Point' declared in file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "7bba87f0-d195-384a-a4cb-dd91de17ecbc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "MISRA2008-2_10_1", "level": "error", "message": { "text": "Identifier name: 'point' differs only by case from identifier name: 'Point' ( line: '4')", "markdown": "**\\[Line 19\\] Identifier name: 'point' differs only by case from identifier name: 'Point' \\( line: '4'\\)**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "e7b8567c-1fbc-3851-af58-b73d85a69186" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "HICPP-2_4_1-a", "level": "warning", "message": { "text": "Identifier name: 'point' differs only by case from identifier name: 'Point' ( line: '4')", "markdown": "**\\[Line 19\\] Identifier name: 'point' differs only by case from identifier name: 'Point' \\( line: '4'\\)**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "f6e7a6ce-fd08-3f89-803c-a0027a2adc8b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "AUTOSAR-M2_10_1-a", "level": "error", "message": { "text": "Identifier name: 'point' differs only by case from identifier name: 'Point' ( line: '4')", "markdown": "**\\[Line 19\\] Identifier name: 'point' differs only by case from identifier name: 'Point' \\( line: '4'\\)**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "98226e1b-b2f1-3bf5-9f46-a41bf67104c6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "NAMING-47", "level": "warning", "message": { "text": "Identifier name: 'point' differs only by case from identifier name: 'Point' ( line: '4')", "markdown": "**\\[Line 19\\] Identifier name: 'point' differs only by case from identifier name: 'Point' \\( line: '4'\\)**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "4f5556ab-a7a0-324e-a160-321ed94d108d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "MISRA2008-2_10_1", "level": "error", "message": { "text": "Identifier name: 'point' differs only by case from identifier name: 'Point' declared in class", "markdown": "**\\[Line 19\\] Identifier name: 'point' differs only by case from identifier name: 'Point' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "ad950033-9c21-3faf-90a3-bea823757d2f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "HICPP-2_4_1-a", "level": "warning", "message": { "text": "Identifier name: 'point' differs only by case from identifier name: 'Point' declared in class", "markdown": "**\\[Line 19\\] Identifier name: 'point' differs only by case from identifier name: 'Point' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "1a880ee1-2c8d-3625-a65b-9170a1e3d0b9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "AUTOSAR-M2_10_1-a", "level": "error", "message": { "text": "Identifier name: 'point' differs only by case from identifier name: 'Point' declared in class", "markdown": "**\\[Line 19\\] Identifier name: 'point' differs only by case from identifier name: 'Point' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "69f4700c-9076-30b5-b427-b28a02c62bf8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "NAMING-47", "level": "warning", "message": { "text": "Identifier name: 'point' differs only by case from identifier name: 'Point' declared in class", "markdown": "**\\[Line 19\\] Identifier name: 'point' differs only by case from identifier name: 'Point' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "42c69a9f-8793-3508-8cbf-7bdb194e7752" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "MISRA2008-2_10_1", "level": "error", "message": { "text": "Identifier name: 'point' differs only by case from its type name: 'Point'", "markdown": "**\\[Line 19\\] Identifier name: 'point' differs only by case from its type name: 'Point'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "a102eebb-5685-3f1b-8af0-73c60e22722e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "HICPP-2_4_1-a", "level": "warning", "message": { "text": "Identifier name: 'point' differs only by case from its type name: 'Point'", "markdown": "**\\[Line 19\\] Identifier name: 'point' differs only by case from its type name: 'Point'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "0385d65e-1b12-3fb3-afe5-32691e3805c3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "AUTOSAR-M2_10_1-a", "level": "error", "message": { "text": "Identifier name: 'point' differs only by case from its type name: 'Point'", "markdown": "**\\[Line 19\\] Identifier name: 'point' differs only by case from its type name: 'Point'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "bebb313e-a98a-36ae-96bf-47ac994532c7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "NAMING-47", "level": "warning", "message": { "text": "Identifier name: 'point' differs only by case from its type name: 'Point'", "markdown": "**\\[Line 19\\] Identifier name: 'point' differs only by case from its type name: 'Point'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "5f9111b3-e236-351e-92a6-f1d9a3827c21" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "AUTOSAR-A8_4_7-a", "level": "error", "message": { "text": "Consider passing the 'point' parameter by value instead of by const reference", "markdown": "**\\[Line 19\\] Consider passing the 'point' parameter by value instead of by const reference**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "fe9a67c4-218d-3f9e-8c89-cfd8a187a7bc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "HICPP-8_2_3-a", "level": "warning", "message": { "text": "The 'point' parameter should be passed by value instead of by const reference", "markdown": "**\\[Line 19\\] The 'point' parameter should be passed by value instead of by const reference**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "f3519473-277a-3a4d-832d-e3a703ab67dd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "CERT_C-API00-a", "level": "warning", "message": { "text": "Parameter 'point' is not validated before use", "markdown": "**\\[Line 19\\] Parameter 'point' is not validated before use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "8b48218b-8770-3a75-866f-66f57b55045a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "CODSTA-86", "level": "warning", "message": { "text": "Parameter 'point' is not validated before use", "markdown": "**\\[Line 19\\] Parameter 'point' is not validated before use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "185b0ce5-cd97-37d4-a005-18e4b95ef5d3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "NAMING-HN-11", "level": "warning", "message": { "text": "The 'point' identifier should have the 'k' prefix", "markdown": "**\\[Line 19\\] The 'point' identifier should have the 'k' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "27b1c638-c378-3acd-a9da-8619131a276f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "NAMING-HN-35", "level": "warning", "message": { "text": "The 'point' identifier should have the 'r' prefix", "markdown": "**\\[Line 19\\] The 'point' identifier should have the 'r' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "905451388", "unbViolId": "a24701ef-98f4-3c49-bb91-1ceca9975fca" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "METRICS-19", "level": "warning", "message": { "text": "Percentage of comment lines vs. all method's lines is: 0", "markdown": "**\\[Line 20\\] Percentage of comment lines vs\\. all method's lines is: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "30537851", "unbViolId": "69835ab7-eb1b-3b7a-81fd-b8b8640ad755" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 20, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-04", "level": "warning", "message": { "text": "Line has over 79 characters", "markdown": "**\\[Line 21\\] Line has over 79 characters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "150478121", "unbViolId": "b0307283-0f71-339c-9eee-f6d1272e2834" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 21, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 21\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "150478121", "unbViolId": "dfe6680e-ed10-3368-9b49-aff3f4cb1ca0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 21, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 21\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "150478121", "unbViolId": "f560655f-2875-36e6-a59b-2d50de73d95a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 21, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 21\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "150478121", "unbViolId": "ce3e6a51-2385-3edd-ba79-206258639062" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 21, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "FORMAT-25_b", "level": "warning", "message": { "text": "'return' statement should be used with parenthesis", "markdown": "**\\[Line 21\\] 'return' statement should be used with parenthesis**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "150478121", "unbViolId": "265f7eba-e3f8-3feb-9e7f-62c05e449245" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 21, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "HICPP-2_3_1-a", "level": "warning", "message": { "text": "Use \/\/ comments only", "markdown": "**\\[Line 25\\] Use \/\/ comments only**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1963129393", "unbViolId": "e6863149-a2a9-303d-9faa-99c105207ff9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-126", "level": "error", "message": { "text": "Use \/\/ comments only", "markdown": "**\\[Line 25\\] Use \/\/ comments only**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1963129393", "unbViolId": "06b73586-ad6f-3b60-8e2b-34f8a3782420" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "COMMENT-01", "level": "warning", "message": { "text": "Use \/\/ comments only", "markdown": "**\\[Line 25\\] Use \/\/ comments only**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1963129393", "unbViolId": "b6d049f2-41cb-3897-be07-a3bc8cacc24f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "COMMENT-02", "level": "warning", "message": { "text": "Add comment containing the copyright information at the begin of file 'Shapes.hpp'", "markdown": "**\\[Line 1\\] Add comment containing the copyright information at the begin of file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-290124037", "unbViolId": "a9279055-9844-3946-b8d6-81d8985a3f3b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-133_b", "level": "warning", "message": { "text": "Add comment containing the copyright information at the begin of file 'Shapes.hpp'", "markdown": "**\\[Line 1\\] Add comment containing the copyright information at the begin of file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-290124037", "unbViolId": "932b4ff4-6062-3316-9063-fc128e9a7f86" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-03", "level": "warning", "message": { "text": "Add comment containing the information on the file at the begin of file 'Shapes.hpp'", "markdown": "**\\[Line 1\\] Add comment containing the information on the file at the begin of file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-290124037", "unbViolId": "2b1d1dd1-d3db-3817-a6d9-622d4cb86f39" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-133_a", "level": "warning", "message": { "text": "Add comment containing the information on the file at the begin of file 'Shapes.hpp'", "markdown": "**\\[Line 1\\] Add comment containing the information on the file at the begin of file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-290124037", "unbViolId": "c42b660e-846e-3f9f-88eb-21ccc52b3bc1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "METRICS-31", "level": "warning", "message": { "text": "The assertion density is lower than two assertions per function", "markdown": "**\\[Line 1\\] The assertion density is lower than two assertions per function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-290124037", "unbViolId": "6443ba0d-7a82-3430-9f3e-e55c65bb03d1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "NAMING-03", "level": "warning", "message": { "text": "The filename 'Shapes.hpp' should be in lowercase", "markdown": "**\\[Line 1\\] The filename 'Shapes\\.hpp' should be in lowercase**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-290124037", "unbViolId": "3206f1f2-7786-33f1-8f44-3baac0ab7da4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "NAMING-37", "level": "warning", "message": { "text": "Header file 'Shapes.hpp' should have the file name extension \".hh\"", "markdown": "**\\[Line 1\\] Header file 'Shapes\\.hpp' should have the file name extension \"\\.hh\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-290124037", "unbViolId": "0d5059fe-45b6-3ed3-9781-cbc11fa6cf5e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-053", "level": "warning", "message": { "text": "Header file 'Shapes.hpp' should have the file name extension \".h\"", "markdown": "**\\[Line 1\\] Header file 'Shapes\\.hpp' should have the file name extension \"\\.h\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-290124037", "unbViolId": "dcb24c7f-c125-3cb6-98d7-199e9899ab5e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "NAMING-41", "level": "warning", "message": { "text": "Header file 'Shapes.hpp' should have the file name extension \".h\"", "markdown": "**\\[Line 1\\] Header file 'Shapes\\.hpp' should have the file name extension \"\\.h\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-290124037", "unbViolId": "7807730e-c54e-3caf-945c-6b166141e8f8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "NAMING-43", "level": "warning", "message": { "text": "'Shapes.hpp' filename extension does not adhere to naming conventions", "markdown": "**\\[Line 1\\] 'Shapes\\.hpp' filename extension does not adhere to naming conventions**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-290124037", "unbViolId": "657cdb46-4d16-36f8-8ed4-1978bab41676" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PFO-03", "level": "warning", "message": { "text": "File 'Shapes.hpp' contains more than one class definition", "markdown": "**\\[Line 1\\] File 'Shapes\\.hpp' contains more than one class definition**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-290124037", "unbViolId": "5c2c8589-b851-30f4-8099-13e475ca0029" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PFO-07", "level": "warning", "message": { "text": "SHAPES_HPP macro name should appear as first #ifndef or #if preprocessor directive", "markdown": "**\\[Line 1\\] SHAPES\\_HPP macro name should appear as first \\#ifndef or \\#if preprocessor directive**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-290124037", "unbViolId": "f6381012-f47c-328a-8974-7309cc9f8748" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PFO-10", "level": "warning", "message": { "text": "Header file 'Shapes.hpp' contains more than one class declaration: 'Shape, LineSegment, Circle'", "markdown": "**\\[Line 1\\] Header file 'Shapes\\.hpp' contains more than one class declaration: 'Shape, LineSegment, Circle'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-290124037", "unbViolId": "6c22d5f8-1152-396a-bd18-138a3a19d2a0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "NAMING-39", "level": "warning", "message": { "text": "File 'Shapes.hpp'  should have the \".icc\" file name extension", "markdown": "**\\[Line 1\\] File 'Shapes\\.hpp'  should have the \"\\.icc\" file name extension**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-290124037", "unbViolId": "4c2d2168-0f74-3487-8d19-322f60590270" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 1, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-032", "level": "warning", "message": { "text": "Not a proper header file (*.h ) is being included: \"Point.hpp\"", "markdown": "**\\[Line 4\\] Not a proper header file \\(\\*\\.h \\) is being included: \"Point\\.hpp\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1179647073", "unbViolId": "869a16c6-4b7a-39fc-9640-caf2c343b266" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-08", "level": "warning", "message": { "text": "Not a proper header file (*.h ) is being included: \"Point.hpp\"", "markdown": "**\\[Line 4\\] Not a proper header file \\(\\*\\.h \\) is being included: \"Point\\.hpp\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1179647073", "unbViolId": "6fb3a00f-ff0c-33fa-b162-21eb4e370d88" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "PREPROC-09", "level": "error", "message": { "text": "Disallowed #include notation is being used: \"Point.hpp\"", "markdown": "**\\[Line 4\\] Disallowed \\#include notation is being used: \"Point\\.hpp\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1179647073", "unbViolId": "36cdfd30-9ca7-3361-9d3b-62349724681e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-033", "level": "error", "message": { "text": "Disallowed #include notation is being used: \"Point.hpp\"", "markdown": "**\\[Line 4\\] Disallowed \\#include notation is being used: \"Point\\.hpp\"**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1179647073", "unbViolId": "f59fdb3b-eb73-3a2c-be17-e9784a9d62c6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 4, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-02", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 6\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "9f176a64-cb4a-302e-9151-ab54b7599fdb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-34", "level": "warning", "message": { "text": "Opening '{' and closing '}' should be in the same column", "markdown": "**\\[Line 6\\] Opening '\\{' and closing '\\}' should be in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "db05a0f3-9a14-3095-a5b6-8806a438fe40" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-098", "level": "warning", "message": { "text": "Do not declare the 'Shape' type in the global namespace", "markdown": "**\\[Line 6\\] Do not declare the 'Shape' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "7a243121-09ae-36ce-b75b-aa7fd290f8b9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-M7_3_1-a", "level": "error", "message": { "text": "Do not declare the 'Shape' type in the global namespace", "markdown": "**\\[Line 6\\] Do not declare the 'Shape' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "06c071db-2041-344c-ba8b-51e6ff6b6a9f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-CPP-36", "level": "warning", "message": { "text": "Do not declare the 'Shape' type in the global namespace", "markdown": "**\\[Line 6\\] Do not declare the 'Shape' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "3e69d682-cbae-34c0-8dca-ddb8b90574e1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2008-7_3_1", "level": "error", "message": { "text": "Do not declare the 'Shape' type in the global namespace", "markdown": "**\\[Line 6\\] Do not declare the 'Shape' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "271152d8-97b7-37ac-8e33-d63c219319b5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The declaration of the 'Shape' type should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 6\\] The declaration of the 'Shape' type should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "3437acf2-c7bc-3fb4-ba51-d253fbeec9e0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The declaration of the 'Shape' type should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 6\\] The declaration of the 'Shape' type should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "7471e2a5-d4c8-3986-9fc5-4d1e16444322" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-057_a", "level": "warning", "message": { "text": "Public section must be before protected and private sections", "markdown": "**\\[Line 6\\] Public section must be before protected and private sections**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "0f6d3088-bd1f-3cc0-8c46-3ad4a6a892a3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-CPP-46", "level": "warning", "message": { "text": "Public section must be before protected and private sections", "markdown": "**\\[Line 6\\] Public section must be before protected and private sections**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "7f41da4c-9668-3ff9-8f1e-ccf2af73f95f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-057_b", "level": "warning", "message": { "text": "Protected section must be before private section", "markdown": "**\\[Line 6\\] Protected section must be before private section**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "8157bbb9-8655-30b8-84b5-4b31a3763e31" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-CPP-47", "level": "warning", "message": { "text": "Protected section must be before private section", "markdown": "**\\[Line 6\\] Protected section must be before private section**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "6cb022c0-371f-3cd0-843f-d3f4e77db79b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A12_4_2-a", "level": "warning", "message": { "text": "Class 'Shape' should be final", "markdown": "**\\[Line 6\\] Class 'Shape' should be final**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "aa6ed9b7-ef1c-3b7b-a6e7-8184c81b2c5a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-MCPP-23", "level": "warning", "message": { "text": "Class 'Shape' should be final", "markdown": "**\\[Line 6\\] Class 'Shape' should be final**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "19dc9da3-a04c-3315-a75c-891acc0ba29e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare default constructor in 'Shape'", "markdown": "**\\[Line 6\\] Explicitly declare default constructor in 'Shape'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "d18b76cd-e9fd-3e0c-b40f-197c49f71fcf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare destructor in 'Shape'", "markdown": "**\\[Line 6\\] Explicitly declare destructor in 'Shape'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "93751bcc-0a6b-3e66-b47f-95aa0ae8ebd9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare copy assignment operator in 'Shape'", "markdown": "**\\[Line 6\\] Explicitly declare copy assignment operator in 'Shape'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "18510fad-5fa5-3ff0-adda-8dfb509d7d11" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare move assignment operator in 'Shape'", "markdown": "**\\[Line 6\\] Explicitly declare move assignment operator in 'Shape'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "8719f8f3-7033-3d40-bb2f-d39e081b34fb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare copy constructor in 'Shape'", "markdown": "**\\[Line 6\\] Explicitly declare copy constructor in 'Shape'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "2053cc90-0668-347f-9d2d-9f0788938eb2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare move constructor in 'Shape'", "markdown": "**\\[Line 6\\] Explicitly declare move constructor in 'Shape'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "035c4dbd-7b76-3567-bb81-126ee9163df8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MRM-04", "level": "warning", "message": { "text": "Class 'Shape' missing assignment operator or special comment", "markdown": "**\\[Line 6\\] Class 'Shape' missing assignment operator or special comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "a2a23ee5-a46f-3025-b517-2ee8514e0efe" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MRM-05", "level": "warning", "message": { "text": "Class 'Shape' missing copy constructor or special comment", "markdown": "**\\[Line 6\\] Class 'Shape' missing copy constructor or special comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "ea23e5e3-7971-3bed-999a-0263f921868c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MRM-47", "level": "warning", "message": { "text": "Class 'Shape' missing assignment operator or special comment", "markdown": "**\\[Line 6\\] Class 'Shape' missing assignment operator or special comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "61e26c2c-4dda-3468-a42b-ba4d954e97a6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MRM-48", "level": "warning", "message": { "text": "Class 'Shape' missing copy constructor or special comment", "markdown": "**\\[Line 6\\] Class 'Shape' missing copy constructor or special comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "cbf73e76-27a7-3dbe-8f84-341dac6ef012" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-HN-19", "level": "warning", "message": { "text": "The 'Shape' identifier should have the 'C' prefix", "markdown": "**\\[Line 6\\] The 'Shape' identifier should have the 'C' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "dd0c13e6-9682-351e-a827-5f61f80d6ab9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "OOP-23", "level": "error", "message": { "text": "Class 'Shape' has virtual functions without a virtual destructor", "markdown": "**\\[Line 6\\] Class 'Shape' has virtual functions without a virtual destructor**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "0e9e3312-35ad-325c-93a9-200f92ee84ef" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "OPT-27", "level": "warning", "message": { "text": "In a class 'Shape' number of accessor functions (2) exceeds number of member variables (1)", "markdown": "**\\[Line 6\\] In a class 'Shape' number of accessor functions \\(2\\) exceeds number of member variables \\(1\\)**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "cf605d39-55be-324b-9c08-2f233054dfdc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-CPP-12", "level": "warning", "message": { "text": "Put base class 'Shape' into separate file", "markdown": "**\\[Line 6\\] Put base class 'Shape' into separate file**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "a06660c0-e46d-30ab-b815-ac07b603b66c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "OOP-22", "level": "error", "message": { "text": "Class 'Shape' must define a virtual destructor", "markdown": "**\\[Line 6\\] Class 'Shape' must define a virtual destructor**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "a53a22d0-38d1-3aeb-8b41-485f4e35a159" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CWE-772-b", "level": "error", "message": { "text": "Class 'Shape' must define a virtual destructor", "markdown": "**\\[Line 6\\] Class 'Shape' must define a virtual destructor**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "d141a8d8-c228-3ff6-b56d-9b0c820808ce" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CERT_CPP-OOP52-a", "level": "error", "message": { "text": "Class 'Shape' must define a virtual destructor", "markdown": "**\\[Line 6\\] Class 'Shape' must define a virtual destructor**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "6586a943-1ab3-331a-8421-e0cf6b1f651c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-078", "level": "error", "message": { "text": "Class 'Shape' must define a virtual destructor", "markdown": "**\\[Line 6\\] Class 'Shape' must define a virtual destructor**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "0d38d885-057d-3e83-8be3-41ef492c2278" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2012-RULE-5_7_a", "level": "error", "message": { "text": "The type name 'Shape' is not a unique identifier in the testing scope", "markdown": "**\\[Line 6\\] The type name 'Shape' is not a unique identifier in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "3d4bd352-929b-3256-9b47-f9a764d26ece" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRAC2012-RULE_5_7-a", "level": "error", "message": { "text": "The type name 'Shape' is not a unique identifier in the testing scope", "markdown": "**\\[Line 6\\] The type name 'Shape' is not a unique identifier in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "399430900", "unbViolId": "1ffef57e-426a-3946-b646-af2c68da23e5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 6, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 7\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1878228628", "unbViolId": "06c7504e-44cb-3b69-88a4-839856ffa701" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 7\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1878228628", "unbViolId": "c705f560-edca-3631-bf5b-caf57278a32a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 7\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1878228628", "unbViolId": "b37f6506-918a-3a5c-8609-e6e5be08875c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The '_position' member variable should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 7\\] The '\\_position' member variable should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1878228628", "unbViolId": "79b38fef-1228-344a-b5ef-7437f9ee4e5c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The '_position' member variable should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 7\\] The '\\_position' member variable should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1878228628", "unbViolId": "506a4d9c-2ded-39c4-b223-cfa96c321090" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "NAMING-07", "level": "warning", "message": { "text": "Member variable '_position' shall begin with a lowercase letter", "markdown": "**\\[Line 7\\] Member variable '\\_position' shall begin with a lowercase letter**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1878228628", "unbViolId": "e9a10393-b98d-3312-a2f7-1443875a6b39" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "NAMING-14", "level": "warning", "message": { "text": "Naming convention not followed: _position", "markdown": "**\\[Line 7\\] Naming convention not followed: \\_position**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1878228628", "unbViolId": "915551d3-6925-34ea-a3df-a48cce4059c3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "NAMING-33", "level": "warning", "message": { "text": "Using underscore at the beginning of the name '_position' is not allowed", "markdown": "**\\[Line 7\\] Using underscore at the beginning of the name '\\_position' is not allowed**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1878228628", "unbViolId": "3ea7eedc-6e70-35f0-a677-f242e0ebd6c3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-047", "level": "warning", "message": { "text": "Using underscore at the beginning of the name '_position' is not allowed", "markdown": "**\\[Line 7\\] Using underscore at the beginning of the name '\\_position' is not allowed**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1878228628", "unbViolId": "112b5a90-f1f2-3802-aef8-e3301a07bb5e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "NAMING-HN-29", "level": "warning", "message": { "text": "The '_position' identifier should have the 'm_' prefix", "markdown": "**\\[Line 7\\] The '\\_position' identifier should have the 'm\\_' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1878228628", "unbViolId": "4ccc6abf-6846-3d84-ab73-16f72906104d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier '_position' differs only by presence\/absence of the underscore character from identifier 'position' declared in file 'Shapes.hpp'", "markdown": "**\\[Line 7\\] The identifier '\\_position' differs only by presence\/absence of the underscore character from identifier 'position' declared in file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1878228628", "unbViolId": "528a1057-3cfc-3c8a-ac69-94a69d5c51fc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier '_position' differs only by presence\/absence of the underscore character from identifier 'position' declared in file 'Shapes.hpp'", "markdown": "**\\[Line 7\\] The identifier '\\_position' differs only by presence\/absence of the underscore character from identifier 'position' declared in file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1878228628", "unbViolId": "f7ca90ba-9932-3b45-8d9c-f4c04c73d1a5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 7, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 9\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1257077025", "unbViolId": "66f3b382-9e5e-3249-834d-467b874b702a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 9\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1257077025", "unbViolId": "279b1da5-7fc6-3d2b-b7de-cd3df33694d5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 9\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1257077025", "unbViolId": "d660a511-0956-3361-bc58-37cbcb8d0dd3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 9\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1257077025", "unbViolId": "7a798ebc-dd5f-3ff8-90c5-8b405f90f690" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 9\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1257077025", "unbViolId": "8e1b0f35-9213-3b00-9521-4673e717817e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 9\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1257077025", "unbViolId": "74d10673-8ea6-3b0c-bfe2-c687af5b7d97" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 9\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1257077025", "unbViolId": "10e2c8fd-1422-3e40-8039-5efb9b56129a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "JSF-134_b", "level": "warning", "message": { "text": "The declaration of the 'getArea' function is not preceded by a comment", "markdown": "**\\[Line 9\\] The declaration of the 'getArea' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1257077025", "unbViolId": "c817b402-e716-3a84-825b-f29a0b0af6ce" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "COMMENT-04_b", "level": "warning", "message": { "text": "The declaration of the 'getArea' function is not preceded by a comment", "markdown": "**\\[Line 9\\] The declaration of the 'getArea' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1257077025", "unbViolId": "170902e7-ec87-3064-8e26-767db2d8c895" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'getArea' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 9\\] The 'getArea' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1257077025", "unbViolId": "df10b207-be87-3db8-9873-4b1609a08d3a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'getArea' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 9\\] The 'getArea' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1257077025", "unbViolId": "e483556c-1529-3a05-ac9d-db72fe84ecc5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'getArea' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 9\\] The 'getArea' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1257077025", "unbViolId": "b24aa45c-85e7-3fc7-ac43-9f450ba0f746" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'getArea' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 9\\] The 'getArea' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1257077025", "unbViolId": "c2153baa-cf21-393a-8df9-350865a9ddf0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "CODSTA-CPP-25", "level": "warning", "message": { "text": "Make virtual functions nonpublic, and public functions nonvirtual: getArea", "markdown": "**\\[Line 9\\] Make virtual functions nonpublic, and public functions nonvirtual: getArea**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1257077025", "unbViolId": "53d1d6bd-b384-36a4-896b-046b8f0f6880" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "NAMING-17", "level": "warning", "message": { "text": "Naming convention not followed: getArea", "markdown": "**\\[Line 9\\] Naming convention not followed: getArea**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1257077025", "unbViolId": "ec284528-c84b-3e7b-9125-3a3457655e24" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "JSF-051", "level": "warning", "message": { "text": "The name 'getArea' should be composed only of lowercase letters", "markdown": "**\\[Line 9\\] The name 'getArea' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1257077025", "unbViolId": "5146ce5b-50a9-38be-b0fd-ef0a804f52d0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "NAMING-44", "level": "warning", "message": { "text": "The name 'getArea' should be composed only of lowercase letters", "markdown": "**\\[Line 9\\] The name 'getArea' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1257077025", "unbViolId": "547f80e0-0057-3ff3-915a-2b001ee09473" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 9, "startColumn": 20, "endColumn": 21 } } } ] }, { "ruleId": "METRICS-19", "level": "warning", "message": { "text": "Percentage of comment lines vs. all method's lines is: 0", "markdown": "**\\[Line 10\\] Percentage of comment lines vs\\. all method's lines is: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "27455a44-ea07-3f8b-b32a-58e6c9077a2f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 10\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "90aa95aa-c4bd-3de2-9441-58f6f5dd0425" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 10\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "7e39aafa-cb33-3d16-b080-7fe378a4edd0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 10\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "3f68ec82-59d1-3a78-92e7-4ef88db36d69" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-43", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 10\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "2f6ee337-ff05-3b5e-a7d2-5b6d579a4ed1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_b", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 10\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "f5e34bb4-3aef-3f22-84ed-28d4abb3032f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-02", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 10\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "0a624cac-7687-3f67-bc82-4831c70c9210" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-34", "level": "warning", "message": { "text": "Opening '{' and closing '}' should be in the same column", "markdown": "**\\[Line 10\\] Opening '\\{' and closing '\\}' should be in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "82fb1012-1d16-3ba1-a26b-70dc78ccf346" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'getPosition' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 10\\] The 'getPosition' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "4a31ed07-c44a-32a0-81ed-090782395341" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'getPosition' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 10\\] The 'getPosition' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "c699f62b-897a-3230-be03-aa270b33e690" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'getPosition' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 10\\] The 'getPosition' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "ce573abf-ee7d-3967-97ea-a3e48a35fff3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'getPosition' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 10\\] The 'getPosition' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "55320271-bad7-39ca-b94d-6f8c8e8e98ab" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A15_4_4-a", "level": "error", "message": { "text": "The 'getPosition' function should be declared 'noexcept'", "markdown": "**\\[Line 10\\] The 'getPosition' function should be declared 'noexcept'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "4b25f912-225a-37e3-9ec8-c4c3aba05aad" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "CODSTA-MCPP-09", "level": "warning", "message": { "text": "The 'getPosition' function should be declared 'noexcept'", "markdown": "**\\[Line 10\\] The 'getPosition' function should be declared 'noexcept'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "2b82ac52-3ff9-335c-8838-fb3554f04663" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "FORMAT-28", "level": "warning", "message": { "text": "Return type is not placed in line before function 'getPosition'", "markdown": "**\\[Line 10\\] Return type is not placed in line before function 'getPosition'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "735193b2-42d9-362b-b501-e70906d13304" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'getPosition' has Cyclomatic Complexity value: 1", "markdown": "**\\[Line 10\\] Function 'getPosition' has Cyclomatic Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "07290d9b-d1db-32da-b5f8-10595e8cfa54" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'getPosition' has Essential Complexity value: 1", "markdown": "**\\[Line 10\\] Function 'getPosition' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "5c12960f-d2f2-3ab0-a832-4b8532febe9e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "NAMING-17", "level": "warning", "message": { "text": "Naming convention not followed: getPosition", "markdown": "**\\[Line 10\\] Naming convention not followed: getPosition**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "a9fe9679-333d-367d-91dc-09ef415fccd3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "CODSTA-MCPP-08_b", "level": "error", "message": { "text": "The return type of the 'getPosition' function should be declared as 'auto&'", "markdown": "**\\[Line 10\\] The return type of the 'getPosition' function should be declared as 'auto&'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "853781a8-f9a5-32ba-ace9-9a27f4f1192a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'getPosition' function is not preceded by a comment", "markdown": "**\\[Line 10\\] The definition of the 'getPosition' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "77b5f6d8-8d2d-3a27-9ed8-043d181ad1a9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'getPosition' function is not preceded by a comment", "markdown": "**\\[Line 10\\] The definition of the 'getPosition' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "67909bc2-5752-38e8-b5e5-5693f95b6034" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "JSF-051", "level": "warning", "message": { "text": "The name 'getPosition' should be composed only of lowercase letters", "markdown": "**\\[Line 10\\] The name 'getPosition' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "9e0278e5-218f-3cef-9d0d-4e0e628691b8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "NAMING-44", "level": "warning", "message": { "text": "The name 'getPosition' should be composed only of lowercase letters", "markdown": "**\\[Line 10\\] The name 'getPosition' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "2a28771b-4d21-3a7d-b142-9e8310ec5981" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "CODSTA-CPP-06", "level": "warning", "message": { "text": "Member function 'getPosition' returns handles to member data: '_position'", "markdown": "**\\[Line 10\\] Member function 'getPosition' returns handles to member data: '\\_position'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "a5ac63af-bb21-37cb-9d19-f4ca64ddb2a7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "MISRA2008-9_3_2_b", "level": "error", "message": { "text": "Public member function 'getPosition' returns non-const handles to member data: '_position'", "markdown": "**\\[Line 10\\] Public member function 'getPosition' returns non\\-const handles to member data: '\\_position'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "509b2538-5336-3931-8f50-68773dbc1996" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "HICPP-9_1_4-a", "level": "warning", "message": { "text": "Public member function 'getPosition' returns non-const handles to member data: '_position'", "markdown": "**\\[Line 10\\] Public member function 'getPosition' returns non\\-const handles to member data: '\\_position'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "a17ddc23-520d-3763-8c54-ca3fab59e726" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "AUTOSAR-A9_3_1-a", "level": "error", "message": { "text": "Public member function 'getPosition' returns non-const handles to member data: '_position'", "markdown": "**\\[Line 10\\] Public member function 'getPosition' returns non\\-const handles to member data: '\\_position'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "e8f60270-a9e5-3719-9a09-15ae7f6463fa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "OOP-36", "level": "warning", "message": { "text": "Public member function 'getPosition' returns non-const handles to member data: '_position'", "markdown": "**\\[Line 10\\] Public member function 'getPosition' returns non\\-const handles to member data: '\\_position'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "d8b288e4-77d1-38ee-8cb5-4e16310a8208" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "FORMAT-25_b", "level": "warning", "message": { "text": "'return' statement should be used with parenthesis", "markdown": "**\\[Line 10\\] 'return' statement should be used with parenthesis**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "f65d3af9-0343-3c72-84e0-7a63b92893a1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "FORMAT-03", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 10\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "170e91a5-6efa-3de1-9d26-8e510110afbe" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 46, "endColumn": 47 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 10\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "d749aefb-6ed6-3052-bcc4-5814f6605213" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 46, "endColumn": 47 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 10\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "95f0da64-aace-3737-ab7a-e1578c246685" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 46, "endColumn": 47 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 10\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-1486716559", "unbViolId": "fe816d57-257e-373a-9790-c545999eb76e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 10, "startColumn": 46, "endColumn": 47 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 12\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "55f551e4-f650-3429-b863-d35ebd3c68fb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 12\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "bd6ffee1-e38f-38c3-a290-412db6486628" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 12\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "eff1dd9d-679b-3028-b388-25352676cbbe" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-43", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 12\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "db97da89-9ddb-3994-b7ca-994206139d8b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_b", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 12\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "daa3adce-c9c9-3507-a64c-b0dab344663f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "METRICS-19", "level": "warning", "message": { "text": "Percentage of comment lines vs. all method's lines is: 0", "markdown": "**\\[Line 12\\] Percentage of comment lines vs\\. all method's lines is: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "f092d1b2-09de-3b8c-ae12-3e924127c24f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'Shape' function is not preceded by a comment", "markdown": "**\\[Line 12\\] The definition of the 'Shape' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "2a643728-6854-3029-868b-312d55da7e23" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'Shape' function is not preceded by a comment", "markdown": "**\\[Line 12\\] The definition of the 'Shape' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "6acb3692-a227-3b48-9e4f-ea672ba3cecf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'Shape' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 12\\] The 'Shape' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "1efeab18-fc84-3f75-9615-a637094f0155" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'Shape' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 12\\] The 'Shape' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "40a61076-eb69-3fe2-9895-6c4251fa7a59" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'position' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 12\\] The 'position' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "1be1daac-61e8-3b9b-a67c-4e9b241e3f66" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'position' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 12\\] The 'position' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "fe8461ab-c212-37d6-a9ac-fe93dab98ddb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "OPT-17", "level": "warning", "message": { "text": "Class 'Shape' defines an inline constructor", "markdown": "**\\[Line 12\\] Class 'Shape' defines an inline constructor**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "ac900397-3695-39ca-a184-2e3ffca5a841" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-177_b", "level": "warning", "message": { "text": "Constructor 'Shape' allowing conversion should be made explicit", "markdown": "**\\[Line 12\\] Constructor 'Shape' allowing conversion should be made explicit**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "2957d75e-24ab-31ac-90bc-ea25b810d28a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "CODSTA-CPP-04", "level": "error", "message": { "text": "Constructor 'Shape' allowing conversion should be made explicit", "markdown": "**\\[Line 12\\] Constructor 'Shape' allowing conversion should be made explicit**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "a2089620-467a-389e-9056-8f699efa4de4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "HICPP-12_1_1-a", "level": "error", "message": { "text": "Constructor 'Shape' allowing conversion should be made explicit", "markdown": "**\\[Line 12\\] Constructor 'Shape' allowing conversion should be made explicit**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "56afc76b-5d25-3ac0-a9a4-22a754060037" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'Shape' has Cyclomatic Complexity value: 1", "markdown": "**\\[Line 12\\] Function 'Shape' has Cyclomatic Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "7e0e6b62-1121-394a-baa5-27f00359ef05" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'Shape' has Essential Complexity value: 1", "markdown": "**\\[Line 12\\] Function 'Shape' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "88dd969b-c891-3235-8bbf-b844be02518c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2012-RULE-5_7_a", "level": "error", "message": { "text": "The 'Shape' identifier is the same as the name of a type defined in the testing scope", "markdown": "**\\[Line 12\\] The 'Shape' identifier is the same as the name of a type defined in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "bc3b6dfd-eeb5-3991-99bb-80e451ef2331" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRAC2012-RULE_5_7-a", "level": "error", "message": { "text": "The 'Shape' identifier is the same as the name of a type defined in the testing scope", "markdown": "**\\[Line 12\\] The 'Shape' identifier is the same as the name of a type defined in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "14f65822-4a9a-3347-b0fc-0f44df0e8795" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2008-2_10_1", "level": "error", "message": { "text": "Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '_position' declared in class", "markdown": "**\\[Line 12\\] Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '\\_position' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "90fd86d7-57ba-3192-82d2-9e78f4d92d21" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "HICPP-2_4_1-a", "level": "warning", "message": { "text": "Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '_position' declared in class", "markdown": "**\\[Line 12\\] Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '\\_position' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "2dc38398-dd84-359c-88ca-4afe4b36a0d0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "AUTOSAR-M2_10_1-a", "level": "error", "message": { "text": "Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '_position' declared in class", "markdown": "**\\[Line 12\\] Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '\\_position' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "424d0ec4-3660-3155-a403-23d0745a3c21" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "NAMING-47", "level": "warning", "message": { "text": "Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '_position' declared in class", "markdown": "**\\[Line 12\\] Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '\\_position' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "12954ac3-3196-36e0-9069-79707cc0f16e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "OPT-14", "level": "warning", "message": { "text": "The parameter 'position' of function 'Shape' is passed by value", "markdown": "**\\[Line 12\\] The parameter 'position' of function 'Shape' is passed by value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "ddf5720d-ea65-3e98-95fd-8bcf8ea7b913" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "JSF-125_a", "level": "warning", "message": { "text": "The parameter 'position' of function 'Shape' is passed by value", "markdown": "**\\[Line 12\\] The parameter 'position' of function 'Shape' is passed by value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "b997fe59-827a-36e8-93fd-4fa2443c5612" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "JSF-117", "level": "warning", "message": { "text": "The parameter 'position' of function 'Shape' is passed by value", "markdown": "**\\[Line 12\\] The parameter 'position' of function 'Shape' is passed by value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "f0b28c43-d692-3b2b-9752-20b72ca7743c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier 'position' differs only by presence\/absence of the underscore character from identifier '_position' declared in file 'Shapes.hpp'", "markdown": "**\\[Line 12\\] The identifier 'position' differs only by presence\/absence of the underscore character from identifier '\\_position' declared in file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "e1b6d89a-cc97-32ac-b769-3217650f9d5a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier 'position' differs only by presence\/absence of the underscore character from identifier '_position' declared in file 'Shapes.hpp'", "markdown": "**\\[Line 12\\] The identifier 'position' differs only by presence\/absence of the underscore character from identifier '\\_position' declared in file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "b646fba4-8de2-3eed-90ce-47fe99b780bf" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 17, "endColumn": 18 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 12\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "01efdae9-560f-3b36-93ad-c29badc0e649" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 12\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "8e25a763-28e7-315b-823e-67545a552871" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 12\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "469057311", "unbViolId": "878b81cf-d1ea-30d9-8105-49000383d3c6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 12, "startColumn": 50, "endColumn": 51 } } } ] }, { "ruleId": "FORMAT-02", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 15\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "cd8e839b-6fd7-3527-ba02-fd7a378421b0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-34", "level": "warning", "message": { "text": "Opening '{' and closing '}' should be in the same column", "markdown": "**\\[Line 15\\] Opening '\\{' and closing '\\}' should be in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "4a0f417a-77b8-3481-b6d5-3b830e8d656b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-098", "level": "warning", "message": { "text": "Do not declare the 'LineSegment' type in the global namespace", "markdown": "**\\[Line 15\\] Do not declare the 'LineSegment' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "47104c2f-06b2-3f03-be23-289e31dd92e5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-M7_3_1-a", "level": "error", "message": { "text": "Do not declare the 'LineSegment' type in the global namespace", "markdown": "**\\[Line 15\\] Do not declare the 'LineSegment' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "a1f58ee3-4e8e-33df-aa2b-fbf2a492a52a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-CPP-36", "level": "warning", "message": { "text": "Do not declare the 'LineSegment' type in the global namespace", "markdown": "**\\[Line 15\\] Do not declare the 'LineSegment' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "2a129892-dfa9-3de7-9c4a-393566073d80" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2008-7_3_1", "level": "error", "message": { "text": "Do not declare the 'LineSegment' type in the global namespace", "markdown": "**\\[Line 15\\] Do not declare the 'LineSegment' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "bc0d7f7d-f9bb-348c-9129-bfffa2cfa69f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The declaration of the 'LineSegment' type should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 15\\] The declaration of the 'LineSegment' type should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "7993c777-a147-386c-a6ac-6995f5a3bd6e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The declaration of the 'LineSegment' type should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 15\\] The declaration of the 'LineSegment' type should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "cb05233f-54ff-393d-8b8b-1170a699f839" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-057_a", "level": "warning", "message": { "text": "Public section must be before protected and private sections", "markdown": "**\\[Line 15\\] Public section must be before protected and private sections**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "192d5339-ac7b-3431-ba90-9853d2484240" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-CPP-46", "level": "warning", "message": { "text": "Public section must be before protected and private sections", "markdown": "**\\[Line 15\\] Public section must be before protected and private sections**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "ecd674d9-0270-3a20-a93d-66daab246c5c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A12_4_2-a", "level": "warning", "message": { "text": "Class 'LineSegment' should be final", "markdown": "**\\[Line 15\\] Class 'LineSegment' should be final**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "a95a7dbb-3c88-3846-b622-2daedf006cdd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-MCPP-23", "level": "warning", "message": { "text": "Class 'LineSegment' should be final", "markdown": "**\\[Line 15\\] Class 'LineSegment' should be final**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "83cf1012-3961-3bf1-b913-e48c50f2a132" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare default constructor in 'LineSegment'", "markdown": "**\\[Line 15\\] Explicitly declare default constructor in 'LineSegment'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "6993893a-ca27-3e8e-9f81-623b557858fc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare destructor in 'LineSegment'", "markdown": "**\\[Line 15\\] Explicitly declare destructor in 'LineSegment'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "ef9e5d0c-3b07-396b-b9c4-709ea0f8f796" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare copy assignment operator in 'LineSegment'", "markdown": "**\\[Line 15\\] Explicitly declare copy assignment operator in 'LineSegment'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "b580226f-e67b-3cc1-a8f9-30fd22cb0391" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare move assignment operator in 'LineSegment'", "markdown": "**\\[Line 15\\] Explicitly declare move assignment operator in 'LineSegment'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "7a1794f1-8fa4-3709-a0b9-61c3f2829944" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare copy constructor in 'LineSegment'", "markdown": "**\\[Line 15\\] Explicitly declare copy constructor in 'LineSegment'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "5c6eda47-8f20-323c-bf41-2d1aeefe916e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare move constructor in 'LineSegment'", "markdown": "**\\[Line 15\\] Explicitly declare move constructor in 'LineSegment'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "291a3693-d2c3-3fd1-a477-cdaa56e44845" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MRM-04", "level": "warning", "message": { "text": "Class 'LineSegment' missing assignment operator or special comment", "markdown": "**\\[Line 15\\] Class 'LineSegment' missing assignment operator or special comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "cb9e48f9-2806-329c-bb6e-f6b4950c8245" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MRM-05", "level": "warning", "message": { "text": "Class 'LineSegment' missing copy constructor or special comment", "markdown": "**\\[Line 15\\] Class 'LineSegment' missing copy constructor or special comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "d89418e0-f3f7-32bf-875b-afa3e81f1f6b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MRM-47", "level": "warning", "message": { "text": "Class 'LineSegment' missing assignment operator or special comment", "markdown": "**\\[Line 15\\] Class 'LineSegment' missing assignment operator or special comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "b104834f-e60e-3cb5-86b7-d19d777ab738" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MRM-48", "level": "warning", "message": { "text": "Class 'LineSegment' missing copy constructor or special comment", "markdown": "**\\[Line 15\\] Class 'LineSegment' missing copy constructor or special comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "6045154d-4938-3f79-a492-25b2ecd92b16" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-40", "level": "warning", "message": { "text": "All letters beside the first one in name 'LineSegment' should be lowercase", "markdown": "**\\[Line 15\\] All letters beside the first one in name 'LineSegment' should be lowercase**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "d3fa7c02-d1dc-356a-8402-06801f4a7410" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "NAMING-HN-19", "level": "warning", "message": { "text": "The 'LineSegment' identifier should have the 'C' prefix", "markdown": "**\\[Line 15\\] The 'LineSegment' identifier should have the 'C' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "79672e72-1c70-346e-86a2-e7249bfae85c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "OOP-23", "level": "error", "message": { "text": "Class 'LineSegment' has virtual functions without a virtual destructor", "markdown": "**\\[Line 15\\] Class 'LineSegment' has virtual functions without a virtual destructor**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "bcecf20b-5637-356f-ac67-465e96191909" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2012-RULE-5_7_a", "level": "error", "message": { "text": "The type name 'LineSegment' is not a unique identifier in the testing scope", "markdown": "**\\[Line 15\\] The type name 'LineSegment' is not a unique identifier in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "43208020-a8e2-3834-a219-97ea1f9ec14b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRAC2012-RULE_5_7-a", "level": "error", "message": { "text": "The type name 'LineSegment' is not a unique identifier in the testing scope", "markdown": "**\\[Line 15\\] The type name 'LineSegment' is not a unique identifier in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "0f6244a3-709a-3ccf-9150-8a62037e5b8f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A0_1_6-a", "level": "warning", "message": { "text": "A declaration of the 'LineSegment' type which is not used has been found", "markdown": "**\\[Line 15\\] A declaration of the 'LineSegment' type which is not used has been found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "b848def1-a8a0-3cd6-9527-bd16fb824d8a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "GLOBAL-UNUSEDTYPE", "level": "warning", "message": { "text": "A declaration of the 'LineSegment' type which is not used has been found", "markdown": "**\\[Line 15\\] A declaration of the 'LineSegment' type which is not used has been found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "96e0ef97-d20d-32f4-a6c2-6393da51827b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2008-0_1_5", "level": "error", "message": { "text": "A declaration of the 'LineSegment' type which is not used has been found", "markdown": "**\\[Line 15\\] A declaration of the 'LineSegment' type which is not used has been found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-769770316", "unbViolId": "04cfef39-8398-3b6b-9536-19c315228dc1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 15, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 16\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1606009158", "unbViolId": "6d6a6921-c04b-3dac-b548-906d68393863" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 16\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1606009158", "unbViolId": "9debb589-00e3-3624-bee2-27312283d8f5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 16\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1606009158", "unbViolId": "c5191063-eb3f-38e9-8079-3419893a7269" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The '_end' member variable should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 16\\] The '\\_end' member variable should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1606009158", "unbViolId": "bd8cdc9d-aeb8-35ca-89b8-48812cd757b8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The '_end' member variable should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 16\\] The '\\_end' member variable should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1606009158", "unbViolId": "fbc1242b-df29-315f-8867-05a380befd9f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "NAMING-07", "level": "warning", "message": { "text": "Member variable '_end' shall begin with a lowercase letter", "markdown": "**\\[Line 16\\] Member variable '\\_end' shall begin with a lowercase letter**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1606009158", "unbViolId": "5dace876-377d-3f25-ad18-caa386e762fe" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "NAMING-14", "level": "warning", "message": { "text": "Naming convention not followed: _end", "markdown": "**\\[Line 16\\] Naming convention not followed: \\_end**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1606009158", "unbViolId": "d02d78c3-89a8-3631-b188-0d498f31f001" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "NAMING-33", "level": "warning", "message": { "text": "Using underscore at the beginning of the name '_end' is not allowed", "markdown": "**\\[Line 16\\] Using underscore at the beginning of the name '\\_end' is not allowed**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1606009158", "unbViolId": "8243d6bd-d2ef-3d6e-89eb-22ab6d448507" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-047", "level": "warning", "message": { "text": "Using underscore at the beginning of the name '_end' is not allowed", "markdown": "**\\[Line 16\\] Using underscore at the beginning of the name '\\_end' is not allowed**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1606009158", "unbViolId": "d001c0b8-5ff2-33fc-aff2-f9aa8aee9994" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "NAMING-HN-29", "level": "warning", "message": { "text": "The '_end' identifier should have the 'm_' prefix", "markdown": "**\\[Line 16\\] The '\\_end' identifier should have the 'm\\_' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1606009158", "unbViolId": "ae99b854-dfed-3792-867f-9a18a917d290" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier '_end' differs only by presence\/absence of the underscore character from identifier 'end' declared in file 'Shapes.hpp'", "markdown": "**\\[Line 16\\] The identifier '\\_end' differs only by presence\/absence of the underscore character from identifier 'end' declared in file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1606009158", "unbViolId": "ffcc1ea1-06f7-3e79-9067-bb650eda1168" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier '_end' differs only by presence\/absence of the underscore character from identifier 'end' declared in file 'Shapes.hpp'", "markdown": "**\\[Line 16\\] The identifier '\\_end' differs only by presence\/absence of the underscore character from identifier 'end' declared in file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1606009158", "unbViolId": "149233df-4b19-3108-bb78-5fc47a656804" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "OPT-05", "level": "warning", "message": { "text": "Private member variable '_end' is declared but not used", "markdown": "**\\[Line 16\\] Private member variable '\\_end' is declared but not used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1606009158", "unbViolId": "329f51f7-3206-3dd7-8b90-58098554e16e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "AUTOSAR-M0_1_3-c", "level": "error", "message": { "text": "Private member variable '_end' is declared but not used", "markdown": "**\\[Line 16\\] Private member variable '\\_end' is declared but not used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1606009158", "unbViolId": "8b7e79b6-92d5-33db-9bb3-9ca2c589575a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "MISRA2008-0_1_3_c", "level": "error", "message": { "text": "Private member variable '_end' is declared but not used", "markdown": "**\\[Line 16\\] Private member variable '\\_end' is declared but not used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1606009158", "unbViolId": "8462f932-4fa2-3e52-834f-7725be2e81e2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 16, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "METRICS-19", "level": "warning", "message": { "text": "Percentage of comment lines vs. all method's lines is: 0", "markdown": "**\\[Line 18\\] Percentage of comment lines vs\\. all method's lines is: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "f746221f-bb59-377e-8e49-03d5248a7b84" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 18\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "9fd8973f-c16e-3d04-ae65-cf532acecf98" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 18\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "1e25750b-dc1d-3b53-a023-96f8e4f126ee" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 18\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "9f6ff130-bc64-32c3-bbc6-9394f0f64481" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-43", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 18\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "0c6c48c0-a052-3239-807a-b96e3e745bef" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_b", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 18\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "09774a91-fd86-3383-a4ca-5f62c02eac3a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'LineSegment' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 18\\] The 'LineSegment' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "b00071a9-894f-3c10-9ab2-affb1cc1ea40" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'LineSegment' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 18\\] The 'LineSegment' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "9f05e654-286d-3d34-ade1-7cb2a94cdcf4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'position' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 18\\] The 'position' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "718ee058-fff3-33f4-8a05-6ca51adedf76" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'position' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 18\\] The 'position' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "01e863ba-8aa6-3894-9667-8f4a84c7bad7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'end' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 18\\] The 'end' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "0c21e186-20cc-31c3-a4c9-fccad00e2c1b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'end' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 18\\] The 'end' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "73ac9a03-a720-3ff6-b3d7-176b44137e56" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "OPT-17", "level": "warning", "message": { "text": "Class 'LineSegment' defines an inline constructor", "markdown": "**\\[Line 18\\] Class 'LineSegment' defines an inline constructor**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "d158bdc2-8864-35e2-88b8-e0088475a006" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'LineSegment' has Cyclomatic Complexity value: 1", "markdown": "**\\[Line 18\\] Function 'LineSegment' has Cyclomatic Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "5ed417b3-60b1-3b1e-b3a4-955d0d747f25" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'LineSegment' has Essential Complexity value: 1", "markdown": "**\\[Line 18\\] Function 'LineSegment' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "8661d17b-a4a1-3838-9b52-a4de85224392" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'LineSegment' function is not preceded by a comment", "markdown": "**\\[Line 18\\] The definition of the 'LineSegment' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "616d94c1-1d1f-3280-bbde-acea8ff41ef6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'LineSegment' function is not preceded by a comment", "markdown": "**\\[Line 18\\] The definition of the 'LineSegment' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "243f3dac-25ed-3d55-a2d5-410c84e40b21" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2012-RULE-5_7_a", "level": "error", "message": { "text": "The 'LineSegment' identifier is the same as the name of a type defined in the testing scope", "markdown": "**\\[Line 18\\] The 'LineSegment' identifier is the same as the name of a type defined in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "c211c006-5415-372a-a0d4-907c561035f9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRAC2012-RULE_5_7-a", "level": "error", "message": { "text": "The 'LineSegment' identifier is the same as the name of a type defined in the testing scope", "markdown": "**\\[Line 18\\] The 'LineSegment' identifier is the same as the name of a type defined in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "00415c85-0702-3197-bfb6-db3d84917ba4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "GLOBAL-UNUSEDFUNC", "level": "warning", "message": { "text": "The 'LineSegment' function is not used in the testing scope", "markdown": "**\\[Line 18\\] The 'LineSegment' function is not used in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "37baf484-c60e-39e4-9522-3159259e46c8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-M0_1_10-a", "level": "warning", "message": { "text": "The 'LineSegment' function is not used in the testing scope", "markdown": "**\\[Line 18\\] The 'LineSegment' function is not used in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "2957aecf-fa3e-3974-ac79-07a97ae350f9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2008-0_1_10_b", "level": "error", "message": { "text": "The 'LineSegment' function is not used in the testing scope", "markdown": "**\\[Line 18\\] The 'LineSegment' function is not used in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "b0df7c3a-ea01-3b07-b6cf-77e479554b38" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier 'position' differs only by presence\/absence of the underscore character from identifier '_position' declared in file 'Shapes.hpp'", "markdown": "**\\[Line 18\\] The identifier 'position' differs only by presence\/absence of the underscore character from identifier '\\_position' declared in file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "7d4dad9b-13d7-3f5f-b95a-d4f93cdc90a5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 23, "endColumn": 24 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier 'position' differs only by presence\/absence of the underscore character from identifier '_position' declared in file 'Shapes.hpp'", "markdown": "**\\[Line 18\\] The identifier 'position' differs only by presence\/absence of the underscore character from identifier '\\_position' declared in file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "63301f2f-d3e4-3a01-a4ec-1fb86c701d31" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 23, "endColumn": 24 } } } ] }, { "ruleId": "MISRA2008-2_10_1", "level": "error", "message": { "text": "Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '_position' declared in base class", "markdown": "**\\[Line 18\\] Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '\\_position' declared in base class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "36f2d2ce-c469-356b-b24d-a63c9c55fe4c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 23, "endColumn": 24 } } } ] }, { "ruleId": "HICPP-2_4_1-a", "level": "warning", "message": { "text": "Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '_position' declared in base class", "markdown": "**\\[Line 18\\] Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '\\_position' declared in base class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "5508af50-5f8a-39b2-9891-73a6ba1f433c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 23, "endColumn": 24 } } } ] }, { "ruleId": "AUTOSAR-M2_10_1-a", "level": "error", "message": { "text": "Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '_position' declared in base class", "markdown": "**\\[Line 18\\] Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '\\_position' declared in base class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "f4f96864-d567-3f43-aa9b-14cd8ee5e0d7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 23, "endColumn": 24 } } } ] }, { "ruleId": "NAMING-47", "level": "warning", "message": { "text": "Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '_position' declared in base class", "markdown": "**\\[Line 18\\] Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '\\_position' declared in base class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "5bea2710-589e-3040-a917-9512abca2115" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 23, "endColumn": 24 } } } ] }, { "ruleId": "OPT-14", "level": "warning", "message": { "text": "The parameter 'position' of function 'LineSegment' is passed by value", "markdown": "**\\[Line 18\\] The parameter 'position' of function 'LineSegment' is passed by value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "73432b5d-9ecf-3f04-a334-7d275ab91972" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 23, "endColumn": 24 } } } ] }, { "ruleId": "JSF-125_a", "level": "warning", "message": { "text": "The parameter 'position' of function 'LineSegment' is passed by value", "markdown": "**\\[Line 18\\] The parameter 'position' of function 'LineSegment' is passed by value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "d5f4dfe4-b9ba-3f38-8f1a-81062ecbf665" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 23, "endColumn": 24 } } } ] }, { "ruleId": "JSF-117", "level": "warning", "message": { "text": "The parameter 'position' of function 'LineSegment' is passed by value", "markdown": "**\\[Line 18\\] The parameter 'position' of function 'LineSegment' is passed by value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "90de0967-6910-3532-8aa9-067c90db5739" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 23, "endColumn": 24 } } } ] }, { "ruleId": "MISRA2008-2_10_1", "level": "error", "message": { "text": "Identifier name: 'end' differs only by presence\/absence of the underscore character from identifier name: '_end' declared in class", "markdown": "**\\[Line 18\\] Identifier name: 'end' differs only by presence\/absence of the underscore character from identifier name: '\\_end' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "e3298a11-2607-3ac1-aad1-70e2bea7f9b5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "HICPP-2_4_1-a", "level": "warning", "message": { "text": "Identifier name: 'end' differs only by presence\/absence of the underscore character from identifier name: '_end' declared in class", "markdown": "**\\[Line 18\\] Identifier name: 'end' differs only by presence\/absence of the underscore character from identifier name: '\\_end' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "b319067a-5a1c-3d14-b7fa-ad68b9d5d18e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "AUTOSAR-M2_10_1-a", "level": "error", "message": { "text": "Identifier name: 'end' differs only by presence\/absence of the underscore character from identifier name: '_end' declared in class", "markdown": "**\\[Line 18\\] Identifier name: 'end' differs only by presence\/absence of the underscore character from identifier name: '\\_end' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "b84f839e-5301-3054-9901-de1381dd2ecd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "NAMING-47", "level": "warning", "message": { "text": "Identifier name: 'end' differs only by presence\/absence of the underscore character from identifier name: '_end' declared in class", "markdown": "**\\[Line 18\\] Identifier name: 'end' differs only by presence\/absence of the underscore character from identifier name: '\\_end' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "15925bad-3e3c-3e35-81c3-c293ebbccf18" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "OPT-14", "level": "warning", "message": { "text": "The parameter 'end' of function 'LineSegment' is passed by value", "markdown": "**\\[Line 18\\] The parameter 'end' of function 'LineSegment' is passed by value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "9a777ebb-fdaf-333c-aab2-0f353d1e1390" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "JSF-125_a", "level": "warning", "message": { "text": "The parameter 'end' of function 'LineSegment' is passed by value", "markdown": "**\\[Line 18\\] The parameter 'end' of function 'LineSegment' is passed by value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "ddc45010-7cce-305e-b7f2-da7c8a9e9525" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "JSF-117", "level": "warning", "message": { "text": "The parameter 'end' of function 'LineSegment' is passed by value", "markdown": "**\\[Line 18\\] The parameter 'end' of function 'LineSegment' is passed by value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "1321da24-e814-3cd3-a665-bc962f56ba8c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier 'end' differs only by presence\/absence of the underscore character from identifier '_end' declared in file 'Shapes.hpp'", "markdown": "**\\[Line 18\\] The identifier 'end' differs only by presence\/absence of the underscore character from identifier '\\_end' declared in file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "a4e87832-1b7d-32fb-9c1c-2928955b7f5e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier 'end' differs only by presence\/absence of the underscore character from identifier '_end' declared in file 'Shapes.hpp'", "markdown": "**\\[Line 18\\] The identifier 'end' differs only by presence\/absence of the underscore character from identifier '\\_end' declared in file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "b5ddac51-3688-369a-8ac1-d4b5b62e3a61" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 39, "endColumn": 40 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 18\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "5b0696ed-ca11-3f63-81c7-abed54ffcfa7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 74, "endColumn": 75 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 18\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "ea678c1b-0c7c-37d5-8f00-2ab7315a2ae9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 74, "endColumn": 75 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 18\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "460467427", "unbViolId": "8e0456c9-a787-35e3-81b3-094cb473c7d3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 18, "startColumn": 74, "endColumn": 75 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 19\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "2fcb979e-e1ca-3473-89f9-8a73b46a3af5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 19\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "f2f72fd5-5895-3242-892d-78e8188b5cd6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 19\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "4323de29-51b4-3893-acf5-3c63f99d6224" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-43", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 19\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "bb0f38c9-2db8-31a4-ba3e-5a077b11bc90" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_b", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 19\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "f9c115a4-f7cf-3d8e-ba73-491821456498" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "METRICS-19", "level": "warning", "message": { "text": "Percentage of comment lines vs. all method's lines is: 0", "markdown": "**\\[Line 19\\] Percentage of comment lines vs\\. all method's lines is: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "0c9e0120-17f8-37a1-b116-63e0a1661381" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-02", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 19\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "3cb93d27-f352-3cbf-b3fd-2a4e5d2e89dd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-34", "level": "warning", "message": { "text": "Opening '{' and closing '}' should be in the same column", "markdown": "**\\[Line 19\\] Opening '\\{' and closing '\\}' should be in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "d45b74d5-d917-3822-b1f0-6232850cccaa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 19\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "0b13bfd1-2ef0-3028-a66f-c965082758b7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 19\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "b140bdfc-7c63-33c8-8027-5fc3a7cf07f0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 19\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "ff63a39a-7f57-36b7-b00d-d409e2627e2e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 19\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "62e3252f-bc91-3939-a201-1da29fca4f23" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 19\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "38c4c96a-752f-3be4-8822-082e79eb4897" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 19\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "b54ecc44-5b87-3b94-9d41-458a1e6dcb8f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 19\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "79f742d7-04fb-39d2-8860-f3499a337010" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'getArea' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 19\\] The 'getArea' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "e466103f-efd1-330f-96ac-eb5560337323" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'getArea' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 19\\] The 'getArea' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "9a4fef16-fe80-3223-90be-d45baab3df19" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'getArea' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 19\\] The 'getArea' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "a1825197-3b9e-30e9-b020-158f8a4ddab9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'getArea' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 19\\] The 'getArea' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "a84353f3-3155-365d-ada5-7666fafd279d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "CODSTA-CPP-25", "level": "warning", "message": { "text": "Make virtual functions nonpublic, and public functions nonvirtual: getArea", "markdown": "**\\[Line 19\\] Make virtual functions nonpublic, and public functions nonvirtual: getArea**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "048b0f76-909c-3f1e-b1e9-6c004dc9648d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "CODSTA-MCPP-05", "level": "warning", "message": { "text": "The 'getArea' function should be declared with the 'override' specifier", "markdown": "**\\[Line 19\\] The 'getArea' function should be declared with the 'override' specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "f2ee3ea3-0d25-3156-8088-1fed4dee06ec" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A10_3_2-a", "level": "error", "message": { "text": "The 'getArea' function should be declared with the 'override' specifier", "markdown": "**\\[Line 19\\] The 'getArea' function should be declared with the 'override' specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "1a0cf01d-bae4-36fc-a029-612f222e1b4f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "HICPP-10_2_1-a", "level": "warning", "message": { "text": "The 'getArea' function should be declared with the 'override' specifier", "markdown": "**\\[Line 19\\] The 'getArea' function should be declared with the 'override' specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "44f0e80f-7d74-3afb-9c02-d35321924369" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "CODSTA-MCPP-24", "level": "warning", "message": { "text": "Declaration of virtual function 'getArea' should have 'override' or 'final' specifier", "markdown": "**\\[Line 19\\] Declaration of virtual function 'getArea' should have 'override' or 'final' specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "d39bf5a6-ad97-3da6-8994-35c8ae75c1e5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A10_3_1-a", "level": "error", "message": { "text": "Declaration of virtual function 'getArea' should have 'override' or 'final' specifier", "markdown": "**\\[Line 19\\] Declaration of virtual function 'getArea' should have 'override' or 'final' specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "8514ca1a-b389-32fe-8276-3f9b00667259" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "FORMAT-28", "level": "warning", "message": { "text": "Return type is not placed in line before function 'getArea'", "markdown": "**\\[Line 19\\] Return type is not placed in line before function 'getArea'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "f99de73b-d439-31bd-9ac0-7282d6e6fa15" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'getArea' has Cyclomatic Complexity value: 1", "markdown": "**\\[Line 19\\] Function 'getArea' has Cyclomatic Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "1d568f9d-b235-3415-b7e0-bd0b622c585a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'getArea' has Essential Complexity value: 1", "markdown": "**\\[Line 19\\] Function 'getArea' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "b180e506-b5a7-3552-a3ce-19c88263f9a6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "NAMING-17", "level": "warning", "message": { "text": "Naming convention not followed: getArea", "markdown": "**\\[Line 19\\] Naming convention not followed: getArea**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "1ceb2aa2-2561-3994-80ae-d766eabcc029" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "OOP-21", "level": "warning", "message": { "text": "Use the virtual keyword for 'getArea' function", "markdown": "**\\[Line 19\\] Use the virtual keyword for 'getArea' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "7bbf0a40-9332-30c1-951b-4df1f0e6d828" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "MISRA2008-10_3_2", "level": "error", "message": { "text": "Use the virtual keyword for 'getArea' function", "markdown": "**\\[Line 19\\] Use the virtual keyword for 'getArea' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "3d3edd8a-aaeb-36c8-8652-f5a5beb5c584" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "OOP-25", "level": "warning", "message": { "text": "Function 'getArea' is both virtual and inline", "markdown": "**\\[Line 19\\] Function 'getArea' is both virtual and inline**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "eb3606df-43a0-36ec-a92b-f6b330a08930" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'getArea' function is not preceded by a comment", "markdown": "**\\[Line 19\\] The definition of the 'getArea' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "3f7b9185-03ee-3d4d-8636-b7471be1a703" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'getArea' function is not preceded by a comment", "markdown": "**\\[Line 19\\] The definition of the 'getArea' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "3c535e17-12f0-3067-afa8-10d930ee22ab" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "JSF-051", "level": "warning", "message": { "text": "The name 'getArea' should be composed only of lowercase letters", "markdown": "**\\[Line 19\\] The name 'getArea' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "6c57a7c4-3d33-3ce9-8190-3b796008e331" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "NAMING-44", "level": "warning", "message": { "text": "The name 'getArea' should be composed only of lowercase letters", "markdown": "**\\[Line 19\\] The name 'getArea' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "6c6689be-a692-3d9d-b730-93ddb8a0fdca" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "MISRA2008-5_0_5_b", "level": "error", "message": { "text": "Implicit conversion from integral to floating type in function's return", "markdown": "**\\[Line 19\\] Implicit conversion from integral to floating type in function's return**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "03e00f6c-d430-3ba9-a2b9-befad4ef7825" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 30, "endColumn": 31 } } } ] }, { "ruleId": "CERT_C-EXP39-a", "level": "warning", "message": { "text": "Implicit conversion from integral to floating type in function's return", "markdown": "**\\[Line 19\\] Implicit conversion from integral to floating type in function's return**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "4ec62830-7803-32c9-a501-8cc552d70d5f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 30, "endColumn": 31 } } } ] }, { "ruleId": "AUTOSAR-M5_0_5-a", "level": "error", "message": { "text": "Implicit conversion from integral to floating type in function's return", "markdown": "**\\[Line 19\\] Implicit conversion from integral to floating type in function's return**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "4ad2a0c7-1fbe-3b13-81b5-b7bd15d9f5a9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 30, "endColumn": 31 } } } ] }, { "ruleId": "MISRA2004-10_1_b", "level": "warning", "message": { "text": "Implicit conversion from integral to floating type in function's return", "markdown": "**\\[Line 19\\] Implicit conversion from integral to floating type in function's return**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "da2bdd2f-d6de-3d5c-bd62-a489798e9017" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 30, "endColumn": 31 } } } ] }, { "ruleId": "PB-05", "level": "warning", "message": { "text": "Function 'getArea' has declared return type 'double' but returns value of type 'int'", "markdown": "**\\[Line 19\\] Function 'getArea' has declared return type 'double' but returns value of type 'int'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "c452c367-2404-3af0-8699-f4b19fd965c1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 30, "endColumn": 31 } } } ] }, { "ruleId": "FORMAT-25_b", "level": "warning", "message": { "text": "'return' statement should be used with parenthesis", "markdown": "**\\[Line 19\\] 'return' statement should be used with parenthesis**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "7d8a3f5f-175e-384e-8566-b12c97ecab33" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 30, "endColumn": 31 } } } ] }, { "ruleId": "FORMAT-03", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 19\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "3d9427ae-7ca4-3bbe-8f87-d964347357e7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 19\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "5df59bdd-922c-3583-af8b-63b2e77ada83" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 19\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "8364332a-45df-3736-aaa6-29fa8a97df0c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 19\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-392957557", "unbViolId": "de523585-c3c3-3063-b8b8-7ede18f70227" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 19, "startColumn": 40, "endColumn": 41 } } } ] }, { "ruleId": "FORMAT-02", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 22\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "c792a927-1734-359b-a860-f29911b7b49b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-34", "level": "warning", "message": { "text": "Opening '{' and closing '}' should be in the same column", "markdown": "**\\[Line 22\\] Opening '\\{' and closing '\\}' should be in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "12c51572-fdb3-3010-85ed-b98571b258d4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-098", "level": "warning", "message": { "text": "Do not declare the 'Circle' type in the global namespace", "markdown": "**\\[Line 22\\] Do not declare the 'Circle' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "2aa677d9-147c-3ba5-9bc4-7583a8bdf03e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-M7_3_1-a", "level": "error", "message": { "text": "Do not declare the 'Circle' type in the global namespace", "markdown": "**\\[Line 22\\] Do not declare the 'Circle' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "7a841724-94dd-3651-9bab-289b850fe8ff" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-CPP-36", "level": "warning", "message": { "text": "Do not declare the 'Circle' type in the global namespace", "markdown": "**\\[Line 22\\] Do not declare the 'Circle' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "56d72ce3-97c9-3045-967f-d519d69da339" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2008-7_3_1", "level": "error", "message": { "text": "Do not declare the 'Circle' type in the global namespace", "markdown": "**\\[Line 22\\] Do not declare the 'Circle' type in the global namespace**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "72a75ff1-2fb8-373a-941c-074ad57afef8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The declaration of the 'Circle' type should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 22\\] The declaration of the 'Circle' type should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "856b9eff-031a-38fa-829e-0b4b8b5e2c16" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The declaration of the 'Circle' type should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 22\\] The declaration of the 'Circle' type should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "976e3606-b5e8-3595-9340-f8c57149f954" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-057_a", "level": "warning", "message": { "text": "Public section must be before protected and private sections", "markdown": "**\\[Line 22\\] Public section must be before protected and private sections**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "0ccc1972-a7f8-35e2-8752-7a93bab21cb3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-CPP-46", "level": "warning", "message": { "text": "Public section must be before protected and private sections", "markdown": "**\\[Line 22\\] Public section must be before protected and private sections**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "d12c67bc-1a20-3780-be0b-2dae75de9b95" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "AUTOSAR-A12_4_2-a", "level": "warning", "message": { "text": "Class 'Circle' should be final", "markdown": "**\\[Line 22\\] Class 'Circle' should be final**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "bab82572-8ccd-3d5e-9e79-f170e1110be8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "CODSTA-MCPP-23", "level": "warning", "message": { "text": "Class 'Circle' should be final", "markdown": "**\\[Line 22\\] Class 'Circle' should be final**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "e9a05679-0617-3391-b785-08b8aac7864d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare default constructor in 'Circle'", "markdown": "**\\[Line 22\\] Explicitly declare default constructor in 'Circle'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "4d59b8b1-e105-3d61-bea2-90b19c9f8b85" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare destructor in 'Circle'", "markdown": "**\\[Line 22\\] Explicitly declare destructor in 'Circle'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "fe26786a-4dcd-36a0-888a-95e416cad072" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare copy assignment operator in 'Circle'", "markdown": "**\\[Line 22\\] Explicitly declare copy assignment operator in 'Circle'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "16e5044f-f65b-325b-9ea2-9d1dbac07ec8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare move assignment operator in 'Circle'", "markdown": "**\\[Line 22\\] Explicitly declare move assignment operator in 'Circle'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "3d9fb98d-8922-3f34-8b96-466de6f567ca" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare copy constructor in 'Circle'", "markdown": "**\\[Line 22\\] Explicitly declare copy constructor in 'Circle'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "60e5273e-51d1-3e68-9c70-1aa014b2723b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "HICPP-12_5_1-a", "level": "warning", "message": { "text": "Explicitly declare move constructor in 'Circle'", "markdown": "**\\[Line 22\\] Explicitly declare move constructor in 'Circle'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "781816b5-2ed0-3eac-b728-aa09f0c1609c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MRM-04", "level": "warning", "message": { "text": "Class 'Circle' missing assignment operator or special comment", "markdown": "**\\[Line 22\\] Class 'Circle' missing assignment operator or special comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "b0a346cb-91fa-3295-a2dc-3e456537e8bc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MRM-05", "level": "warning", "message": { "text": "Class 'Circle' missing copy constructor or special comment", "markdown": "**\\[Line 22\\] Class 'Circle' missing copy constructor or special comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "2a709637-a1b8-3568-8eff-bbb661c9edd2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MRM-47", "level": "warning", "message": { "text": "Class 'Circle' missing assignment operator or special comment", "markdown": "**\\[Line 22\\] Class 'Circle' missing assignment operator or special comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "a2ed8512-3f9f-38a4-9729-183664b62a89" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MRM-48", "level": "warning", "message": { "text": "Class 'Circle' missing copy constructor or special comment", "markdown": "**\\[Line 22\\] Class 'Circle' missing copy constructor or special comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "e2c7018d-68e7-3b01-85c2-2fd677450041" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "OOP-23", "level": "error", "message": { "text": "Class 'Circle' has virtual functions without a virtual destructor", "markdown": "**\\[Line 22\\] Class 'Circle' has virtual functions without a virtual destructor**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "ddba2f08-4df1-31f3-b480-d2a8b152c129" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRA2012-RULE-5_7_a", "level": "error", "message": { "text": "The type name 'Circle' is not a unique identifier in the testing scope", "markdown": "**\\[Line 22\\] The type name 'Circle' is not a unique identifier in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "b7b122ae-c3c6-31e6-815e-caded36cf2d7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "MISRAC2012-RULE_5_7-a", "level": "error", "message": { "text": "The type name 'Circle' is not a unique identifier in the testing scope", "markdown": "**\\[Line 22\\] The type name 'Circle' is not a unique identifier in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "2093521939", "unbViolId": "97572d86-a1c3-3159-820e-87895c31721a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 22, "startColumn": 7, "endColumn": 8 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 23\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "e0f6fdf2-ee3f-3f30-9012-ab9d1aa1f3b5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 23\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "74e76ac7-9e1a-37c0-a97d-5ca24e845648" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 23\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "10527a22-f361-3b64-92cd-423a75c8a370" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 23\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "a0fba808-63bf-3970-9b69-3fb89ec01d50" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 23\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "cd27c747-f7aa-37cc-998b-354399f2e1b7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 23\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "ef850702-caa2-3c03-8943-ab0c51ef452b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 23\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "7b8a6c99-26de-3c3c-9b38-9e8322e65895" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 23\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "4ff16dcb-ddb5-35b2-a60d-2340886fa0a8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 23\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "398e4e73-c0fe-3559-a71d-26babf4e8357" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 23\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "cb4b668f-0039-3690-84e6-c83a9ba65155" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 2, "endColumn": 3 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The '_radius' member variable should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 23\\] The '\\_radius' member variable should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "85c8279d-27fa-3b1f-a710-cbf8d5a73446" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The '_radius' member variable should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 23\\] The '\\_radius' member variable should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "12e6c7a2-5dd9-3c6a-b298-049787f4b732" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-07", "level": "warning", "message": { "text": "Member variable '_radius' shall begin with a lowercase letter", "markdown": "**\\[Line 23\\] Member variable '\\_radius' shall begin with a lowercase letter**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "d061710f-6b3b-3048-a405-988e0e6cbac2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-14", "level": "warning", "message": { "text": "Naming convention not followed: _radius", "markdown": "**\\[Line 23\\] Naming convention not followed: \\_radius**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "40aa6973-d8aa-3c4d-8f31-ad824ba88de4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-15", "level": "warning", "message": { "text": "Naming convention not followed: _radius", "markdown": "**\\[Line 23\\] Naming convention not followed: \\_radius**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "b5477a20-ff59-3901-b4b2-efc180ca644e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-33", "level": "warning", "message": { "text": "Using underscore at the beginning of the name '_radius' is not allowed", "markdown": "**\\[Line 23\\] Using underscore at the beginning of the name '\\_radius' is not allowed**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "b33b99f1-3c51-3a35-8b59-40a02d5b6e81" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-047", "level": "warning", "message": { "text": "Using underscore at the beginning of the name '_radius' is not allowed", "markdown": "**\\[Line 23\\] Using underscore at the beginning of the name '\\_radius' is not allowed**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "8c3c30da-c8bc-3197-be0d-604e99d08c7f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-HN-12", "level": "warning", "message": { "text": "The '_radius' identifier should have the 'd' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 23\\] The '\\_radius' identifier should have the 'd' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "7621c0e7-280e-3a4f-9eea-e893ad84cf2c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-HN-29", "level": "warning", "message": { "text": "The '_radius' identifier should have the 'm_' prefix", "markdown": "**\\[Line 23\\] The '\\_radius' identifier should have the 'm\\_' prefix**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "43d37a8a-b6a1-3ba9-9a12-e7ae710073fb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier '_radius' differs only by presence\/absence of the underscore character from identifier 'radius' declared in file 'Shapes.hpp'", "markdown": "**\\[Line 23\\] The identifier '\\_radius' differs only by presence\/absence of the underscore character from identifier 'radius' declared in file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "1b3a9a82-b5c7-3cd6-a6e3-ca044dbd5d10" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier '_radius' differs only by presence\/absence of the underscore character from identifier 'radius' declared in file 'Shapes.hpp'", "markdown": "**\\[Line 23\\] The identifier '\\_radius' differs only by presence\/absence of the underscore character from identifier 'radius' declared in file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1798682864", "unbViolId": "af60f396-1113-3c3a-b5d0-31b76ff742b9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 23, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "METRICS-19", "level": "warning", "message": { "text": "Percentage of comment lines vs. all method's lines is: 0", "markdown": "**\\[Line 25\\] Percentage of comment lines vs\\. all method's lines is: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "83b3216e-7f56-3f34-bf3e-13e083227f83" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 25\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "6ddc0bfb-01d4-3743-a180-c3834a0fb375" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 25\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "9584585b-03b9-30e8-9af9-c2c35899fe08" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 25\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "01a75ea1-0350-3a35-8f5b-12d077ced4b8" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-43", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 25\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "10d681d2-5f71-3877-93ca-eaf5fbcffc60" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_b", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 25\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "2a652659-1a8f-322d-ac61-de19c798989c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'Circle' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 25\\] The 'Circle' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "0d6ea433-7380-3070-aad8-22524a8a7a85" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'Circle' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 25\\] The 'Circle' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "03733a02-ef47-3a11-80f4-6213eab21959" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'position' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 25\\] The 'position' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "e9aea795-7edc-3e55-9c25-be36e1006f7d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'position' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 25\\] The 'position' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "d6eb0fe9-f526-3970-9f4d-3e69e4816f85" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'radius' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 25\\] The 'radius' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "ccdc118a-e984-36da-af69-0f2bee73e059" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'radius' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 25\\] The 'radius' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "1223ec42-9c7c-3f8e-9cb0-ee72d1f984ba" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "OPT-17", "level": "warning", "message": { "text": "Class 'Circle' defines an inline constructor", "markdown": "**\\[Line 25\\] Class 'Circle' defines an inline constructor**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "55bee1e8-db70-3cc2-8b44-2188ddcf4ad6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'Circle' has Cyclomatic Complexity value: 1", "markdown": "**\\[Line 25\\] Function 'Circle' has Cyclomatic Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "8356e27d-2391-3ee4-a6f4-4330d4e66a3d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'Circle' has Essential Complexity value: 1", "markdown": "**\\[Line 25\\] Function 'Circle' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "c478bcf2-a720-3ed8-9600-e32b413fb1d5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'Circle' function is not preceded by a comment", "markdown": "**\\[Line 25\\] The definition of the 'Circle' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "373a2d00-8462-3726-91bc-d2f17e6a3cc2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'Circle' function is not preceded by a comment", "markdown": "**\\[Line 25\\] The definition of the 'Circle' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "b4a6151d-436d-3ab6-b4d6-58c9a06b2519" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2012-RULE-5_7_a", "level": "error", "message": { "text": "The 'Circle' identifier is the same as the name of a type defined in the testing scope", "markdown": "**\\[Line 25\\] The 'Circle' identifier is the same as the name of a type defined in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "d177858a-6fac-333a-b3ee-94bd41f81831" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRAC2012-RULE_5_7-a", "level": "error", "message": { "text": "The 'Circle' identifier is the same as the name of a type defined in the testing scope", "markdown": "**\\[Line 25\\] The 'Circle' identifier is the same as the name of a type defined in the testing scope**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "f4e4e691-ce63-3880-a12a-e712ced11839" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier 'position' differs only by presence\/absence of the underscore character from identifier '_position' declared in file 'Shapes.hpp'", "markdown": "**\\[Line 25\\] The identifier 'position' differs only by presence\/absence of the underscore character from identifier '\\_position' declared in file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "cfbed156-2b29-3807-93f5-a1de082e072a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier 'position' differs only by presence\/absence of the underscore character from identifier '_position' declared in file 'Shapes.hpp'", "markdown": "**\\[Line 25\\] The identifier 'position' differs only by presence\/absence of the underscore character from identifier '\\_position' declared in file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "071fce26-eed2-3ed9-a6d8-d340eddc101e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "MISRA2008-2_10_1", "level": "error", "message": { "text": "Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '_position' declared in base class", "markdown": "**\\[Line 25\\] Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '\\_position' declared in base class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "72ba2a3d-66e3-35f6-a2c5-aadad4e36aa6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "HICPP-2_4_1-a", "level": "warning", "message": { "text": "Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '_position' declared in base class", "markdown": "**\\[Line 25\\] Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '\\_position' declared in base class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "3b6cf7f8-d8fb-38c9-afe3-7279685e8a21" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "AUTOSAR-M2_10_1-a", "level": "error", "message": { "text": "Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '_position' declared in base class", "markdown": "**\\[Line 25\\] Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '\\_position' declared in base class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "9668538f-c4cb-3514-a854-fe7daab34302" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "NAMING-47", "level": "warning", "message": { "text": "Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '_position' declared in base class", "markdown": "**\\[Line 25\\] Identifier name: 'position' differs only by presence\/absence of the underscore character from identifier name: '\\_position' declared in base class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "34380c04-5a5b-3585-8989-784cb590ac52" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "OPT-14", "level": "warning", "message": { "text": "The parameter 'position' of function 'Circle' is passed by value", "markdown": "**\\[Line 25\\] The parameter 'position' of function 'Circle' is passed by value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "1a1be728-1793-3587-9c03-14b52d262e56" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "JSF-125_a", "level": "warning", "message": { "text": "The parameter 'position' of function 'Circle' is passed by value", "markdown": "**\\[Line 25\\] The parameter 'position' of function 'Circle' is passed by value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "6816a222-4cba-3445-8b78-f92184891c63" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "JSF-117", "level": "warning", "message": { "text": "The parameter 'position' of function 'Circle' is passed by value", "markdown": "**\\[Line 25\\] The parameter 'position' of function 'Circle' is passed by value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "3ff103f7-34d9-38f0-a31f-925ca33710d3" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 18, "endColumn": 19 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 25\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "005084f8-3a5a-36c5-9e9a-492f322e18ca" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 25\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "68d9b08d-5a07-32a9-be13-fab8fc5647e0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 25\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "96e825cd-1f18-32b9-940b-d86ffa77111c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 25\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "c3f95d1c-b84b-32f0-97e4-0f3f9ecac35d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 25\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "90cbfd8d-6315-35a5-91b9-256bc9c3db36" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 25\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "addc403c-0bdf-3ea7-8660-6574d88aa8a4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 25\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "db44aa1d-0848-34c1-870c-84c7edbaa3e1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 28, "endColumn": 29 } } } ] }, { "ruleId": "MISRA2008-2_10_1", "level": "error", "message": { "text": "Identifier name: 'radius' differs only by presence\/absence of the underscore character from identifier name: '_radius' declared in class", "markdown": "**\\[Line 25\\] Identifier name: 'radius' differs only by presence\/absence of the underscore character from identifier name: '\\_radius' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "0650bbc3-e0a6-39be-a7d6-eac690164e04" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 35, "endColumn": 36 } } } ] }, { "ruleId": "HICPP-2_4_1-a", "level": "warning", "message": { "text": "Identifier name: 'radius' differs only by presence\/absence of the underscore character from identifier name: '_radius' declared in class", "markdown": "**\\[Line 25\\] Identifier name: 'radius' differs only by presence\/absence of the underscore character from identifier name: '\\_radius' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "70ed29e7-99da-3ddf-b839-e2419e325d52" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 35, "endColumn": 36 } } } ] }, { "ruleId": "AUTOSAR-M2_10_1-a", "level": "error", "message": { "text": "Identifier name: 'radius' differs only by presence\/absence of the underscore character from identifier name: '_radius' declared in class", "markdown": "**\\[Line 25\\] Identifier name: 'radius' differs only by presence\/absence of the underscore character from identifier name: '\\_radius' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "ebf8f0d8-bf23-349d-beae-8bdf7a3dbd67" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 35, "endColumn": 36 } } } ] }, { "ruleId": "NAMING-47", "level": "warning", "message": { "text": "Identifier name: 'radius' differs only by presence\/absence of the underscore character from identifier name: '_radius' declared in class", "markdown": "**\\[Line 25\\] Identifier name: 'radius' differs only by presence\/absence of the underscore character from identifier name: '\\_radius' declared in class**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "09852d02-6b88-33f3-a502-682c976b5fae" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 35, "endColumn": 36 } } } ] }, { "ruleId": "NAMING-HN-12", "level": "warning", "message": { "text": "The 'radius' identifier should have the 'd' prefix followed by a capital letter or an underscore", "markdown": "**\\[Line 25\\] The 'radius' identifier should have the 'd' prefix followed by a capital letter or an underscore**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "cff954b7-d7e1-3db7-bbf7-f2d4325abe89" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 35, "endColumn": 36 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier 'radius' differs only by presence\/absence of the underscore character from identifier '_radius' declared in file 'Shapes.hpp'", "markdown": "**\\[Line 25\\] The identifier 'radius' differs only by presence\/absence of the underscore character from identifier '\\_radius' declared in file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "c4be9b26-a5cb-303b-b26d-c2b5e0124f2e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 35, "endColumn": 36 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier 'radius' differs only by presence\/absence of the underscore character from identifier '_radius' declared in file 'Shapes.hpp'", "markdown": "**\\[Line 25\\] The identifier 'radius' differs only by presence\/absence of the underscore character from identifier '\\_radius' declared in file 'Shapes\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "bdfafbb1-06ed-3a71-99ba-02e2e304183c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 35, "endColumn": 36 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 25\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "58125e92-d3d0-3b2d-aec6-cbf88f5006bb" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 79, "endColumn": 80 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 25\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "3f595720-4347-3687-948d-6af63870dff6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 79, "endColumn": 80 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 25\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "1689459350", "unbViolId": "0a19bf39-5e5e-3a2f-a569-63dc6511b7e0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 25, "startColumn": 79, "endColumn": 80 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 26\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "a5ab54be-f636-3589-b90e-5104e983c477" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 26\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "40f39720-f72e-3b96-abbd-49995cac0a23" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 26\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "ea38564a-196c-3ac0-8e7b-64bcce28b4aa" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-43", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 26\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "9af04986-9772-3cd6-9060-755cffa6d07e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-060_b", "level": "warning", "message": { "text": "Opening '{' and closing '}' braces are not placed in the same column", "markdown": "**\\[Line 26\\] Opening '\\{' and closing '\\}' braces are not placed in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "f5de9b7c-5e8f-3f9a-83f5-764a0ae5c6f1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "METRICS-19", "level": "warning", "message": { "text": "Percentage of comment lines vs. all method's lines is: 0", "markdown": "**\\[Line 26\\] Percentage of comment lines vs\\. all method's lines is: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "cdb629ae-91c6-35b4-84fa-cef7d4f5d932" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-02", "level": "warning", "message": { "text": "Put the opening brace '{' on its own line", "markdown": "**\\[Line 26\\] Put the opening brace '\\{' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "67b589fd-5ce3-3934-9c16-8254d968644a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "FORMAT-34", "level": "warning", "message": { "text": "Opening '{' and closing '}' should be in the same column", "markdown": "**\\[Line 26\\] Opening '\\{' and closing '\\}' should be in the same column**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "393febba-d7b6-330a-be57-094dbaf07740" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 26\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "b4ce3321-92a0-3687-925e-1ac883fdbb16" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 26\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "e862c2c5-ed96-35eb-8d2b-283acd894917" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 26\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "5e01b3e0-4d87-3a25-a9b3-3172670c3886" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 26\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "e80e8684-b763-3739-a353-807bb22c85a2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 26\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "4910d127-3f3e-33f0-b5a0-27dd6528a4d5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 26\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "f27918a7-81dd-3e1c-8fa8-ff1501b98713" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'double' should not be used", "markdown": "**\\[Line 26\\] The basic numerical type 'double' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "4cc6e7e9-75e4-3f2a-baae-4e93116de121" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'getArea' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 26\\] The 'getArea' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "629f75eb-9742-39ef-81a2-e6d321012871" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'getArea' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 26\\] The 'getArea' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "c96da428-1ba8-3bc5-8ca2-f89c4f8abc8b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'getArea' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 26\\] The 'getArea' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "f5b4a23a-7c20-3295-b085-61793c5b39ca" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'getArea' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 26\\] The 'getArea' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "64083020-b45a-3a94-bb40-5fda4b4aeaa2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "CODSTA-CPP-25", "level": "warning", "message": { "text": "Make virtual functions nonpublic, and public functions nonvirtual: getArea", "markdown": "**\\[Line 26\\] Make virtual functions nonpublic, and public functions nonvirtual: getArea**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "0c635a27-71ce-302c-b50e-6028802098fd" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "CODSTA-MCPP-05", "level": "warning", "message": { "text": "The 'getArea' function should be declared with the 'override' specifier", "markdown": "**\\[Line 26\\] The 'getArea' function should be declared with the 'override' specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "cade98d6-3a10-3397-ada3-2de043b3bf7e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A10_3_2-a", "level": "error", "message": { "text": "The 'getArea' function should be declared with the 'override' specifier", "markdown": "**\\[Line 26\\] The 'getArea' function should be declared with the 'override' specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "bc2fce9d-9593-31c4-bf45-995657ae6e20" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "HICPP-10_2_1-a", "level": "warning", "message": { "text": "The 'getArea' function should be declared with the 'override' specifier", "markdown": "**\\[Line 26\\] The 'getArea' function should be declared with the 'override' specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "792ee2ca-2f5f-3af0-97a1-794bc6fa927d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "CODSTA-MCPP-24", "level": "warning", "message": { "text": "Declaration of virtual function 'getArea' should have 'override' or 'final' specifier", "markdown": "**\\[Line 26\\] Declaration of virtual function 'getArea' should have 'override' or 'final' specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "09f6e013-b681-361a-a7c6-a909b35e76a6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "AUTOSAR-A10_3_1-a", "level": "error", "message": { "text": "Declaration of virtual function 'getArea' should have 'override' or 'final' specifier", "markdown": "**\\[Line 26\\] Declaration of virtual function 'getArea' should have 'override' or 'final' specifier**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "3c27dfc9-ad7b-3429-b0f5-4371fd18b820" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "FORMAT-28", "level": "warning", "message": { "text": "Return type is not placed in line before function 'getArea'", "markdown": "**\\[Line 26\\] Return type is not placed in line before function 'getArea'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "d437d1c1-b6b9-37e7-aae3-bc6e804b0db6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'getArea' has Cyclomatic Complexity value: 1", "markdown": "**\\[Line 26\\] Function 'getArea' has Cyclomatic Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "417f6a30-7a5c-3d53-b3ac-77f4fbb1db45" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'getArea' has Essential Complexity value: 1", "markdown": "**\\[Line 26\\] Function 'getArea' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "4141706f-9331-3a39-ae73-dd7a2511ec85" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "NAMING-17", "level": "warning", "message": { "text": "Naming convention not followed: getArea", "markdown": "**\\[Line 26\\] Naming convention not followed: getArea**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "8827ac20-8e2f-39e8-83f5-75d7ce504f8e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "OOP-21", "level": "warning", "message": { "text": "Use the virtual keyword for 'getArea' function", "markdown": "**\\[Line 26\\] Use the virtual keyword for 'getArea' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "f302b602-9e9b-3cf2-a0b7-a3ae7828a44d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "MISRA2008-10_3_2", "level": "error", "message": { "text": "Use the virtual keyword for 'getArea' function", "markdown": "**\\[Line 26\\] Use the virtual keyword for 'getArea' function**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "0c74816f-fe5b-300c-8c94-9fe986ca773b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "OOP-25", "level": "warning", "message": { "text": "Function 'getArea' is both virtual and inline", "markdown": "**\\[Line 26\\] Function 'getArea' is both virtual and inline**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "37b58b13-742e-362c-84ee-eabdf7b7be95" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'getArea' function is not preceded by a comment", "markdown": "**\\[Line 26\\] The definition of the 'getArea' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "0101e5a7-aca8-3824-a493-79fca81ccaf0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'getArea' function is not preceded by a comment", "markdown": "**\\[Line 26\\] The definition of the 'getArea' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "49b466cf-3e3a-38c8-8ec4-fd0b17bb1799" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "JSF-051", "level": "warning", "message": { "text": "The name 'getArea' should be composed only of lowercase letters", "markdown": "**\\[Line 26\\] The name 'getArea' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "d69b5b3d-7378-3e1e-a4da-99249858291f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "NAMING-44", "level": "warning", "message": { "text": "The name 'getArea' should be composed only of lowercase letters", "markdown": "**\\[Line 26\\] The name 'getArea' should be composed only of lowercase letters**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "786588f5-08a6-3056-998e-62e2f7ee0461" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 12, "endColumn": 13 } } } ] }, { "ruleId": "FORMAT-25_b", "level": "warning", "message": { "text": "'return' statement should be used with parenthesis", "markdown": "**\\[Line 26\\] 'return' statement should be used with parenthesis**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "a0da2ada-0b3f-3db6-af97-5ceaded2ec07" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 30, "endColumn": 31 } } } ] }, { "ruleId": "JSF-151", "level": "warning", "message": { "text": "Literal constant '3.141592653' is used", "markdown": "**\\[Line 26\\] Literal constant '3\\.141592653' is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "f6b3278c-dc3b-3adf-ac64-c57dd5941019" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 37, "endColumn": 38 } } } ] }, { "ruleId": "CODSTA-26", "level": "warning", "message": { "text": "Literal constant '3.141592653' is used", "markdown": "**\\[Line 26\\] Literal constant '3\\.141592653' is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "2c2f453c-6125-3b22-8494-042e205700ba" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 37, "endColumn": 38 } } } ] }, { "ruleId": "AUTOSAR-A5_1_1-a", "level": "error", "message": { "text": "Literal constant '3.141592653' is used", "markdown": "**\\[Line 26\\] Literal constant '3\\.141592653' is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "46d4c53d-3efa-33fa-b241-7cf24ea37139" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 37, "endColumn": 38 } } } ] }, { "ruleId": "HICPP-5_1_1-a", "level": "warning", "message": { "text": "Literal constant '3.141592653' is used", "markdown": "**\\[Line 26\\] Literal constant '3\\.141592653' is used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "72e7ddf5-81d3-310f-b44e-f33a9973c100" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 37, "endColumn": 38 } } } ] }, { "ruleId": "MISRA2008-0_4_2", "level": "note", "message": { "text": "floating-point arithmetic is not documented", "markdown": "**\\[Line 26\\] floating\\-point arithmetic is not documented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "d1a6e2ae-0389-3ab4-a721-822b381e03a2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 37, "endColumn": 38 } } } ] }, { "ruleId": "OWASP2019-API9-d", "level": "warning", "message": { "text": "floating-point arithmetic is not documented", "markdown": "**\\[Line 26\\] floating\\-point arithmetic is not documented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "9fb1bfd2-ee9b-3ed6-8d27-fb0902cee520" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 37, "endColumn": 38 } } } ] }, { "ruleId": "AUTOSAR-M0_4_2-a", "level": "error", "message": { "text": "floating-point arithmetic is not documented", "markdown": "**\\[Line 26\\] floating\\-point arithmetic is not documented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "5401c724-012c-3219-8b4b-a9911b9c1268" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 37, "endColumn": 38 } } } ] }, { "ruleId": "COMMENT-10", "level": "warning", "message": { "text": "floating-point arithmetic is not documented", "markdown": "**\\[Line 26\\] floating\\-point arithmetic is not documented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "c6e3a5f5-582d-30a2-9855-12b0bf083adc" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 37, "endColumn": 38 } } } ] }, { "ruleId": "JSF-061", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 26\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "f377ad13-3a24-3399-91d3-da09e8c2b30e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 70, "endColumn": 71 } } } ] }, { "ruleId": "FORMAT-42", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 26\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "f35e2039-4101-37dc-ace3-9a6f14456f70" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 70, "endColumn": 71 } } } ] }, { "ruleId": "JSF-060_a", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 26\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "4bc81fef-f2ae-3cbd-b608-511653174382" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 70, "endColumn": 71 } } } ] }, { "ruleId": "FORMAT-03", "level": "warning", "message": { "text": "Put the closing brace '}' on its own line", "markdown": "**\\[Line 26\\] Put the closing brace '\\}' on its own line**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "-535658836", "unbViolId": "dbdfe487-7da9-3f6f-b758-83a41eec15de" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 26, "startColumn": 70, "endColumn": 71 } } } ] }, { "ruleId": "CODSTA-223", "level": "warning", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 27\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "deb57eb5-c3d7-3439-8409-8c12e84e47c4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "AUTOSAR-A3_9_1-b", "level": "error", "message": { "text": "Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type", "markdown": "**\\[Line 27\\] Use the fixed width integer type from <cstdint> instead of the 'int' basic numerical type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "bfc675a9-c16d-384e-8f7e-5253a84a10ca" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "HICPP-7_1_6-b", "level": "warning", "message": { "text": "Do not use the 'int' standard integer type", "markdown": "**\\[Line 27\\] Do not use the 'int' standard integer type**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "c8d0cdd6-f995-30cd-b80a-d0e8843e24df" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRAC2012-DIR_4_6-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 27\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "1e4756e6-0f4b-3bbe-b66e-fa450399dc59" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "JSF-209_b", "level": "error", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 27\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "3b346dff-c969-3227-a861-8f08da1030c5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2004-6_3_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 27\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "7627cc55-755b-3b6e-b0df-e932d5835459" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2012-DIR-4_6_b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 27\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "e01c59ca-e9c0-3996-a606-c213a07896d2" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "HICPP-3_5_1-b", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 27\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "653549b8-8c48-3789-b179-3a6cc673bab6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA2008-3_9_2", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 27\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "ba1a5382-f449-379a-8567-a5599cae66e5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "MISRA-013", "level": "warning", "message": { "text": "The basic numerical type 'int' should not be used", "markdown": "**\\[Line 27\\] The basic numerical type 'int' should not be used**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "06d9406d-68fe-358b-b0a4-8a845a865df0" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "COMMENT-14", "level": "warning", "message": { "text": "The 'contains' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 27\\] The 'contains' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "da9a71a0-b551-3c8b-83d1-f3789a5fc74e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-a", "level": "error", "message": { "text": "The 'contains' function should be preceded by a comment that contains the '@brief' tag", "markdown": "**\\[Line 27\\] The 'contains' function should be preceded by a comment that contains the '@brief' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "bc6f975b-a9aa-355c-8430-bcc9a6789ca9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'point' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 27\\] The 'point' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "cc3779fc-5976-3008-bb8f-7699545b9973" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'point' parameter does not have a corresponding '@param' tag in the comment before the function declaration", "markdown": "**\\[Line 27\\] The 'point' parameter does not have a corresponding '@param' tag in the comment before the function declaration**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "d8efdccb-3322-3c9e-a376-7b569399b52c" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "AUTOSAR-A2_7_3-b", "level": "error", "message": { "text": "The 'contains' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 27\\] The 'contains' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "e5a1ba29-0e60-3b7a-a39d-8e3fbbda252d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "COMMENT-14_b", "level": "warning", "message": { "text": "The 'contains' function should be preceded by a comment that contains the '@return' tag", "markdown": "**\\[Line 27\\] The 'contains' function should be preceded by a comment that contains the '@return' tag**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "03df3596-83ff-3b8c-8a9c-ca545a36293e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "PORT-13", "level": "warning", "message": { "text": "'contains' shall be declared as unsigned int or signed int", "markdown": "**\\[Line 27\\] 'contains' shall be declared as unsigned int or signed int**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "bebda40a-8e2a-3176-bf9b-a68d3feeb423" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "FORMAT-28", "level": "warning", "message": { "text": "Return type is not placed in line before function 'contains'", "markdown": "**\\[Line 27\\] Return type is not placed in line before function 'contains'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "096e799d-6271-343f-814c-3e06aaf59375" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "METRICS-29", "level": "note", "message": { "text": "Function 'contains' has Cyclomatic Complexity value: 1", "markdown": "**\\[Line 27\\] Function 'contains' has Cyclomatic Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "76dc7d5d-0828-311e-ac65-bb1c1281458b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "METRICS-33", "level": "note", "message": { "text": "Function 'contains' has Essential Complexity value: 1", "markdown": "**\\[Line 27\\] Function 'contains' has Essential Complexity value: 1**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "766511a2-4bd2-317f-a3f1-34333a94f573" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-17", "level": "warning", "message": { "text": "Naming convention not followed: contains", "markdown": "**\\[Line 27\\] Naming convention not followed: contains**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "1a54e3d6-69ee-3a53-b854-051aa5a8f985" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "COMMENT-04", "level": "warning", "message": { "text": "The definition of the 'contains' function is not preceded by a comment", "markdown": "**\\[Line 27\\] The definition of the 'contains' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "4b533338-f104-3783-85ea-428f8880a36e" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "JSF-134", "level": "warning", "message": { "text": "The definition of the 'contains' function is not preceded by a comment", "markdown": "**\\[Line 27\\] The definition of the 'contains' function is not preceded by a comment**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "db82d1a0-6627-3974-8303-39a2d8f4809a" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 9, "endColumn": 10 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier 'point' differs only by case from identifier 'POINT' declared in file 'windef.h'", "markdown": "**\\[Line 27\\] The identifier 'point' differs only by case from identifier 'POINT' declared in file 'windef\\.h'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "11f81ea8-a638-3ab4-a0b5-949e388da223" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 24, "endColumn": 25 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier 'point' differs only by case from identifier 'POINT' declared in file 'windef.h'", "markdown": "**\\[Line 27\\] The identifier 'point' differs only by case from identifier 'POINT' declared in file 'windef\\.h'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "a9952920-ca5f-3bb8-b7d8-5689be8f8561" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 24, "endColumn": 25 } } } ] }, { "ruleId": "NAMING-45", "level": "warning", "message": { "text": "The identifier 'point' differs only by case from identifier 'Point' declared in file 'Point.hpp'", "markdown": "**\\[Line 27\\] The identifier 'point' differs only by case from identifier 'Point' declared in file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "f69b818d-fc11-3335-a972-3ca724c9685b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 24, "endColumn": 25 } } } ] }, { "ruleId": "JSF-048", "level": "warning", "message": { "text": "The identifier 'point' differs only by case from identifier 'Point' declared in file 'Point.hpp'", "markdown": "**\\[Line 27\\] The identifier 'point' differs only by case from identifier 'Point' declared in file 'Point\\.hpp'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "174406a2-c13c-3bae-bf07-7d26a3560b1b" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 24, "endColumn": 25 } } } ] }, { "ruleId": "MISRA2008-2_10_1", "level": "error", "message": { "text": "Identifier name: 'point' differs only by case from its type name: 'Point'", "markdown": "**\\[Line 27\\] Identifier name: 'point' differs only by case from its type name: 'Point'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "9aeb6b79-8185-32a7-97fb-c59704454c89" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 24, "endColumn": 25 } } } ] }, { "ruleId": "HICPP-2_4_1-a", "level": "warning", "message": { "text": "Identifier name: 'point' differs only by case from its type name: 'Point'", "markdown": "**\\[Line 27\\] Identifier name: 'point' differs only by case from its type name: 'Point'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "c50088a9-feea-3ea9-9cfa-6138bf1fc9f6" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 24, "endColumn": 25 } } } ] }, { "ruleId": "AUTOSAR-M2_10_1-a", "level": "error", "message": { "text": "Identifier name: 'point' differs only by case from its type name: 'Point'", "markdown": "**\\[Line 27\\] Identifier name: 'point' differs only by case from its type name: 'Point'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "cc7853b4-a8a9-3a20-a81c-f57ee2eef8f9" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 24, "endColumn": 25 } } } ] }, { "ruleId": "NAMING-47", "level": "warning", "message": { "text": "Identifier name: 'point' differs only by case from its type name: 'Point'", "markdown": "**\\[Line 27\\] Identifier name: 'point' differs only by case from its type name: 'Point'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "d4f7aac3-1b22-3ff3-b38e-4f69c7cd2596" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 24, "endColumn": 25 } } } ] }, { "ruleId": "OPT-14", "level": "warning", "message": { "text": "The parameter 'point' of function 'contains' is passed by value", "markdown": "**\\[Line 27\\] The parameter 'point' of function 'contains' is passed by value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "4a285fb2-0954-385b-8f40-ff7f8d92c0f1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 24, "endColumn": 25 } } } ] }, { "ruleId": "JSF-125_a", "level": "warning", "message": { "text": "The parameter 'point' of function 'contains' is passed by value", "markdown": "**\\[Line 27\\] The parameter 'point' of function 'contains' is passed by value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "fa9a27f4-d3a2-3f5e-96f0-f1b695582b3d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 24, "endColumn": 25 } } } ] }, { "ruleId": "JSF-117", "level": "warning", "message": { "text": "The parameter 'point' of function 'contains' is passed by value", "markdown": "**\\[Line 27\\] The parameter 'point' of function 'contains' is passed by value**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "29ac9049-c039-3330-8185-ebf136d98a67" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 24, "endColumn": 25 } } } ] }, { "ruleId": "CERT_C-API00-a", "level": "warning", "message": { "text": "Parameter 'point' is not validated before use", "markdown": "**\\[Line 27\\] Parameter 'point' is not validated before use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "60c9698f-672f-36be-b5e4-c548c48c7679" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 24, "endColumn": 25 } } } ] }, { "ruleId": "CODSTA-86", "level": "warning", "message": { "text": "Parameter 'point' is not validated before use", "markdown": "**\\[Line 27\\] Parameter 'point' is not validated before use**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "398250049", "unbViolId": "49094a74-f885-32a7-a4fa-4b2c982e9453" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 27, "startColumn": 24, "endColumn": 25 } } } ] }, { "ruleId": "METRICS-19", "level": "warning", "message": { "text": "Percentage of comment lines vs. all method's lines is: 0", "markdown": "**\\[Line 28\\] Percentage of comment lines vs\\. all method's lines is: 0**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "30537851", "unbViolId": "936c798a-90bb-383d-a5e6-db5c12a7041d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 28, "startColumn": 1, "endColumn": 2 } } } ] }, { "ruleId": "JSF-043", "level": "warning", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 29\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "538754804", "unbViolId": "d4434579-4015-32a9-b59d-8f4988746dac" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "FORMAT-01", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 29\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "538754804", "unbViolId": "af32ce13-4f4d-3745-bbb9-d6c3cc2e78e1" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "HICPP-2_1_1-a", "level": "note", "message": { "text": "Non-ascii tab found", "markdown": "**\\[Line 29\\] Non\\-ascii tab found**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "538754804", "unbViolId": "52baeb61-3da6-314b-91bf-a2f92230adf4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 5, "endColumn": 6 } } } ] }, { "ruleId": "FORMAT-25_b", "level": "warning", "message": { "text": "'return' statement should be used with parenthesis", "markdown": "**\\[Line 29\\] 'return' statement should be used with parenthesis**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "538754804", "unbViolId": "b77830e3-0d28-3306-9e9d-a92e26a75b05" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "PB-05", "level": "warning", "message": { "text": "Function 'contains' has declared return type 'int' but returns value of type 'bool'", "markdown": "**\\[Line 29\\] Function 'contains' has declared return type 'int' but returns value of type 'bool'**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "538754804", "unbViolId": "67b48e56-b930-36af-a969-2d58864db3f7" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 6, "endColumn": 7 } } } ] }, { "ruleId": "MISRA2008-5_0_5_b", "level": "error", "message": { "text": "Implicit conversion from integral to floating type in comparison expression", "markdown": "**\\[Line 29\\] Implicit conversion from integral to floating type in comparison expression**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "538754804", "unbViolId": "a6f0c0b5-cacb-3401-a5ec-8180b5010b43" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "CERT_C-EXP39-a", "level": "warning", "message": { "text": "Implicit conversion from integral to floating type in comparison expression", "markdown": "**\\[Line 29\\] Implicit conversion from integral to floating type in comparison expression**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "538754804", "unbViolId": "4833dd14-dd7e-3d3e-96c2-db10149e6bd4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "AUTOSAR-M5_0_5-a", "level": "error", "message": { "text": "Implicit conversion from integral to floating type in comparison expression", "markdown": "**\\[Line 29\\] Implicit conversion from integral to floating type in comparison expression**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "538754804", "unbViolId": "9d6ad810-283c-34d9-b8e4-25ebe31204be" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "MISRA2004-10_1_b", "level": "warning", "message": { "text": "Implicit conversion from integral to floating type in comparison expression", "markdown": "**\\[Line 29\\] Implicit conversion from integral to floating type in comparison expression**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "538754804", "unbViolId": "ebf6975e-86d4-3072-a31f-ef3f4d711ec5" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 13, "endColumn": 14 } } } ] }, { "ruleId": "CODSTA-CPP-15", "level": "warning", "message": { "text": "Put function 'getPosition' that are used in the body of inline member function into separate file", "markdown": "**\\[Line 29\\] Put function 'getPosition' that are used in the body of inline member function into separate file**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "538754804", "unbViolId": "552acc99-e401-3b91-ae5f-8d55b449fa19" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 36, "endColumn": 37 } } } ] }, { "ruleId": "MISRA2008-0_4_2", "level": "note", "message": { "text": "floating-point arithmetic is not documented", "markdown": "**\\[Line 29\\] floating\\-point arithmetic is not documented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "538754804", "unbViolId": "773cb9e0-ba59-3581-a045-24a89e8fa0e4" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 55, "endColumn": 56 } } } ] }, { "ruleId": "OWASP2019-API9-d", "level": "warning", "message": { "text": "floating-point arithmetic is not documented", "markdown": "**\\[Line 29\\] floating\\-point arithmetic is not documented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "538754804", "unbViolId": "17718308-63fc-32a5-90c9-32850d0d068f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 55, "endColumn": 56 } } } ] }, { "ruleId": "AUTOSAR-M0_4_2-a", "level": "error", "message": { "text": "floating-point arithmetic is not documented", "markdown": "**\\[Line 29\\] floating\\-point arithmetic is not documented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "538754804", "unbViolId": "7add7426-c9bd-3ddd-b20c-a733d21aae0d" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 55, "endColumn": 56 } } } ] }, { "ruleId": "COMMENT-10", "level": "warning", "message": { "text": "floating-point arithmetic is not documented", "markdown": "**\\[Line 29\\] floating\\-point arithmetic is not documented**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "538754804", "unbViolId": "c3e31877-7965-3c52-926f-7ebe436de726" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 29, "startColumn": 55, "endColumn": 56 } } } ] }, { "ruleId": "HICPP-2_3_1-a", "level": "warning", "message": { "text": "Use \/\/ comments only", "markdown": "**\\[Line 33\\] Use \/\/ comments only**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "652807523", "unbViolId": "ef3c7c3d-76b0-3301-8fb6-d13e645c2f4f" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 33, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "JSF-126", "level": "error", "message": { "text": "Use \/\/ comments only", "markdown": "**\\[Line 33\\] Use \/\/ comments only**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "652807523", "unbViolId": "89b0bb90-8238-3952-a7c6-7fe274ea5e63" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 33, "startColumn": 8, "endColumn": 9 } } } ] }, { "ruleId": "COMMENT-01", "level": "warning", "message": { "text": "Use \/\/ comments only", "markdown": "**\\[Line 33\\] Use \/\/ comments only**" }, "partialFingerprints": { "violType": "StdViol", "lineHash": "652807523", "unbViolId": "7484c5ac-dcba-3525-8bad-eeb510f46d72" }, "locations": [ { "physicalLocation": { "artifactLocation": {"uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" }, "region": { "startLine": 33, "startColumn": 8, "endColumn": 9 } } } ] }], "artifacts": [ { "location": { "uri": "DeadLock.cpp", "uriBaseId": "PROJECTROOT-1" } },{ "location": { "uri": "DivisionByZero.cpp", "uriBaseId": "PROJECTROOT-1" } },{ "location": { "uri": "MemoryLeak.cpp", "uriBaseId": "PROJECTROOT-1" } },{ "location": { "uri": "NullPointer.cpp", "uriBaseId": "PROJECTROOT-1" } },{ "location": { "uri": "Point.hpp", "uriBaseId": "PROJECTROOT-1" } },{ "location": { "uri": "Shapes.hpp", "uriBaseId": "PROJECTROOT-1" } }] } ] }